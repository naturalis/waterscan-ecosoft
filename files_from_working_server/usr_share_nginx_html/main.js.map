{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/google-map/results-gmap.component.css","webpack:///./src/app/google-map/results-gmap.component.html","webpack:///./src/app/google-map/results-gmap.component.ts","webpack:///./src/app/help/help.component.css","webpack:///./src/app/help/help.component.html","webpack:///./src/app/help/help.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/map/map.component.css","webpack:///./src/app/map/map.component.html","webpack:///./src/app/map/map.component.ts","webpack:///./src/app/models/chart-entity.model.ts","webpack:///./src/app/models/marker.model.ts","webpack:///./src/app/models/markerLocation.model.ts","webpack:///./src/app/models/reference.model.ts","webpack:///./src/app/models/sample.model.ts","webpack:///./src/app/models/taxon.model.ts","webpack:///./src/app/models/user.model.ts","webpack:///./src/app/models/waterschap.model.ts","webpack:///./src/app/models/watertype.model.ts","webpack:///./src/app/models/wew.model.ts","webpack:///./src/app/models/wewValue.model.ts","webpack:///./src/app/new-wew-bar-chart/new-wew-bar-chart.component.css","webpack:///./src/app/new-wew-bar-chart/new-wew-bar-chart.component.html","webpack:///./src/app/new-wew-bar-chart/new-wew-bar-chart.component.ts","webpack:///./src/app/reference/reference-edit/reference-edit.component.css","webpack:///./src/app/reference/reference-edit/reference-edit.component.html","webpack:///./src/app/reference/reference-edit/reference-edit.component.ts","webpack:///./src/app/reference/reference-list/reference-list.component.css","webpack:///./src/app/reference/reference-list/reference-list.component.html","webpack:///./src/app/reference/reference-list/reference-list.component.ts","webpack:///./src/app/sample-location-table/sample-Location-table.component.css","webpack:///./src/app/sample-location-table/sample-Location-table.component.html","webpack:///./src/app/sample-location-table/sample-location-table.component.ts","webpack:///./src/app/sample/new-sample-compare/new-sample-compare.component.css","webpack:///./src/app/sample/new-sample-compare/new-sample-compare.component.html","webpack:///./src/app/sample/new-sample-compare/new-sample-compare.component.ts","webpack:///./src/app/sample/sample-compare/sample-compare.component.css","webpack:///./src/app/sample/sample-compare/sample-compare.component.html","webpack:///./src/app/sample/sample-compare/sample-compare.component.ts","webpack:///./src/app/sample/sample-quality-sheet/sample-quality-sheet.component.css","webpack:///./src/app/sample/sample-quality-sheet/sample-quality-sheet.component.html","webpack:///./src/app/sample/sample-quality-sheet/sample-quality-sheet.component.ts","webpack:///./src/app/sample/sample-upload/sample-upload.component.css","webpack:///./src/app/sample/sample-upload/sample-upload.component.html","webpack:///./src/app/sample/sample-upload/sample-upload.component.ts","webpack:///./src/app/sample/sample-view/sample-view.component.css","webpack:///./src/app/sample/sample-view/sample-view.component.html","webpack:///./src/app/sample/sample-view/sample-view.component.ts","webpack:///./src/app/services/AuthInterceptor.service.ts","webpack:///./src/app/services/api.location.service.ts","webpack:///./src/app/services/api.marker.service.ts","webpack:///./src/app/services/api.reference.service.ts","webpack:///./src/app/services/api.sample.service.ts","webpack:///./src/app/services/api.service.ts","webpack:///./src/app/services/api.taxon.service.ts","webpack:///./src/app/services/api.user.service.ts","webpack:///./src/app/services/api.waterschap.service.ts","webpack:///./src/app/services/api.watertype.service.ts","webpack:///./src/app/services/api.wew.service.ts","webpack:///./src/app/services/arrayUtils.ts","webpack:///./src/app/services/auth.guard.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/color.ts","webpack:///./src/app/services/global.reference.service.ts","webpack:///./src/app/services/palette.ts","webpack:///./src/app/sidenav/sidenav.component.css","webpack:///./src/app/sidenav/sidenav.component.html","webpack:///./src/app/sidenav/sidenav.component.ts","webpack:///./src/app/taxon/taxon-import-structure/taxon-import-structure.component.css","webpack:///./src/app/taxon/taxon-import-structure/taxon-import-structure.component.html","webpack:///./src/app/taxon/taxon-import-structure/taxon-import-structure.component.ts","webpack:///./src/app/taxon/taxon-manage-groups/taxon-manage-groups-edit.component.html","webpack:///./src/app/taxon/taxon-manage-groups/taxon-manage-groups.component.css","webpack:///./src/app/taxon/taxon-manage-groups/taxon-manage-groups.component.html","webpack:///./src/app/taxon/taxon-manage-groups/taxon-manage-groups.component.ts","webpack:///./src/app/taxon/taxon-tree/taxon-tree.component.css","webpack:///./src/app/taxon/taxon-tree/taxon-tree.component.html","webpack:///./src/app/taxon/taxon-tree/taxon-tree.component.ts","webpack:///./src/app/taxon/taxon-view/taxon-view.component.css","webpack:///./src/app/taxon/taxon-view/taxon-view.component.html","webpack:///./src/app/taxon/taxon-view/taxon-view.component.ts","webpack:///./src/app/user/create-account/create-account.component.html","webpack:///./src/app/user/create-account/create-account.component.ts","webpack:///./src/app/user/edit-account/edit-account.component.css","webpack:///./src/app/user/edit-account/edit-account.component.html","webpack:///./src/app/user/edit-account/edit-account.component.ts","webpack:///./src/app/water/water.component.css","webpack:///./src/app/water/water.component.html","webpack:///./src/app/water/water.component.ts","webpack:///./src/app/wew/wew-bar-chart/wew-bar-chart.component.css","webpack:///./src/app/wew/wew-bar-chart/wew-bar-chart.component.html","webpack:///./src/app/wew/wew-bar-chart/wew-bar-chart.component.ts","webpack:///./src/app/wew/wew-upload/wew-upload.component.css","webpack:///./src/app/wew/wew-upload/wew-upload.component.html","webpack:///./src/app/wew/wew-upload/wew-upload.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///fs (ignored)","webpack:///crypto (ignored)","webpack:///stream (ignored)"],"names":[],"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","file":"main.js","sourcesContent":["var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\tvar module = __webpack_require__(id);\n\treturn module;\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"span {\\r\\n  font-size: 16px;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.app-sidenav {\\r\\n  background-color: #333;\\r\\n  padding: 0;\\r\\n  min-width: 100px;\\r\\n}\\r\\n\\r\\nmat-sidenav-container{\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  padding: 0;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n#filtertoolbar {\\r\\n  background-color: #333;\\r\\n}\\r\\n\\r\\n.routeContainer {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.routeContainer>* {\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n#hamburger {\\r\\n  margin-top: 11px;\\r\\n}\\r\\n\"","module.exports = \"<mat-sidenav-container>\\r\\n  <mat-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\">\\r\\n    <app-navigatie></app-navigatie>\\r\\n  </mat-sidenav>\\r\\n\\r\\n  <mat-toolbar color=\\\"primary\\\">\\r\\n    <button id=\\\"hamburger\\\" class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\">\\r\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\r\\n    </button>\\r\\n\\r\\n    <h1>WATERSCAN</h1>\\r\\n\\r\\n    <!-- This fills the remaining space of the current row -->\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n\\r\\n    <div *ngIf=\\\"authenticationService.isLoggedIn(); then logout else login\\\"></div>\\r\\n    <ng-template #login>\\r\\n      <button mat-raised-button (click)=\\\"toLogin()\\\">Login</button>\\r\\n    </ng-template>\\r\\n    <ng-template #logout>\\r\\n      <div style=\\\"margin-right: 25px;\\\">\\r\\n        <button mat-raised-button style=\\\"background-color: white;\\\">\\r\\n          <mat-slide-toggle color=\\\"warn\\\" class=\\\"example-margin\\\" [(ngModel)]=\\\"filter_check\\\" (click)=\\\"toggleSound()\\\" (change)=\\\"filter()\\\" >\\r\\n            <p style=\\\"font-weight: bold;\\\"> Filters</p>\\r\\n          </mat-slide-toggle>\\r\\n        </button>\\r\\n      </div>\\r\\n      <button mat-raised-button (click)=\\\"toLogout()\\\">Logout</button>\\r\\n    </ng-template>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-toolbar id=\\\"filtertoolbar\\\" @fade *ngIf=\\\"filter_check\\\">\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n\\r\\n    <div>\\r\\n      <mat-checkbox [(ngModel)]=\\\"eutro_checked\\\" color=\\\"warn\\\" style=\\\"margin-right: 30px;\\\" (change)=\\\"filter()\\\">\\r\\n        <span>Eutrofiëring</span>\\r\\n      </mat-checkbox>\\r\\n      <mat-checkbox [(ngModel)]=\\\"eutro_3_checked\\\" color=\\\"warn\\\" style=\\\"margin-right: 30px;\\\" (change)=\\\"filter()\\\" *ngIf=\\\"eutro_checked\\\">\\r\\n        <span>+3</span>\\r\\n      </mat-checkbox>\\r\\n    </div>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n\\r\\n    <div>\\r\\n      <mat-checkbox [(ngModel)]=\\\"hydro_checked\\\" color=\\\"warn\\\" style=\\\"margin-right: 30px;\\\" (change)=\\\"filter()\\\">\\r\\n        <span>Hydromorfologie</span>\\r\\n      </mat-checkbox>\\r\\n      <mat-checkbox [(ngModel)]=\\\"hydro_3_checked\\\" color=\\\"warn\\\" style=\\\"margin-right: 30px;\\\" (change)=\\\"filter()\\\" *ngIf=\\\"hydro_checked\\\">\\r\\n        <span>+3</span>\\r\\n      </mat-checkbox>\\r\\n    </div>\\r\\n\\r\\n    <span class=\\\"fill-remaining-space\\\"></span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <div class=\\\"routeContainer\\\" [@routeAnimation]=\\\"getDepth(myOutlet)\\\">\\r\\n    <router-outlet #myOutlet=\\\"outlet\\\"></router-outlet>\\r\\n  </div>\\r\\n</mat-sidenav-container>\\r\\n\\r\\n\"","import {ViewChild, Component, HostListener, OnInit, Input} from '@angular/core';\r\nimport { Location } from \"@angular/common\";\r\nimport {Router} from \"@angular/router\";\r\nimport { MatSidenav } from \"@angular/material\";\r\nimport {AuthenticationService} from \"./services/auth.service\";\r\nimport {ApiSampleService} from './services/api.sample.service';\r\nimport {CalculationSample} from './models/wew.model';\r\nimport {trigger, style, transition, animate, keyframes, query, stagger, state, group} from '@angular/animations';\r\nimport {WewValueCalc} from \"./models/wewValue.model\";\r\nimport {GlobalReferenceService} from \"./services/global.reference.service\";\r\nimport {ApiWewService} from \"./services/api.wew.service\";\r\nimport {ApiReferenceService} from \"./services/api.reference.service\";\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  providers: [AuthenticationService, ApiSampleService, GlobalReferenceService, ApiWewService, ApiReferenceService],\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  animations: [\r\n    trigger(\"fade\", [\r\n      transition(\"void => *\", [\r\n        style({backgroundColor: \"#3f51b5\", opacity: 0}),\r\n        animate(200)\r\n      ]),\r\n      transition(\"* => void\", [\r\n        animate(100, style({opacity: 0}))\r\n      ])\r\n    ]),\r\n    trigger('routeAnimation', [\r\n      transition('1 => 2, 1 => 3, 1 => 4, 1 => 5, 2 => 3, 2 => 4, 2 => 5, 3 => 4, 3 => 5, 4 => 5', [\r\n        style({ height: '!' }),\r\n        query(':enter', style({ transform: 'translateX(100%)' })),\r\n        query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 })),\r\n        group([\r\n          query(':leave', [\r\n            animate('0.5s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(-100%)' })),\r\n          ]),\r\n          query(':enter', animate('0.5s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(0)' }))),\r\n        ]),\r\n      ]),\r\n      transition('5 => 4, 5 => 3, 5 => 2, 5 => 1, 4 => 3, 4 => 2, 4 => 1, 3 => 2, 3 => 1, 2 => 1', [\r\n        style({ height: '!' }),\r\n        query(':enter', style({ transform: 'translateX(-100%)' })),\r\n        query(':enter, :leave', style({ position: 'absolute', top: 0, left: 0, right: 0 })),\r\n        group([\r\n          query(':leave', [\r\n            animate('0.5s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(100%)' })),\r\n          ]),\r\n          query(':enter', animate('0.5s cubic-bezier(.35,0,.25,1)', style({ transform: 'translateX(0)' }))),\r\n        ]),\r\n      ])\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: MatSidenav;\r\n  @Input() filter_check;\r\n  @Input() eutro_checked;\r\n  @Input() eutro_3_checked;\r\n  @Input() hydro_checked;\r\n  @Input() hydro_3_checked;\r\n\r\n  sound1 = new Audio(\"../assets/filter-on.mp3\");\r\n  sound2 = new Audio(\"../assets/filter-off.mp3\");\r\n  title = 'Waterscan';\r\n  loggedIn: boolean;\r\n\r\n  constructor(public router: Router, private location: Location, public authenticationService: AuthenticationService,\r\n              public sampleApi: ApiSampleService,\r\n              public apiWewService: ApiWewService,\r\n              public globalRef: GlobalReferenceService,\r\n              public referenceApi: ApiReferenceService) {}\r\n\r\n  private valueMapper:Map<number,WewValueCalc> = new Map();\r\n\r\n  toLogin() {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  toLogout() {\r\n    this.authenticationService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.globalRef.setService(this.sampleApi, this.apiWewService, this.referenceApi);\r\n    if (!this.authenticationService.isLoggedIn()){\r\n      this.router.navigate(['/login']);\r\n    }\r\n    if (window.innerWidth < 768) {\r\n      this.sidenav.close();\r\n    } else {\r\n      \r\n      this.sidenav.open();\r\n    }\r\n    this.sound1.load();\r\n    this.sound2.load();\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    if (event.target.innerWidth < 768)\r\n      this.sidenav.close();\r\n    else\r\n      this.sidenav.open();\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  filter() {\r\n    if(!this.filter_check){\r\n      this.eutro_checked = false;\r\n      this.eutro_3_checked = false;\r\n      this.hydro_checked = false;\r\n      this.hydro_3_checked  = false;\r\n    }\r\n    this.globalRef.filter_check = this.filter_check;\r\n    this.globalRef.eutro_checked = this.eutro_checked;\r\n    this.globalRef.eutro_3_checked = this.eutro_3_checked;\r\n    this.globalRef.hydro_checked = this.hydro_checked;\r\n    this.globalRef.hydro_3_checked  = this.hydro_3_checked;\r\n\r\n    this.globalRef.doFilter();\r\n  }\r\n\r\n  getDepth(outlet) {\r\n    return outlet.activatedRouteData[\"depth\"];\r\n  }\r\n\r\n  toggleSound() {\r\n    if (this.filter_check)\r\n      this.sound1.play();\r\n    else\r\n      this.sound2.play();\r\n\r\n    if (!this.filter_check) {\r\n      this.eutro_checked = false;\r\n      this.eutro_3_checked = false;\r\n      this.hydro_checked = false;\r\n      this.hydro_3_checked = false;\r\n    }\r\n  }\r\n}\r\n","import 'hammerjs';\r\n\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {HttpModule, JsonpModule} from '@angular/http';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {\r\n  MatCardModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatIconModule,\r\n  MatDialogModule,\r\n  MatSnackBarModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatGridListModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatCheckboxModule,\r\n} from '@angular/material';\r\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\r\nimport {AppComponent} from './app.component';\r\nimport {GMapsComponent} from './google-map/results-gmap.component';\r\nimport {CreateAccountComponent} from './user/create-account/create-account.component';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport {SidenavComponent} from './sidenav/sidenav.component';\r\nimport {SampleViewComponent} from './sample/sample-view/sample-view.component';\r\nimport {SampleUploadComponent} from './sample/sample-upload/sample-upload.component';\r\nimport {SampleLocationTableComponent} from \"./sample-location-table/sample-location-table.component\";\r\nimport {LoginComponent} from './login/login.component';\r\nimport {AuthGuard} from \"./services/auth.guard\";\r\nimport { WewUploadComponent } from './wew/wew-upload/wew-upload.component';\r\nimport { NgxEchartsModule } from 'ngx-echarts';\r\nimport { EditAccountComponent } from './user/edit-account/edit-account.component';\r\nimport { TaxonImportStructureComponent } from './taxon/taxon-import-structure/taxon-import-structure.component';\r\nimport { TaxonTreeComponent } from './taxon/taxon-tree/taxon-tree.component';\r\nimport { TaxonViewComponent } from './taxon/taxon-view/taxon-view.component';\r\nimport {WewBarChartComponent} from './wew/wew-bar-chart/wew-bar-chart.component';\r\nimport {WaterComponent} from './water/water.component';\r\nimport { TaxonManageGroupsComponent,TaxonManageGroupsEditComponent } from './taxon/taxon-manage-groups/taxon-manage-groups.component';\r\nimport {ReferenceListComponent} from './reference/reference-list/reference-list.component';\r\nimport {ReferenceEditComponent} from './reference/reference-edit/reference-edit.component';\r\nimport {LOCALE_ID} from '@angular/core';\r\nimport {SampleCompareComponent} from \"./sample/sample-compare/sample-compare.component\";\r\nimport {SampleQualitySheetComponent} from './sample/sample-quality-sheet/sample-quality-sheet.component';\r\nimport { HelpComponent } from './help/help.component';\r\nimport {MapComponent} from \"./map/map.component\";\r\nimport {AuthInterceptor} from \"./services/AuthInterceptor.service\";\r\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\r\nimport { registerLocaleData} from \"@angular/common\";\r\nimport localeNl from '@angular/common/locales/nl';\r\nimport {GlobalReferenceService} from './services/global.reference.service';\r\nimport { NewWewBarChartComponent } from './new-wew-bar-chart/new-wew-bar-chart.component';\r\nimport { NewSampleCompareComponent } from './sample/new-sample-compare/new-sample-compare.component';\r\nregisterLocaleData(localeNl);\r\n\r\nconst routes:Routes = [\r\n  {path: '', component: MapComponent, data: {depth: 2}},\r\n  {path: 'login', component: LoginComponent},\r\n  {path: 'map', component: MapComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'account', component: EditAccountComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'results/water/:id', component: WaterComponent, data: {depth: 3}, canActivate: [AuthGuard]},\r\n  {path: 'data', component: SampleLocationTableComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'sample/upload', component: SampleUploadComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'sample/view/:id', component: SampleViewComponent, data: {depth: 4}, canActivate: [AuthGuard]},\r\n  {path: 'sample/quality/:id', component: SampleQualitySheetComponent, data: {depth: 5}, canActivate: [AuthGuard]},\r\n  {path: 'taxon/view/:id', component: TaxonViewComponent, data: {depth: 3}, canActivate: [AuthGuard]},\r\n  {path: 'sample/compare', component: SampleCompareComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'help', data: {depth: 1}, component: HelpComponent},\r\n  /* Admin Routes */\r\n  {path: 'taxon/import', component: TaxonImportStructureComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'taxon/group', component: TaxonManageGroupsComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'wew/upload', component: WewUploadComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'reference/list', component: ReferenceListComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'reference/edit/:id', component: ReferenceEditComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  {path: 'admin/create-account', component: CreateAccountComponent, data: {depth: 2}, canActivate: [AuthGuard]},\r\n  /* Directs back to home if route is unknown */\r\n  {path: '**', component: HelpComponent, data: {depth: 1}, canActivate: [AuthGuard]}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MapComponent,\r\n    AppComponent,\r\n    CreateAccountComponent,\r\n    GMapsComponent,\r\n    SampleLocationTableComponent,\r\n    SidenavComponent,\r\n    SampleViewComponent,\r\n    SampleUploadComponent,\r\n    WewBarChartComponent,\r\n    LoginComponent,\r\n    EditAccountComponent,\r\n    WewUploadComponent,\r\n    TaxonImportStructureComponent,\r\n    TaxonTreeComponent,\r\n    TaxonViewComponent,\r\n    WaterComponent,\r\n    TaxonManageGroupsComponent,\r\n    TaxonManageGroupsEditComponent,\r\n    ReferenceListComponent,\r\n    ReferenceEditComponent,\r\n    SampleCompareComponent,\r\n    SampleQualitySheetComponent,\r\n    HelpComponent,\r\n    NewWewBarChartComponent,\r\n    NewSampleCompareComponent,\r\n  ],\r\n  entryComponents: [\r\n    TaxonManageGroupsEditComponent\r\n  ],\r\n  imports: [\r\n    ChartsModule,\r\n    NgxEchartsModule,\r\n    ChartsModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatRadioModule,\r\n    MatMenuModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    JsonpModule,\r\n    NgxDatatableModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forRoot(routes, {useHash: false}),\r\n  ],\r\n  providers: [GlobalReferenceService, AuthGuard, {provide: LOCALE_ID, useValue: \"nl-NL\"},\r\n    {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","module.exports = \"ngui-map {\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.iw-button, .search-button, .filter-button {\\r\\n  background-color: #3f51b5;\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.search-button, .iw-button {\\r\\n  margin-top: 20px;\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n.filter-button {\\r\\n  margin-top: 10px;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.filter-list {\\r\\n  float: left;\\r\\n  margin-left: 10px;\\r\\n}\\r\\n\\r\\n.filters {\\r\\n  margin-left: 30%;\\r\\n  width: 900px;\\r\\n}\\r\\n\\r\\n.app-action {\\r\\n  right: 20px;\\r\\n  top: 120px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"filters\\\" *ngIf=\\\"showFilters\\\">\\r\\n  <p class=\\\"filter-list\\\">\\r\\n    <mat-select name=\\\"waterschapName\\\" [(ngModel)]=\\\"filters.waterschapId\\\" placeholder=\\\"Waterschap naam\\\">\\r\\n      <mat-option [value]=\\\"0\\\">\\r\\n        Geen filter\\r\\n      </mat-option>\\r\\n      <mat-option *ngFor=\\\"let waterschap of waterschappen\\\"\\r\\n                 [value]=\\\"waterschap.id\\\">\\r\\n        {{waterschap.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </p>\\r\\n  <p class=\\\"filter-list\\\">\\r\\n    <mat-select name=\\\"watertypeName\\\" [(ngModel)]=\\\"filters.watertypeId\\\" placeholder=\\\"Watertype naam\\\">\\r\\n      <mat-option [value]=\\\"0\\\">\\r\\n        Geen filter\\r\\n      </mat-option>\\r\\n      <mat-option *ngFor=\\\"let watertype of watertypes\\\" [value]=\\\"watertype.id\\\">\\r\\n        ({{watertype.code}}) {{watertype.name}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </p>\\r\\n  <p class=\\\"filter-list\\\">\\r\\n    <mat-select name=\\\"lastTakenSample\\\" [(ngModel)]=\\\"filters.date\\\" placeholder=\\\"Jaar laatst genomen monster\\\">\\r\\n      <mat-option [value]=\\\"0\\\">\\r\\n        Geen filter\\r\\n      </mat-option>\\r\\n      <mat-option *ngFor=\\\"let year of filterYears\\\" [value]=\\\"year\\\">\\r\\n        Vanaf {{year}}\\r\\n      </mat-option>\\r\\n    </mat-select>\\r\\n  </p>\\r\\n  <button mat-raised-button class=\\\"filter-button\\\" (click)=\\\"retrieveMarkers()\\\"\\r\\n          type=\\\"submit\\\">FILTEREN\\r\\n  </button>\\r\\n  <button mat-raised-button class=\\\"filter-button\\\" (click)=\\\"refreshMarkers()\\\"\\r\\n          type=\\\"submit\\\">RESET\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<!-- <ngui-map [options]=\\\"mapConfig\\\">\\r\\n  <marker (click)=\\\"showMarkerInfo($event)\\\"\\r\\n          *ngFor=\\\"let pos of positions\\\"\\r\\n          [position]=\\\"pos\\\"\\r\\n          [title]=\\\"pos.title\\\">\\r\\n  </marker>\\r\\n  <info-window id=\\\"iw\\\">\\r\\n    <mat-list *ngIf=\\\"marker\\\">\\r\\n      <mat-list-item *ngIf=\\\"marker.markerLocation\\\">\\r\\n        <h3 matLine><b>Locatie</b></h3>\\r\\n        <p matLine>{{marker.markerLocation.description}}</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item *ngIf=\\\"marker.markerLocation\\\">\\r\\n        <h3 matLine><b>Mp</b></h3>\\r\\n        <p matLine>{{marker.markerLocation.code}}</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item *ngIf=\\\"marker.waterschap != undefined\\\">\\r\\n        <h3 matLine><b>Waterschap</b></h3>\\r\\n        <p matLine>{{marker.waterschap.name}}</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item>\\r\\n        <h3 matLine><b>Watertype</b></h3>\\r\\n        <p matLine *ngIf=\\\"marker.watertype\\\">\\r\\n          {{marker.watertype.name}}\\r\\n          ({{marker.watertype.code}})</p>\\r\\n        <p matLine *ngIf=\\\"marker.watertypeKrw\\\">\\r\\n          {{marker.watertypeKrw.name}}\\r\\n          ({{marker.watertypeKrw.code}})</p>\\r\\n      </mat-list-item>\\r\\n      <mat-list-item>\\r\\n        <h3 matLine><b>Laatst genomen monster</b></h3>\\r\\n        <p matLine>\\r\\n          {{marker.lastTakenSample}}</p>\\r\\n      </mat-list-item>\\r\\n    </mat-list>\\r\\n    <button *ngIf=\\\"marker.markerLocation\\\" class=\\\"iw-button\\\" mat-raised-button\\r\\n            [routerLink]=\\\"'/results/water/'+marker.markerLocation.id\\\">\\r\\n      <span class=\\\"mat-button-wrapper\\\">DETAILS</span>\\r\\n    </button>\\r\\n  </info-window>\\r\\n</ngui-map>-->\\r\\n\\r\\n<span class=\\\"app-action\\\">\\r\\n\\t<button mat-button class=\\\"search-button\\\" (click)=\\\"toggleFilters()\\\"><span>FILTER RESULTATEN</span>\\r\\n</button>\\r\\n</span>\\r\\n\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ApiLocationService} from '../services/api.location.service';\r\nimport {MarkerLocation} from '../models/markerLocation.model';\r\nimport {ApiWatertypeService} from '../services/api.watertype.service';\r\nimport {ApiWaterschapService} from \"../services/api.waterschap.service\";\r\nimport {Watertype} from \"../models/watertype.model\";\r\nimport {Waterschap} from \"../models/waterschap.model\";\r\nimport {ApiMarkerService} from \"../services/api.marker.service\";\r\nimport {ApiSampleService} from \"../services/api.sample.service\";\r\nimport {switchMap} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-results',\r\n  providers: [ApiLocationService, ApiWatertypeService, ApiWaterschapService, ApiMarkerService, ApiSampleService],\r\n  templateUrl: './results-gmap.component.html',\r\n  styleUrls: ['./results-gmap.component.css']\r\n})\r\nexport class GMapsComponent implements OnInit {\r\n  public positions = [];\r\n  public markers = [];\r\n  public watertypes = [];\r\n  public waterschappen = [];\r\n  public showFilters = false;\r\n  public marker = {\r\n    markerLocation: MarkerLocation,\r\n    watertype: Watertype,\r\n    watertypeKrw: Watertype,\r\n    waterschap: Waterschap,\r\n    lastTakenSample: String,\r\n  };\r\n  public filterYears = [];\r\n\r\n  public filters = {\r\n    waterschapId: '0',\r\n    watertypeId: '0',\r\n    date: '',\r\n  };\r\n\r\n  public mapStyle = [\r\n    {elementType: 'labels', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'administrative.country', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'administrative.country',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality', elementType: 'labels',\r\n      stylers: [{visibility: 'simplified'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {featureType: 'road', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'water', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'water', elementType: 'geometry.fill',\r\n      stylers: [{color: '#0d9ac7'}, {visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels',\r\n      stylers: [{visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels.text.fill',\r\n      stylers: [{color: '#000000'}, {visibility: 'on'}]\r\n    }];\r\n\r\n  public mapConfig = {\r\n    styles: this.mapStyle,\r\n    disableDefaultUI: false,\r\n    center: {lat: 52.152832, lng: 5.439478},\r\n    zoom: 8,\r\n  };\r\n\r\n  constructor(private apiWatertype: ApiWatertypeService,\r\n              private apiWaterschap: ApiWaterschapService,\r\n              private apiMarker: ApiMarkerService,\r\n              private apiSample: ApiSampleService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.retrieveMarkers();\r\n  }\r\n\r\n  public showMarkerInfo({target: marker}) {\r\n    this.retrieveSpecificMarker(marker);\r\n    marker.nguiMapComponent.openInfoWindow('iw', marker);\r\n  }\r\n\r\n  private retrieveSpecificMarker(marker) {\r\n    this.markers.forEach((item) => {\r\n      if (marker.getTitle() === 'm' + item.markerLocation.id) {\r\n        this.marker = item;\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  public retrieveMarkers() {\r\n    this.apiMarker.getAllFilteredMarkers(this.filters).subscribe(markers => {\r\n      this.markers = markers;\r\n      this.positions.splice(0);\r\n      this.markers.forEach((item) => {\r\n        this.insertIntoPositions(item);\r\n      });\r\n      this.retrieveWaterschappen();\r\n      this.retrieveWatertypes();\r\n      this.retrieveFilterYears();\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  public refreshMarkers() {\r\n    this.positions.splice(0);\r\n    this.filters = {\r\n      waterschapId: '0',\r\n      watertypeId: '0',\r\n      date: '',\r\n    };\r\n    this.retrieveMarkers();\r\n  }\r\n\r\n  private retrieveWaterschappen() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiWaterschap.getAll()))\r\n      .subscribe(items => {\r\n        this.waterschappen = items;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private retrieveWatertypes() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiWatertype.getAll()))\r\n      .subscribe(items => {\r\n        this.watertypes = items;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private retrieveFilterYears() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiSample.getDistinctYears()))\r\n      .subscribe(items => {\r\n        this.filterYears = items;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private insertIntoPositions(item) {\r\n    this.positions.push({\r\n      title: 'm' + <string><any>item.markerLocation.id,\r\n      lat: item.markerLocation.latitude,\r\n      lng: item.markerLocation.longitude\r\n    });\r\n  }\r\n\r\n  public toggleFilters() {\r\n    if (this.showFilters) {\r\n      this.showFilters = false;\r\n      return;\r\n    }\r\n    this.showFilters = true;\r\n  }\r\n}\r\n","module.exports = \"a {\\r\\n  text-decoration: none;\\r\\n  color: #3f51b5;\\r\\n}\\r\\n.left {\\r\\n  float: left;\\r\\n}\\r\\n.right {\\r\\n  float: right;\\r\\n  margin-right: 280px;\\r\\n}\\r\\n.clear {\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    <span class=\\\"mat-headline\\\">Hulp <mat-icon class=\\\"example-tab-icon\\\">help_outline</mat-icon></span>\\r\\n  </mat-card-title>\\r\\n  <p>Hieronder worden enkele beschrijvingen gegeven over wat u kunt doen met de applicatie en hoe deze werkt...</p><br>\\r\\n  <mat-tab-group>\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        ONDERZOEKEN <mat-icon class=\\\"example-tab-icon\\\">search</mat-icon>\\r\\n      </ng-template>\\r\\n      <p><br>U kunt een divers niveau aan informatie benaderen in de applicatie door gebruik te maken van de navigatiebalk. <br><br>\\r\\n        Bent u bijvoorbeeld op zoek naar monsters van een bepaalde locatie? Neem dan vooral een kijkje bij de <a routerLink=\\\"/map\\\">landkaart</a>. <br><br>\\r\\n        Heeft u meer interesse in het naast elkaar zetten van bepaalde monsters? Klik dan op het kopje <a routerLink=\\\"/sample/compare\\\">monsters vergelijken</a>. <br><br>\\r\\n        Een plek waar altijd wel iets nuttigs staat is de pagina genaamd <a routerLink=\\\"/data\\\">algemene data</a>. Gebruik daar vooral de zoekbalk om effectief te werken!\\r\\n      </p>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        REKENREGELS <mat-icon class=\\\"example-tab-icon\\\">bug_report</mat-icon>\\r\\n      </ng-template>\\r\\n      <p><br> Voor u is het handig om te weten hoe de tools van de applicatie zijn gebouwd. <br><br>\\r\\n        Tijdens het onderzoeken vindt u waarschijnlijk monsters die u wilt analyseren, dit kan door middel van deze tools.<br><br><br>\\r\\n        Te beginnen bij de staafgrafieken die gebruik maken van het WEW tien punten systeem. <br><br>\\r\\n        Elke taxon heeft voor elke ecologische variabele 10 punten totaal, deze punten zijn verdeeld over subvariabelen. <br><br>\\r\\n        Bijvoorbeeld de variabele <b>zuurgraad</b> met de subvariabelen <b>zuur - zwak zuur - neutraal - basisch</b>. <br><br><br>\\r\\n        Als we deze punten bekijken van het taxon genaamd <i>Aedes punctor</i> zien we dat dit zo wordt ingevuld: zuurgraad = zuur (6) + zwak zuur (4) + neutraal (0) + basisch (0) = 10 punten. <br><br>\\r\\n        De staafgrafiek toont voor elke subvariabele het <b>gemiddelde</b> van al deze waarden van elk in het monster aanwezig taxon bij elkaar, met als regel dat de taxon wel in de referentie moet staan. <br><br>\\r\\n        Taxons die wel aanwezig zijn in het monster maar niet in de referentielijst van het desbetreffende watertype worden niet meegenomen in de berekening en dus niet in de grafiek! <br><br><br>\\r\\n        Bovendien is er een taartdiagram zichtbaar die toont welke taxa aanwezig zijn in het betreffende monster. <br><br><br>\\r\\n        Bij elk individueel monster kunt u ook de kwaliteit analyse bekijken, dit bestaat uit een reeks tabellen met de tien punten verdeling eerder beschreven. <br><br>\\r\\n        In deze tabellen staan de punten van het monster naast de punten van de referentie, vervolgens is het verschil hierin getoond. <br><br>\\r\\n        Hieruit valt op te merken onder welke variabele een grote verbetering kan plaatsvinden.\\r\\n      </p>\\r\\n    </mat-tab>\\r\\n\\r\\n    <mat-tab>\\r\\n      <ng-template mat-tab-label>\\r\\n        FILTEREN <mat-icon class=\\\"example-tab-icon\\\">hourglass_empty</mat-icon>\\r\\n      </ng-template>\\r\\n      <p><br>U kunt de referentielijst verscherpen door middel van filtering, voor nu kan er gefilterd worden op eutrofiëring en hydromorfologie. <br><br>\\r\\n        Bovendien heeft u dan nog de keus om hierbij alleen de +3 waarden mee te nemen en zijn alle combinaties mogelijk. <br><br>\\r\\n        Wanneer een filter wordt aangezet zullen de grafieken hierop meteen worden aangepast op elke pagina.\\r\\n      </p>\\r\\n    </mat-tab>\\r\\n\\r\\n\\r\\n  </mat-tab-group>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    <span class=\\\"mat-headline\\\">Contactgegevens <mat-icon class=\\\"example-tab-icon\\\">info_outline</mat-icon></span>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    NBC Naturalis<br>\\r\\n    Vondellaan 55<br>\\r\\n    2332 AA Leiden<br>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-help',\r\n  templateUrl: './help.component.html',\r\n  styleUrls: ['./help.component.css']\r\n})\r\n\r\nexport class HelpComponent {}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    <span class=\\\"mat-headline\\\">Login</span>\\r\\n  </mat-card-title>\\r\\n\\r\\n  <form (ngSubmit)=\\\"login()\\\">\\r\\n    <mat-card-content>\\r\\n      <section layout=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput placeholder=\\\"Email Adres\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" required>\\r\\n        </mat-form-field>\\r\\n      </section>\\r\\n\\r\\n      <section layout=\\\"row\\\">\\r\\n        <mat-form-field>\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Wachtwoord\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\"\\r\\n                 required>\\r\\n        </mat-form-field>\\r\\n      </section>\\r\\n\\r\\n      <section layout=\\\"row\\\">\\r\\n        <button type=\\\"submit\\\" mat-raised-button>Login</button>\\r\\n      </section>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert2';\r\n\r\nimport { AuthenticationService } from '../services/auth.service';\r\nimport {HttpResponse} from \"@angular/common/http\";\r\nimport {AppComponent} from \"../app.component\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  providers: [AuthenticationService],\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  model: any = {};\r\n  constructor(private router: Router, private authenticationService: AuthenticationService) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  login() {\r\n    this.authenticationService.login(this.model.email, this.model.password).subscribe((res: HttpResponse<any>) => {\r\n        localStorage.setItem('token', res['token']);\r\n        this.router.navigate(['/']);\r\n\r\n      }, err => swal('Oops...', err.detailMessage, 'error'));\r\n  }\r\n}\r\n","module.exports = \".filters {\\r\\n  display: flex;\\r\\n  justify-content: space-evenly;\\r\\n}\\r\\n.search-button, .filter-button {\\r\\n  background-color: #3f51b5;\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n.search-button {\\r\\n  margin-top: 20px;\\r\\n}\\r\\n.filter-button {\\r\\n  margin-top: 10px;\\r\\n  margin-left: 10px;\\r\\n\\r\\n}\\r\\n.filter-list {\\r\\n  margin-left: 10px;\\r\\n  width: 27%;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <div class=\\\"filters\\\">\\r\\n    <p class=\\\"filter-list\\\">\\r\\n      <mat-select name=\\\"watertypeName\\\" [(ngModel)]=\\\"filters.watertypeId\\\" placeholder=\\\"Watertype naam\\\">\\r\\n        <mat-option *ngFor=\\\"let watertype of watertypes\\\" [value]=\\\"watertype.id\\\">\\r\\n          ({{watertype.code}}) {{watertype.name}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </p>\\r\\n    <p class=\\\"filter-list\\\">\\r\\n      <mat-select name=\\\"lastTakenSample\\\" [(ngModel)]=\\\"filters.date\\\" placeholder=\\\"Jaar laatst genomen monster\\\">\\r\\n        <mat-option *ngFor=\\\"let year of filterYears\\\" [value]=\\\"year\\\">\\r\\n          Vanaf {{year}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </p>\\r\\n    <button mat-raised-button class=\\\"filter-button\\\" (click)=\\\"loadFilters()\\\"\\r\\n            type=\\\"submit\\\">FILTEREN\\r\\n    </button>\\r\\n    <button mat-raised-button class=\\\"filter-button\\\" (click)=\\\"refreshMarkers()\\\"\\r\\n            type=\\\"submit\\\">RESET\\r\\n    </button>\\r\\n  </div>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <div #gmap style=\\\"width:100%; height:520px\\\"></div>\\r\\n</mat-card>\\r\\n\"","import {Component, NgZone, OnInit, ViewChild} from '@angular/core';\r\nimport { } from '@types/googlemaps';\r\nimport {ApiLocationService} from \"../services/api.location.service\";\r\nimport {ApiWaterschapService} from \"../services/api.waterschap.service\";\r\nimport {ApiWatertypeService} from \"../services/api.watertype.service\";\r\nimport {ApiSampleService} from \"../services/api.sample.service\";\r\nimport {ApiMarkerService} from \"../services/api.marker.service\";\r\nimport {MarkerLocation} from \"../models/markerLocation.model\";\r\nimport {Watertype} from \"../models/watertype.model\";\r\nimport {Waterschap} from \"../models/waterschap.model\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {switchMap} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'map',\r\n  providers: [ApiLocationService, ApiWatertypeService, ApiWaterschapService, ApiMarkerService, ApiSampleService],\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit {\r\n  @ViewChild('gmap') gmapElement: any;\r\n  map: google.maps.Map;\r\n  location: google.maps.LatLng;\r\n  infoWindow: google.maps.InfoWindow;\r\n  public googleMarkers = [];\r\n  public samples = [];\r\n  public watertypes = [];\r\n  public waterschappen = [];\r\n  public marker = {\r\n    markerLocation: MarkerLocation,\r\n    watertype: Watertype,\r\n    watertypeKrw: Watertype,\r\n    waterschap: Waterschap,\r\n    lastTakenSample: String,\r\n  };\r\n  public filterYears = [];\r\n\r\n  public mapProp = {\r\n    center: new google.maps.LatLng(52.250102, 5.4163903),\r\n    zoom: 7.5,\r\n    mapTypeId: google.maps.MapTypeId.TERRAIN\r\n  };\r\n\r\n  public filters = {\r\n    waterschapId: '0',\r\n    watertypeId: '0',\r\n    date: '',\r\n  };\r\n\r\n\r\n  constructor(private apiWatertype: ApiWatertypeService,\r\n              private apiWaterschap: ApiWaterschapService,\r\n              private apiMarker: ApiMarkerService,\r\n              private apiSample: ApiSampleService,\r\n              private route: ActivatedRoute,\r\n              private router: Router,\r\n              private ngZone: NgZone) {\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.apiMarker.getAllFilteredMarkers(this.filters).subscribe(markers => {\r\n        this.samples = markers;\r\n        this.filterSamplesByLocation();\r\n        this.loadMarkers(this.samples);\r\n    }, error => console.log(error));\r\n\r\n    this.retrieveWaterschappen();\r\n    this.retrieveWatertypes();\r\n    this.retrieveFilterYears();\r\n\r\n    this.map = new google.maps.Map(this.gmapElement.nativeElement, this.mapProp);\r\n\r\n  }\r\n  private loadMarkers(samples){\r\n    samples.forEach((item) =>{\r\n      this.newMarker(item);\r\n    });\r\n    this.setMapOnAll(this.map);\r\n  }\r\n\r\n  private setMapOnAll(map) {\r\n    for (let i = 0; i < this.googleMarkers.length; i++) {\r\n      this.googleMarkers[i].setMap(map);\r\n    }\r\n  }\r\n\r\n  public loadFilters(){\r\n    let filterlijst = [];\r\n    this.setMapOnAll(null);\r\n\r\n    this.samples.forEach((item) => {\r\n      if(this.filters.waterschapId !== '0' && item.waterschap && item.waterschap.id === this.filters.waterschapId){\r\n        filterlijst.push(item);\r\n      }\r\n      if(this.filters.watertypeId !== '0' && item.watertype && item.watertype.id === this.filters.watertypeId){\r\n        filterlijst.push(item);\r\n      }\r\n      if(this.filters.watertypeId !== '0' && item.watertypeKrw && item.watertypeKrw.id === this.filters.watertypeId){\r\n        filterlijst.push(item);\r\n      }\r\n      if(this.filters.date !== '' && item.lastTakenSample && item.lastTakenSample === this.filters.date){\r\n        filterlijst.push(item);\r\n      }\r\n    });\r\n\r\n    if (this.filters.date !== '' || this.filters.watertypeId !== '0' || this.filters.waterschapId !== '0'){\r\n      this.googleMarkers = [];\r\n      filterlijst.forEach((item) => {\r\n        this.newMarker(item);\r\n      });\r\n    }\r\n    this.setMapOnAll(this.map);\r\n  }\r\n\r\n  private filterSamplesByLocation(){\r\n    //zo lang er 100 nog wat \"markers\" worden gepushed vanuit api dit laten staan.\r\n    let nieuweLijst = [];\r\n    nieuweLijst.push(this.samples[0]);\r\n\r\n    for (let i=0; i<this.samples.length; i++) {\r\n      if(i>0 && this.samples[i].markerLocation.id !== this.samples[i-1].markerLocation.id){\r\n        nieuweLijst.push(this.samples[i]);\r\n      }\r\n    }\r\n    this.samples = nieuweLijst;\r\n  }\r\n  private newMarker(sample){\r\n    let marker = new google.maps.Marker({\r\n      position: new google.maps.LatLng(sample.markerLocation.latitude, sample.markerLocation.longitude),\r\n      map: null,\r\n      title: 'm' + <string><any>sample.markerLocation.id,\r\n    });\r\n\r\n    marker.addListener('click', () => {\r\n      if(this.infoWindow){\r\n        this.infoWindow.close();\r\n      }\r\n      this.newInfoWindow(sample);\r\n      this.infoWindow.open(this.map,marker);\r\n    });\r\n\r\n    this.googleMarkers.push(marker);\r\n  }\r\n\r\n  public refreshMarkers() {\r\n    this.loadMarkers(this.samples);\r\n    this.filters = {\r\n      waterschapId: '0',\r\n      watertypeId: '0',\r\n      date: '',\r\n    };\r\n  }\r\n\r\n  private newInfoWindow(sample){\r\n    this.infoWindow = new google.maps.InfoWindow();\r\n    let content = document.createElement('div');\r\n    let html = \"<style>\" +\r\n      \".texts{color:blue; margin-top: -12px; font-family: 'Arial';}\" +\r\n      \"</style> <mat-list >\";\r\n\r\n\r\n    if (sample.markerLocation){\r\n      html = html +\r\n        \"<mat-list-item>\" +\r\n        \"<h3 matLine>\" +\r\n        \"<b>Locatie</b>\" +\r\n        \"</h3>\" +\r\n        \"<p class='texts' matLine>\"+ sample.markerLocation.description + \"</p>\" +\r\n        \"</mat-list-item>\" +\r\n        \"<mat-list-item>\" +\r\n        \"<h3 matLine>\" +\r\n        \"<b>Mp</b>\" +\r\n        \"</h3> \" +\r\n        \"<p class='texts' matLine>\"+sample.markerLocation.code+ \"</p>\" +\r\n        \"</mat-list-item>\";\r\n    }\r\n    if (sample.waterschap){\r\n      html = html +\r\n        \"<mat-list-item>\" +\r\n        \"<h3 matLine>\" +\r\n        \"<b>Waterschap</b>\" +\r\n        \"</h3>\" +\r\n        \"<p class='texts' matLine>\"+ sample.waterschap.name+ \"</p>\" +\r\n        \"</mat-list-item>\";\r\n    }\r\n    if (sample.watertype){\r\n      html = html +\r\n        \"<mat-list-item>\" +\r\n        \"<h3 matLine>\" +\r\n        \"<b class='haha'>Watertype</b>\" +\r\n        \"</h3>\" +\r\n        \"<p class='texts' matLine>\" + sample.watertype.name + \" (\" + sample.watertype.code + \")\"  + \"</p>\" +\r\n        \"<p class='texts' matLine>\"+sample.watertypeKrw.name + \" (\" + sample.watertypeKrw.code+ \")\" + \"</p>\" +\r\n        \"</mat-list-item>\";\r\n    }\r\n    if(sample.lastTakenSample){\r\n      html = html +\r\n        \"<mat-list-item>\" +\r\n        \"<h3 matLine>\" +\r\n        \"<b>Laatst genomen monster</b>\" +\r\n        \"</h3>\" +\r\n        \"<p class='texts' matLine>\" + sample.lastTakenSample + \"</p>\" +\r\n        \"</mat-list-item>\";\r\n    }\r\n    content.innerHTML = html;\r\n\r\n    let button = content.appendChild(document.createElement('input'));\r\n    button.type = 'button';\r\n    button.className = 'mat-raised-button';\r\n    button.value = 'DETAILS';\r\n    button.setAttribute(\"style\",\"background-color: #3f51b5; color: #FFFFFF; margin-top: 10px;\" +\r\n      \"float: right;\");\r\n\r\n    button.addEventListener(\"click\", () => this.ngZone.run(() => {\r\n      this.router.navigate([\"/results/water/\", sample.markerLocation.id]);\r\n    }));\r\n    this.infoWindow.setContent(content);\r\n  }\r\n\r\n  private retrieveFilterYears() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiSample.getDistinctYears()))\r\n      .subscribe(items => {\r\n        this.filterYears = items;\r\n      }, error => console.log(error));\r\n  }\r\n  private retrieveWaterschappen() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiWaterschap.getAll()))\r\n      .subscribe(items => {\r\n        this.waterschappen = items;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private retrieveWatertypes() {\r\n    this.route.params\r\n      .pipe(switchMap(params => this.apiWatertype.getAll()))\r\n      .subscribe(items => {\r\n        this.watertypes = items;\r\n      }, error => console.log(error));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\n\r\nimport {Reference} from 'app/models/reference.model';\r\nimport {Sample} from 'app/models/sample.model';\r\nimport {Taxon} from 'app/models/taxon.model';\r\nimport {Palette} from 'app/services/palette';\r\nimport {SimpleWEWValue} from './wew.model';\r\nimport {ApiReferenceService} from 'app/services/api.reference.service';\r\nimport {ApiSampleService} from 'app/services/api.sample.service';\r\nimport {ApiWewService} from '../services/api.wew.service';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ChartEntityManager{\r\n\tprivate referenceApi:ApiReferenceService;\r\n\tprivate sampleApi:ApiSampleService;\r\n\tprivate wewApi:ApiWewService;\r\n\r\n\tconstructor(http:Http){\r\n\t\tthis.referenceApi = new ApiReferenceService(http);\r\n\t\tthis.sampleApi = new ApiSampleService(http);\r\n\t\tthis.wewApi = new ApiWewService(http);\r\n\t}\r\n\r\n\tpublic createFromReference(reference:Reference,name:string,palette:Palette):ReferenceChartEntity{\r\n\t\tif(reference==null)\r\n\t\t\treturn null;\r\n\t\treturn new ReferenceChartEntity(this.referenceApi,reference,name,palette);\r\n\t}\r\n\r\n\tpublic createFromSample(sample:Sample,name:string,palette:Palette):SampleChartEntity{\r\n\t\tif(sample==null)\r\n\t\t\treturn null;\r\n\t\treturn new SampleChartEntity(this.sampleApi,sample,name,palette);\r\n\t}\r\n\r\n\tpublic createFromTaxon(taxon:Taxon,palette:Palette):TaxonChartEntity{\r\n\t\tif(taxon==null)\r\n\t\t\treturn null;\r\n\t\treturn new TaxonChartEntity(this.wewApi,taxon,palette);\r\n\t}\r\n}\r\n\r\nexport abstract class ChartEntity{\r\n\tconstructor(\r\n\t\tpublic id:string,\r\n\t\tpublic name:string,\r\n\t\tpublic palette:Palette\r\n\t) {}\r\n\r\n\tpublic abstract getCalculations():Promise<SimpleWEWValue[]>;\r\n}\r\n\r\nclass ReferenceChartEntity extends ChartEntity{\r\n\tconstructor(\r\n\t\tprivate referenceApi:ApiReferenceService,\r\n\t\tprivate reference:Reference,\r\n\t\tname:string,palette:Palette\r\n\t){\r\n\t\tsuper('ref'+reference.id,name,palette);\r\n\t}\r\n\r\n\tpublic getCalculations():Promise<SimpleWEWValue[]>{\r\n\t\treturn this.referenceApi.getCalculationsByReference(this.reference.id).toPromise();\r\n\t}\r\n}\r\n\r\nclass SampleChartEntity extends ChartEntity{\r\n\tconstructor(\r\n\t\tprivate sampleApi:ApiSampleService,\r\n\t\tprivate sample:Sample,\r\n\t\tname:string,palette:Palette\r\n\t){\r\n\t\tsuper('sample'+sample.id,name,palette);\r\n\t}\r\n\r\n\tpublic getCalculations():Promise<SimpleWEWValue[]>{\r\n\t\treturn this.sampleApi.getCalculationsBySample(this.sample.id).toPromise();\r\n\t}\r\n}\r\n\r\nclass TaxonChartEntity extends ChartEntity{\r\n\tconstructor(\r\n\t\tprivate wewApi:ApiWewService,\r\n\t\tprivate taxon:Taxon,\r\n\t\tpalette:Palette\r\n\t){\r\n\t\tsuper('taxon'+taxon.id,taxon.name,palette);\r\n\t}\r\n\r\n\tpublic getCalculations():Promise<SimpleWEWValue[]>{\r\n\t\treturn this.wewApi.getByTaxon([this.taxon.id])\r\n\t\t\t.pipe(map(wewValues => wewValues.map(wewValue => {\r\n\t\t\t\tlet value = new SimpleWEWValue();\r\n\t\t\t\tvalue.factorClassId = wewValue.factorClassId;\r\n\t\t\t\tvalue.value = wewValue.value;\r\n\t\t\t\treturn value;\r\n\t\t\t}))).toPromise();\r\n\t}\r\n}\r\n","import {MarkerLocation} from './markerLocation.model';\r\nimport {Watertype} from './watertype.model';\r\nimport {Waterschap} from './waterschap.model';\r\nexport class Marker {\r\n\tmarkerLocation: MarkerLocation;\r\n\twatertype: Watertype;\r\n\twatertypeKrw: Watertype;\r\n\twaterschap: Waterschap;\r\n\tlastTakenSample: any;\r\n\r\n\tpublic static fromJSON(obj): Marker {\r\n\t\tconst marker = new Marker();\r\n\t\tmarker.markerLocation = obj.location;\r\n\t\tmarker.watertype = obj.watertype;\r\n\t\tmarker.watertypeKrw = obj.watertypeKrw;\r\n\t\tmarker.waterschap = obj.waterschap;\r\n\t\tmarker.lastTakenSample = obj.lastTakenSample;\r\n\t\treturn marker;\r\n\t}\r\n}\r\n","export class MarkerLocation {\r\n\tid: number;\r\n\tcode: string;\r\n\tdescription: string;\r\n\txCoord: number;\r\n\tyCoord: number;\r\n\tlatitude: number;\r\n\tlongitude: number;\r\n\twaterschapId: number;\r\n\twatertypeId: number;\r\n\twatertypeKrwId: number;\r\n\r\n\tpublic static fromJSON(obj): MarkerLocation {\r\n\t\tconst location = new MarkerLocation();\r\n\t\tlocation.id = obj.id;\r\n\t\tlocation.code = obj.code;\r\n\t\tlocation.description = obj.description;\r\n\t\tlocation.xCoord = obj.xCoord;\r\n\t\tlocation.yCoord = obj.yCoord;\r\n\t\tlocation.latitude = obj.latitude;\r\n\t\tlocation.longitude = obj.longitude;\r\n\t\tlocation.waterschapId = obj.waterschapId;\r\n\t\tlocation.watertypeId = obj.watertypeId;\r\n\t\tlocation.watertypeKrwId = obj.watertypeKrwId;\r\n\t\treturn location;\r\n\t}\r\n}\r\n","export class Reference{\r\n\tid:number;\r\n\twatertypeId:number;\r\n\ttaxonIds:number[];\r\n\t\r\n\tpublic static fromJSON(obj):Reference{\r\n\t\tlet reference = new Reference();\r\n\t\treference.id = obj.id;\r\n\t\treference.watertypeId = obj.watertypeId;\r\n\t\treference.taxonIds = obj.taxonIds;\r\n\t\treturn reference;\r\n\t}\r\n}\r\n","export class Sample{\r\n\tid:number;\r\n\tdate:Date;\r\n  location_id:number;\r\n\towner_id:number;\r\n\tquality:number;\r\n\tx_coor:number;\r\n\ty_coor:number;\r\n\tdate_added:Date;\r\n\ttaxonValues:Map<number/*taxonId*/,number/*value*/>;\r\n\r\n\t//Maps don't stringify\r\n\tpublic toJSON() {\r\n\t\tlet taxonValuesObj = {};\r\n\t\tthis.taxonValues.forEach((value,key) => taxonValuesObj[key] = value);\r\n\r\n\t\treturn {\r\n\t\t\tid:this.id,\r\n\t\t\tdate:this.date,\r\n      location_id:this.location_id,\r\n\t\t\towner_id:this.owner_id,\r\n\t\t\tquality:this.quality,\r\n\t\t\tx_coor:this.x_coor,\r\n\t\t\ty_coor:this.y_coor,\r\n      date_added:this.date_added,\r\n\t\t\ttaxonValues:taxonValuesObj\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tpublic static fromJSON(obj):Sample{\r\n\t\tlet sample = new Sample();\r\n\t\tsample.id = obj.id;\r\n\t\tsample.date = obj.date;\r\n\t\tsample.location_id = obj.location_id;\r\n\t\tsample.owner_id = obj.owner_id;\r\n\t\tsample.quality = obj.quality;\r\n\t\tsample.x_coor = obj.x_coor;\r\n\t\tsample.y_coor = obj.y_coor;\r\n\t\tsample.date_added = obj.date_added;\r\n\t\tsample.taxonValues = new Map();\r\n\t\tfor(let key in obj.taxonValues){\r\n\t\t\tsample.taxonValues.set(parseInt(key,10),obj.taxonValues[key]);\r\n\t\t}\r\n\t\treturn sample;\r\n\t}\r\n}\r\n","export class Taxon{\r\n\tid:number;\r\n\tname:string;\r\n\tgroupId:number;\r\n\tlevelId:number;\r\n\tparentId:number;\r\n\treferId:number;\r\n\thydrologischeVerstoring:number;\r\n\tmorfologischeVerstoring:number;\r\n\teutrofieringBelasting:number;\r\n\r\n\tpublic static fromJSON(obj:any):Taxon{\r\n\t\tlet taxon:Taxon = new Taxon();\r\n\t\ttaxon.id = obj.id;\r\n\t\ttaxon.name = obj.name;\r\n\t\ttaxon.groupId = obj.groupId;\r\n\t\ttaxon.levelId = obj.levelId;\r\n\t\ttaxon.parentId = obj.parentId;\r\n\t\ttaxon.referId = obj.referId;\r\n\t\ttaxon.hydrologischeVerstoring = obj.hydrologischeVerstoring;\r\n\t\ttaxon.morfologischeVerstoring = obj.morfologischeVerstoring;\r\n\t\ttaxon.eutrofieringBelasting = obj.eutrofieringBelasting;\r\n\t\treturn taxon;\r\n\t}\r\n}\r\n\r\nexport class TaxonGroup{\r\n\tid:number;\r\n\tcode:string;\r\n\tdescription:string;\r\n\ticon:string;\r\n\r\n\tpublic static fromJSON(obj:any):TaxonGroup{\r\n\t\tlet group:TaxonGroup = new TaxonGroup();\r\n\t\tgroup.id = obj.id;\r\n\t\tgroup.code = obj.code;\r\n\t\tgroup.description = obj.description;\r\n\t\tgroup.icon = obj.icon;\r\n\t\treturn group;\r\n\t}\r\n}\r\n\r\nexport class TaxonLevel{\r\n\tid:number;\r\n\tname:string;\r\n\r\n\tpublic static fromJSON(obj:any):TaxonLevel{\r\n\t\tlet level:TaxonLevel = new TaxonLevel();\r\n\t\tlevel.id = obj.id;\r\n\t\tlevel.name = obj.name;\r\n\t\treturn level;\r\n\t}\r\n}\r\n","export class User {\r\n\tpublic id: number;\r\n\tpublic email: string;\r\n\tpublic password: string;\r\n\tpublic name: string;\r\n\tpublic group_id: number;\r\n\tpublic waterschap_id: number;\r\n\r\n\tpublic static fromJSON(obj:any):User{\r\n\t\tlet user:User = new User();\r\n\t\tuser.id = obj.id;\r\n\t\tuser.email = obj.email;\r\n\t\tuser.password = obj.password;\r\n\t\tuser.name = obj.name;\r\n\t\tuser.group_id = obj.group_id;\r\n\t\tuser.waterschap_id = obj.waterschap_id;\r\n\t\treturn user;\r\n\t}\r\n}\r\n","export class Waterschap {\r\n\tid: number;\r\n\tname: string;\r\n\taddress: string;\r\n\thouseNumber: number;\r\n\tzipCode: string;\r\n\tlocation: string;\r\n\tphoneNumber: string;\r\n\r\n\tpublic static fromJSON(obj: any): Waterschap {\r\n\t\tconst ws: Waterschap = new Waterschap();\r\n\t\tws.id = obj.id;\r\n\t\tws.name = obj.name;\r\n\t\tws.address = obj.address;\r\n\t\tws.houseNumber = obj.houseNumber;\r\n\t\tws.zipCode = obj.zipCode;\r\n\t\tws.location = obj.location;\r\n\t\tws.phoneNumber = obj.phoneNumber;\r\n\t\treturn ws;\r\n\t}\r\n}\r\n","export class Watertype {\r\n\tid: number;\r\n\tname: string;\r\n\tcode: string;\r\n\r\n\tpublic static fromJSON(obj: any): Watertype {\r\n\t\tlet wt: Watertype = new Watertype();\r\n\t\twt.id = obj.id;\r\n\t\twt.name = obj.name;\r\n\t\twt.code = obj.code;\r\n\t\treturn wt;\r\n\t}\r\n}\r\n","import {Taxon} from \"./taxon.model\";\r\n\r\ntype WEWValueFormat = {i:number,c:number,t:number,v:number};\r\n\r\nexport class WEWValue{\r\n\tid:number;\r\n\tfactorClassId:number;\r\n\ttaxonId:number;\r\n\tvalue:number;\r\n\r\n\t//WEWValue is transferred between server and client in a different way than other classes, for performance reasons\r\n\t//Format: {i:id,c:factorClassId,t:taxonId,v:value}\r\n\tpublic toJSON():WEWValueFormat{\r\n\t\treturn {\r\n\t\t\ti:this.id,\r\n\t\t\tc:this.factorClassId,\r\n\t\t\tt:this.taxonId,\r\n\t\t\tv:this.value\r\n\t\t};\r\n\t}\r\n\r\n\tpublic static fromJSON(obj:WEWValueFormat):WEWValue{\r\n\t\tlet value = new WEWValue();\r\n\t\tvalue.id = obj.i;\r\n\t\tvalue.factorClassId = obj.c;\r\n\t\tvalue.taxonId = obj.t;\r\n\t\tvalue.value = obj.v;\r\n\t\treturn value;\r\n\t}\r\n}\r\n\r\nexport class SimpleWEWValue{\r\n  constructor(\r\n    public factorClassId?: number,\r\n    public value?: number)  {\r\n\r\n  }\r\n\r\n}\r\n\r\nexport class WewValue {\r\n  factor_class_id: number;\r\n  value: number;\r\n}\r\nexport class WewValuePre {\r\n  factor_class_id: number;\r\n  value: number;\r\n  taxon_id: number;\r\n}\r\n\r\nexport class CalculationPreTransformed {\r\n  id: number;\r\n  taxon: Taxon[];\r\n  wewValue: WewValue[];\r\n}\r\n\r\nexport class CalculationSample {\r\n  id: number;\r\n  taxon: Taxon[];\r\n  wewValue: WewValuePre[];\r\n}\r\nexport class CalculationSampleOrder {\r\n  id: number;\r\n  taxon: FilterTaxon;\r\n  wewValue: WewValue[];\r\n  constructor(id:number, taxon: FilterTaxon, wewValue: WewValue[]){\r\n    this.id = id;\r\n    this.taxon = taxon;\r\n    this.wewValue = wewValue;\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nexport class FilterTaxon {\r\n  id: number;\r\n  name: string;\r\n  hydrologischeVerstoring: number;\r\n  morfologischeVerstoring: number;\r\n  eutrofieringBelasting: number;\r\n}\r\n\r\nexport class WEWFactor{\r\n\tid:number;\r\n\tname:string;\r\n\tclasses:WEWFactorClass[];\r\n\r\n\tpublic static fromJSON(obj):WEWFactor{\r\n\t\tlet factor = new WEWFactor();\r\n\t\tfactor.id = obj.id;\r\n\t\tfactor.name = obj.name;\r\n\t\tfactor.classes = obj.classes.map(WEWFactorClass.fromJSON);\r\n\t\treturn factor;\r\n\t}\r\n}\r\n\r\nexport class WEWFactorClass{\r\n\tid:number;\r\n\tfactorId:number;\r\n\tcode:string;\r\n\tdescription:string;\r\n\torder:number;\r\n\r\n\tpublic static fromJSON(obj):WEWFactorClass{\r\n\t\tlet cl = new WEWFactorClass();\r\n\t\tcl.id = obj.id;\r\n\t\tcl.factorId = obj.factorId;\r\n\t\tcl.code = obj.code;\r\n\t\tcl.description = obj.description;\r\n\t\tcl.order = obj.order;\r\n\t\treturn cl;\r\n\t}\r\n}\r\n","export class WewValueCalc{\r\n\r\n  constructor(\r\n    public value?: number,\r\n    public times?: number) {\r\n\r\n  }\r\n}\r\n\r\n","module.exports = \"\"","module.exports = \"\\r\\n\\r\\n<!-- Loading card -->\\r\\n<div *ngIf=\\\"!globalRef.finished\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"display: block\\\" *ngIf=\\\"globalRef.finished\\\">\\r\\n  <canvas baseChart\\r\\n          class=\\\"chart\\\"\\r\\n          [datasets]=\\\"globalRef.barChartData\\\"\\r\\n          [labels]=\\\"globalRef.barChartLabels\\\"\\r\\n          [options]=\\\"options\\\"\\r\\n          [legend]=\\\"barChartLegend\\\"\\r\\n          [chartType]=\\\"barChartType\\\"\\r\\n          [colors]=\\\"globalRef.barChartColors\\\"\\r\\n\\r\\n  ></canvas>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {GlobalReferenceService} from \"../services/global.reference.service\";\r\nimport {Sample} from \"../models/sample.model\";\r\nimport {ApiSampleService} from \"../services/api.sample.service\";\r\nimport {ApiLocationService} from \"../services/api.location.service\";\r\nimport {MarkerLocation} from \"../models/markerLocation.model\";\r\nimport {ApiReferenceService} from \"../services/api.reference.service\";\r\nimport {trigger,style,transition,animate,group,state} from '@angular/animations';\r\nimport {WEWFactor, WEWFactorClass} from \"../models/wew.model\";\r\nimport {uniqueFilter} from \"../services/arrayUtils\";\r\nimport {ChartEntity} from \"../models/chart-entity.model\";\r\n\r\n@Component({\r\n  selector: 'app-new-wew-bar-chart',\r\n  templateUrl: './new-wew-bar-chart.component.html',\r\n  styleUrls: ['./new-wew-bar-chart.component.css'],\r\n  animations:[\r\n    trigger('mainCardAnim',[\r\n      state('void',style({opacity:0})),\r\n      transition(':enter',[animate('300ms 150ms',style({opacity:1}))]),\r\n      transition(':leave',[animate('150ms', style({opacity:0}))])\r\n    ])\r\n  ]\r\n})\r\nexport class NewWewBarChartComponent implements OnInit {\r\n\r\n  public id:number;\r\n  public sample:Sample;\r\n  public location:MarkerLocation;\r\n  constructor(public router:ActivatedRoute, public globalRef: GlobalReferenceService, public sampleApi: ApiSampleService, public locationApi: ApiLocationService, public referenceApi: ApiReferenceService) { }\r\n\r\n  ngOnInit() {\r\n    this.router.params.subscribe( p =>{\r\n     this.id  = p['id']\r\n      //load sample..\r\n      this.globalRef.setSampleById(this.id);\r\n    });\r\n\r\n    let reference;\r\n      //not very nice but subcribe in subscribe :(((\r\n    //Load sample and its calculations\r\n    this.sampleApi.getSample(this.id).subscribe(result =>{\r\n      this.sample = result\r\n      this.locationApi.getById(this.sample.location_id).subscribe(result => {\r\n        this.location = result\r\n       this.referenceApi.getByWatertype(this.location.watertypeKrwId).subscribe(result => {\r\n         reference = result\r\n\r\n\r\n         //set the data for the barchart based on the referenceID\r\n         this.globalRef.setReferenceById(reference.id);\r\n       });\r\n      });\r\n\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  public barChartType = 'bar';\r\n  public barChartLegend = false;\r\n\r\n  options: any = {\r\n    multiTooltipTemplate: \"<%= datasetLabel %> - <%= value %>\",\r\n    tooltips:{\r\n      mode: 'index',\r\n      callbacks: {\r\n        label: (tooltipItem, data) => this.customLabel(tooltipItem, data),\r\n      axisPointer:{type:'shadow'},\r\n      backgroundColor:'rgba(0,0,0,0.9)'\r\n    }\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        stacked: true,\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 10,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }]\r\n    },\r\n\r\n    responsive: true\r\n  }\r\n\r\n  public customLabel(tooltipItem, data)\r\n  {\r\n\r\n\r\n    let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n    // console.log(\"tooltip:\", tooltipItem)\r\n    // console.log('dataset: ', data.datasets[tooltipItem.datasetIndex])\r\n    if (label) {\r\n      label += ': ';\r\n    }\r\n    label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n    if ((tooltipItem.index + 1 === data.datasets[tooltipItem.datasetIndex].data.length)) {\r\n      return label;\r\n    }else{\r\n      return '';\r\n    }\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Referenties\\r\\n  </mat-card-title>\\r\\n  <mat-card-subtitle>Op deze pagina kunt u referentie gegevens toevoegen aan de verschillende types locaties\\r\\n  </mat-card-subtitle>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"taxaList!==null\\\">\\r\\n  <mat-card-title *ngIf=\\\"watertype\\\">{{watertype.code}} - {{watertype.name}}</mat-card-title>\\r\\n  <mat-card-subtitle>Kopieer hier een lijst met alle referentie taxa voor deze type locatie</mat-card-subtitle>\\r\\n  <mat-card-content>\\r\\n    <textarea [rows]=\\\"getTaxaRows()\\\" cols=\\\"60\\\" [(ngModel)]=\\\"taxaList\\\"></textarea>\\r\\n    <br/>\\r\\n    <button mat-raised-button (click)=\\\"save()\\\" [disabled]=\\\"saving\\\">{{saving?'Bezig met opslaan...':'Sla op'}}\\r\\n    </button>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\nimport {Reference} from 'app/models/reference.model';\r\nimport {Watertype} from '../../models/watertype.model';\r\nimport {ApiReferenceService} from 'app/services/api.reference.service';\r\nimport {ApiWatertypeService} from '../../services/api.watertype.service';\r\nimport {ApiTaxonService} from '../../services/api.taxon.service';\r\n\r\nimport {uniqueFilter} from '../../services/arrayUtils';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector:'app-reference-edit',\r\n  providers:[ApiReferenceService,ApiWatertypeService,ApiTaxonService],\r\n  templateUrl:'./reference-edit.component.html',\r\n  styleUrls:['./reference-edit.component.css']\r\n})\r\nexport class ReferenceEditComponent implements OnInit{\r\n  public reference: Reference;\r\n  public watertype: Watertype;\r\n  public taxaList: String = null;\r\n  public saving = false;\r\n\r\n  constructor(\r\n    private referenceApi:ApiReferenceService,\r\n    private watertypeApi:ApiWatertypeService,\r\n    private taxonApi:ApiTaxonService,\r\n    private route:ActivatedRoute\r\n  ){}\r\n\r\n  ngOnInit(){\r\n    this.route.params.pipe(map(params => parseInt(params.id))).subscribe(id => {\r\n      this.referenceApi.getReference(id).subscribe(reference => {\r\n        this.watertypeApi.getWatertype(reference.watertypeId).subscribe(watertype => {\r\n          this.reference = reference;\r\n          this.watertype = watertype;\r\n          this.showTaxa();\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private showTaxa() {\r\n    if (this.reference.taxonIds.length) {\r\n      this.taxonApi.getByIds(this.reference.taxonIds).subscribe(taxa => this.taxaList = taxa.map(taxon => taxon.name).join(\"\\n\"));\r\n    } else {\r\n      this.taxaList = '';\r\n    }\r\n  }\r\n\r\n  getTaxaRows():number {\r\n    return this.taxaList.split(\"\\n\").length;\r\n  }\r\n\r\n  save() {\r\n    this.saving = true;\r\n    let taxaNames = this.taxaList.split(\"\\n\");\r\n    taxaNames = taxaNames.map(name => name.trim().toLowerCase()).filter(name => name).filter(uniqueFilter);\r\n    this.taxonApi.findOrCreate(taxaNames).subscribe(taxa => {\r\n      this.reference.taxonIds = taxa.map(taxon => taxon.id);\r\n      this.referenceApi.save(this.reference).subscribe(ref => {\r\n        this.reference = ref;\r\n        this.showTaxa();\r\n        this.saving = false;\r\n      });\r\n    });\r\n  }\r\n}\r\n","module.exports = \".buttons{\\r\\n  display:inline-block;\\r\\n  width:65px;\\r\\n  text-align:right;\\r\\n}\\r\\n\\r\\n.buttons .mat-icon{\\r\\n  margin:0 6px 0 0;\\r\\n  cursor:pointer;\\r\\n}\\r\\n\\r\\n.description{\\r\\n  display:inline-block;\\r\\n  width:400px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Referenties\\r\\n  </mat-card-title>\\r\\n  <mat-card-subtitle>Op deze pagina kunt u referentie gegevens toevoegen aan de verschillende types locaties\\r\\n  </mat-card-subtitle>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-list>\\r\\n    <mat-list-item *ngFor=\\\"let item of listItems\\\">\\r\\n      <div *ngIf=\\\"item.reference\\\" class=\\\"buttons\\\">\\r\\n        <mat-icon (click)=\\\"edit(item)\\\">edit</mat-icon>\\r\\n        <mat-icon (click)=\\\"delete(item)\\\">delete</mat-icon>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!item.reference\\\" class=\\\"buttons\\\">\\r\\n        <mat-icon (click)=\\\"create(item)\\\">add_circle</mat-icon>\\r\\n      </div>\\r\\n      <div class=\\\"description\\\">\\r\\n        {{item.watertype.code}} {{item.watertype.name}}\\r\\n      </div>\\r\\n    </mat-list-item>\\r\\n  </mat-list>\\r\\n</mat-card>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\n\r\nimport {Reference} from 'app/models/reference.model';\r\nimport {Watertype} from '../../models/watertype.model';\r\nimport {ApiReferenceService} from 'app/services/api.reference.service';\r\nimport {ApiWatertypeService} from '../../services/api.watertype.service';\r\n\r\ntype ReferenceListItem = {watertype:Watertype,reference?:Reference};\r\n\r\n@Component({\r\n  selector:'app-reference-list',\r\n  providers:[ApiReferenceService,ApiWatertypeService],\r\n  templateUrl:'./reference-list.component.html',\r\n  styleUrls:['./reference-list.component.css']\r\n})\r\nexport class ReferenceListComponent implements OnInit{\r\n  public listItems:ReferenceListItem[];\r\n\r\n  constructor(\r\n    private referenceApi:ApiReferenceService,\r\n    private watertypeApi:ApiWatertypeService,\r\n    private router:Router\r\n  ){\r\n    let wtPr:Promise<Watertype[]> = watertypeApi.getAll().toPromise();\r\n    let refPr:Promise<Reference[]> = referenceApi.getAll().toPromise();\r\n\r\n    Promise.all([wtPr,refPr]).then(([watertypes,references]) => this.makeList(watertypes,references));\r\n  }\r\n\r\n  ngOnInit(){}\r\n\r\n  private makeList(watertypes:Watertype[],references:Reference[]){\r\n    this.listItems = [];\r\n    let watertypeListItemMap:Map<number/*watertype id*/,ReferenceListItem> = new Map();\r\n\r\n    //Add item to the list for each watertype\r\n    watertypes.forEach(watertype => {\r\n      let listItem = {watertype:watertype};\r\n      this.listItems.push(listItem);\r\n      watertypeListItemMap.set(watertype.id,listItem);\r\n    });\r\n\r\n    //Add references to list items\r\n    references.forEach(reference => {\r\n      let listItem = watertypeListItemMap.get(reference.watertypeId);\r\n      if(listItem){\r\n        listItem.reference = reference;\r\n      }\r\n    });\r\n  }\r\n\r\n  public delete(item:ReferenceListItem):void{\r\n    let sure = confirm('Weet u zeker dat u de referentie van '+item.watertype.code+' - '+item.watertype.name+' wil verwijderen?')\r\n    if(!sure)\r\n      return;\r\n\r\n    this.referenceApi.delete(item.reference.id).subscribe(success => {\r\n      if(success)\r\n        item.reference = null;\r\n    });\r\n  }\r\n\r\n  public edit(item:ReferenceListItem):void{\r\n    this.router.navigate(['/reference/edit/',item.reference.id]);\r\n  }\r\n\r\n  public create(item:ReferenceListItem):void{\r\n    let reference = new Reference();\r\n    reference.watertypeId = item.watertype.id;\r\n    this.referenceApi.save(reference).subscribe(ref => {\r\n      item.reference = ref;\r\n      this.edit(item);\r\n    });\r\n  }\r\n}\r\n","module.exports = \".taxon-icon{\\r\\n  border-radius:50%;\\r\\n  text-align:center;\\r\\n  height:30px;\\r\\n  width:30px;\\r\\n  font-size:18px;\\r\\n  padding:3px;\\r\\n  background:#EBEBEB;\\r\\n  color:#222;\\r\\n  display:inline-block;\\r\\n}\\r\\n\\r\\n:host >>> .datatable-body-row:hover .taxon-icon{\\r\\n  background:#FFF;\\r\\n}\\r\\n\\r\\n.taxon-icon-container{\\r\\n  width:36px;\\r\\n  display:inline-block;\\r\\n}\\r\\n\\r\\n.taxon-link{\\r\\n  text-decoration:none;\\r\\n  color:rgba(0,0,0,0.87);\\r\\n  text-transform:capitalize;\\r\\n}\\r\\n\\r\\n.button{\\r\\n  margin-top: 1%;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>Algemene data</mat-card-title>\\r\\n  <mat-form-field class=\\\"full-width\\\">\\r\\n    <input matInput placeholder=\\\"Zoeken...\\\" (keyup)='updateFilter($event)'>\\r\\n  </mat-form-field>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-card-title>Recente monsters</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material\\\"\\r\\n      [rows]=\\\"sampleRows\\\"\\r\\n      [columns]=\\\"sampleColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"20\\\">\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<ng-template #sampleDateTemplate let-row=\\\"row\\\">\\r\\n  {{row.date | date:'fullDate'}}\\r\\n</ng-template>\\r\\n<ng-template #sampleDateAddedTemplate let-row=\\\"row\\\">\\r\\n  {{row.dateAdded | date:'fullDate'}}\\r\\n</ng-template>\\r\\n<ng-template #sampleButtonTemplate let-row=\\\"row\\\">\\r\\n  <a [routerLink]=\\\"'/sample/view/'+row.id\\\" mat-raised-button>Details</a>\\r\\n</ng-template>\\r\\n<mat-card>\\r\\n  <mat-card-title>Locaties</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material\\\"\\r\\n      [rows]=\\\"locationRows\\\"\\r\\n      [columns]=\\\"locationColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n    <ng-template #waterCodeTemplate let-row=\\\"row\\\">\\r\\n      {{row.code}}\\r\\n    </ng-template>\\r\\n    <ng-template #waterDescriptionTemplate let-row=\\\"row\\\">\\r\\n      {{row.description}}\\r\\n    </ng-template>\\r\\n    <ng-template #waterDetailsTemplate let-row=\\\"row\\\">\\r\\n      <a [routerLink]=\\\"'../results/water/'+row.id\\\" mat-raised-button>Details</a>\\r\\n    </ng-template>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-card-title>Waterschappen</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material\\\"\\r\\n      [rows]=\\\"waterschapRows\\\"\\r\\n      [columns]=\\\"waterschapColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-card-title>Taxa</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material taxon-table\\\"\\r\\n      [rows]=\\\"taxonRows\\\"\\r\\n      [columns]=\\\"taxonColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n    <ng-template #taxonNameTemplate let-row=\\\"row\\\">\\r\\n\\t\\t\\t\\t<span class=\\\"taxon-icon-container\\\">\\r\\n\\t\\t\\t\\t\\t<mat-icon *ngIf=\\\"row.group && row.group.icon\\\" class=\\\"taxon-icon\\\" fontSet=\\\"fi\\\"\\r\\n                   [fontIcon]=\\\"'flaticon-'+row.group.icon\\\"></mat-icon>\\r\\n\\t\\t\\t\\t</span>\\r\\n      {{row.name}}\\r\\n    </ng-template>\\r\\n    <ng-template #taxonButtonTemplate let-row=\\\"row\\\">\\r\\n      <a [routerLink]=\\\"'/taxon/view/'+row.id\\\" mat-raised-button>Details</a>\\r\\n    </ng-template>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiLocationService} from '../services/api.location.service';\r\nimport {ApiWaterschapService} from '../services/api.waterschap.service';\r\nimport {Taxon,TaxonGroup} from '../models/taxon.model';\r\nimport {ApiTaxonService} from \"../services/api.taxon.service\";\r\nimport {DatatableComponent} from \"@swimlane/ngx-datatable\";\r\nimport {ApiSampleService} from '../services/api.sample.service';\r\nimport {Sample} from '../models/sample.model';\r\nimport {MarkerLocation} from '../models/markerLocation.model';\r\nimport {uniqueFilter} from '../services/arrayUtils';\r\n\r\ntype TaxonRow = {id:number,name:string,group?:TaxonGroup};\r\ntype SampleRow = {id:number, date:Date, location:string, dateAdded:Date};\r\n\r\n@Component({\r\n  selector: 'app-sample-Location-table',\r\n  providers: [ApiLocationService, ApiWaterschapService, ApiTaxonService, ApiSampleService],\r\n  templateUrl: './sample-Location-table.component.html',\r\n  styleUrls: ['./sample-Location-table.component.css']\r\n})\r\n\r\nexport class SampleLocationTableComponent implements OnInit {\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  @ViewChild('sampleDateTemplate') sampleDateTemplate;\r\n  @ViewChild('sampleDateAddedTemplate') sampleDateAddedTemplate;\r\n  @ViewChild('sampleButtonTemplate') sampleButtonTemplate;\r\n  @ViewChild('taxonNameTemplate') taxonNameTemplate;\r\n  @ViewChild('taxonButtonTemplate') taxonButtonTemplate;\r\n  @ViewChild('waterCodeTemplate') waterCodeTemplate;\r\n  @ViewChild('waterDescriptionTemplate') waterDescriptionTemplate;\r\n  @ViewChild('waterDetailsTemplate') waterDetailsTemplate;\r\n\r\n  samples = [];\r\n  sampleRows = [];\r\n  sampleColumns = [{name:'Locatie',prop:'location',cellTemplate:null}, {name:'Monster datum',prop:'date',cellTemplate:null}, {name:'Datum toegevoegd',prop:'dateAdded',cellTemplate:null}, {name:'Details',prop:'button',cellTemplate:null}];\r\n\r\n  locations = [];\r\n  locationRows = [];\r\n  locationColumns = [{name: 'Mp', prop: 'code', cellTemplate:null}, {name: 'Naam', prop: 'description', cellTemplate:null}, {name: 'details', prop: 'button', cellTemplate:null}];\r\n\r\n  waterschappen = [];\r\n  waterschapRows = [];\r\n  waterschapColumns = [{name: 'Naam', prop: 'name'}, {name: 'Adres', prop: 'address'}, {name: 'Huisnummer', prop: 'houseNumber'}, {name: 'Postcode', prop: 'zipCode'}, {name: 'Locatie', prop: 'location'}, {name: 'Telefoonnummer', prop: 'phoneNumber'}];\r\n\r\n  taxa = [];\r\n  taxonRows = [];\r\n  groupMap:Map<number,TaxonGroup> = new Map();\r\n  taxonColumns = [{name:'Naam', prop:'name', cellTemplate:null}, {name:'Details', prop:'button', cellTemplate:null}];\r\n\r\n  constructor(private sampleApi:ApiSampleService, private locationApi:ApiLocationService, private waterschapApi: ApiWaterschapService, private taxonApi: ApiTaxonService) {\r\n    this.loadResources().then(([samples,locations]) => this.toSampleRow(samples,locations));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.sampleApi.getRecent(100).subscribe(samples => {\r\n      this.sampleRows = samples;\r\n      this.samples = samples;\r\n    });\r\n\r\n    this.locationApi.getAllLocations().subscribe(locations => {\r\n      this.locationRows = locations;\r\n      this.locations = locations;\r\n    });\r\n\r\n    this.waterschapApi.getAll().subscribe(waterschappen => {\r\n      this.waterschapRows = waterschappen;\r\n      this.waterschappen = waterschappen;\r\n    });\r\n\r\n    this.taxonApi.getGroups().subscribe(groups => {\r\n      groups.forEach(group => this.groupMap.set(group.id,group));\r\n\r\n      this.taxonApi.getAll().subscribe(taxa => {\r\n        this.taxa = taxa;\r\n        this.taxonRows = taxa.map(taxon => this.toTaxonRow(taxon));\r\n      });\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.taxonColumns[0].cellTemplate = this.taxonNameTemplate;\r\n    this.taxonColumns[1].cellTemplate = this.taxonButtonTemplate;\r\n    this.locationColumns[0].cellTemplate = this.waterCodeTemplate;\r\n    this.locationColumns[1].cellTemplate = this.waterDescriptionTemplate;\r\n    this.locationColumns[2].cellTemplate = this.waterDetailsTemplate;\r\n    this.sampleColumns[1].cellTemplate = this.sampleDateTemplate;\r\n    this.sampleColumns[2].cellTemplate = this.sampleDateAddedTemplate;\r\n    this.sampleColumns[3].cellTemplate = this.sampleButtonTemplate;\r\n  }\r\n\r\n  updateFilter(event) {\r\n    const val = event.target.value.toLowerCase();\r\n    const waterschappenFiltered = this.waterschappen.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    const locationFiltered = this.locations.filter(function(d) {\r\n      return d.description.toLowerCase().indexOf(val) !== -1 || d.code.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    const taxaFiltered = this.taxa.filter(function(d) {\r\n      return d.name.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    const sampleFiltered = this.sampleRows.filter(function(d) {\r\n      return d.location.toLowerCase().indexOf(val) !== -1 || !val;\r\n    });\r\n\r\n    this.waterschapRows = waterschappenFiltered;\r\n    this.locationRows = locationFiltered;\r\n    this.taxonRows = taxaFiltered.map(taxon => this.toTaxonRow(taxon));\r\n    this.sampleRows = sampleFiltered;\r\n\r\n    this.table.offset = 0;\r\n  }\r\n\r\n  private toTaxonRow(taxon: Taxon): TaxonRow {\r\n    let row: TaxonRow = {id:taxon.id,name:taxon.name};\r\n    let group = this.groupMap.get(taxon.groupId);\r\n    if(group)\r\n      row.group = group;\r\n    return row;\r\n  }\r\n\r\n  private toSampleRow(samples: Sample[],locations: MarkerLocation[]) {\r\n    let locationIdMap: Map<number, MarkerLocation> = new Map();\r\n    locations.forEach(location => locationIdMap.set(location.id, location));\r\n    this.sampleRows = samples.map(sample =>\r\n      ({id: sample.id, date: sample.date, dateAdded: this.stringToDate(sample.date_added), location: locationIdMap.get(sample.location_id).description}));\r\n  }\r\n\r\n  private stringToDate(date) {\r\n    let cuttedDate = date.substring(0, 11);\r\n    cuttedDate += '\"';\r\n    return new Date(cuttedDate);\r\n  }\r\n\r\n  private async loadResources(): Promise<[Sample[], MarkerLocation[]]>{\r\n    let samples = await this.sampleApi.getRecent(100).toPromise();\r\n    let locationIds = samples.map(sample => sample.location_id).filter(uniqueFilter);\r\n    let locations;\r\n\r\n    if(locationIds.length === 0)\r\n      locations = [];\r\n    else\r\n      locations = await this.locationApi.getByIds(locationIds).toPromise();\r\n\r\n    return [samples,locations];\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"\\r\\n<!-- Loading card -->\\r\\n<div *ngIf=\\\"!globalRef.finished\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div style=\\\"display: block\\\" *ngIf=\\\"globalRef.finished\\\">\\r\\n  <canvas baseChart\\r\\n          class=\\\"chart\\\"\\r\\n          [datasets]=\\\"globalRef.barChartDataList[pos]\\\"\\r\\n          [labels]=\\\"globalRef.barChartLabels\\\"\\r\\n          [options]=\\\"options\\\"\\r\\n          [legend]=\\\"barChartLegend\\\"\\r\\n          [chartType]=\\\"barChartType\\\"\\r\\n          [colors]=\\\"globalRef.barChartColorsList[pos]\\\"\\r\\n\\r\\n  ></canvas>\\r\\n</div>\\r\\n\"","import {Component, Input, OnInit} from '@angular/core';\r\nimport {WewChartConfig, WewXAxisConfig} from \"../../wew/wew-bar-chart/wew-bar-chart.component\";\r\nimport {WEWFactor} from \"../../models/wew.model\";\r\nimport {ChartEntity} from \"../../models/chart-entity.model\";\r\nimport {GlobalReferenceService} from \"../../services/global.reference.service\";\r\nimport {animate, state, style, transition, trigger} from \"@angular/animations\";\r\nexport type WewChartConfig = {\r\n  entities:ChartEntity[],\r\n  factors?:WEWFactor[],\r\n  barGap?:string,\r\n  barCategoryGap?:string,\r\n  xAxis?:WewXAxisConfig,\r\n  width?:number,\r\n  height?:number\r\n};\r\n\r\n@Component({\r\n  selector: 'app-new-sample-compare',\r\n  templateUrl: './new-sample-compare.component.html',\r\n  styleUrls: ['./new-sample-compare.component.css'],\r\n  animations:[\r\n    trigger('mainCardAnim',[\r\n      state('void',style({opacity:0})),\r\n      transition(':enter',[animate('300ms 150ms',style({opacity:1}))]),\r\n      transition(':leave',[animate('150ms', style({opacity:0}))])\r\n    ])\r\n  ]\r\n})\r\n\r\nexport class NewSampleCompareComponent implements OnInit {\r\n\r\n\r\n  @Input() settings:any\r\n\r\n  constructor(public globalRef: GlobalReferenceService) { }\r\n  public pos:number;\r\n  ngOnInit() {\r\n    this.pos = this.settings.pos;\r\n  }\r\n\r\n  public barChartOptions:any = {\r\n    scaleShowVerticalLines: false,\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [{\r\n        stacked: true,\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 1000,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }]\r\n    },\r\n  };\r\n  public barChartLabels:string[] = ['2006', '2007', '2008', '2009', '2010', '2011', '2012'];\r\n  public barChartData:any[] = [\r\n    {data: [65], label: 'Series A', stack: 'test'},\r\n    {data: [28], label: 'Series B',stack: 'test'},\r\n    {data: [0,28], label: 'Series A', stack: 'te'},\r\n    {data: [0, 28], label: 'Series B',stack: 'te'},\r\n  ];\r\n  public barChartType:string = 'bar';\r\n  public barChartLegend:boolean = false;\r\n\r\n  options: any = {\r\n    tooltips:{\r\n      mode: 'index',\r\n      callbacks: {\r\n        label: (tooltipItem, data) => this.customLabel(tooltipItem, data),\r\n        axisPointer:{type:'shadow'},\r\n        backgroundColor:'rgba(0,0,0,0.9)'\r\n      }\r\n    },\r\n    scales: {\r\n      xAxes: [{\r\n        stacked: true,\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        stacked: true,\r\n        ticks: {\r\n          beginAtZero: true,\r\n          max: 10,\r\n          min: 0\r\n        },\r\n        gridLines: {\r\n          color: 'rgba(244,66,66,1)'\r\n        }\r\n      }]\r\n    },\r\n\r\n    responsive: true\r\n  }\r\n\r\n  public customLabel(tooltipItem, data)\r\n  {\r\n\r\n\r\n    let label = data.datasets[tooltipItem.datasetIndex].label || '';\r\n    // console.log(\"tooltip:\", tooltipItem)\r\n    // console.log('dataset: ', data.datasets[tooltipItem.datasetIndex])\r\n    if (label) {\r\n      label += ': ';\r\n    }\r\n    label += Math.round(tooltipItem.yLabel * 100) / 100;\r\n    if ((tooltipItem.index + 1 === data.datasets[tooltipItem.datasetIndex].data.length)) {\r\n      return label;\r\n    }else{\r\n      return '';\r\n    }\r\n\r\n  }\r\n}\r\n","module.exports = \".comparedSampleTable {\\r\\n  width: auto;\\r\\n}\\r\\n\"","module.exports = \"<mat-card *ngIf=\\\"showLocationTable\\\">\\r\\n  <mat-card-title>Locaties</mat-card-title>\\r\\n  <mat-card-subtitle>Kies hier de monster die u wilt vergelijken</mat-card-subtitle>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material taxon-table\\\"\\r\\n      [rows]=\\\"locations\\\"\\r\\n      [columns]=\\\"locationColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<ng-template #locationsButtonTemplate let-row=\\\"row\\\">\\r\\n  <a mat-raised-button (click)=\\\"onSelect(row.id)\\\">Bekijk monsters</a>\\r\\n</ng-template>\\r\\n\\r\\n<mat-card *ngIf=\\\"showSampleTable\\\">\\r\\n  <mat-card-title>\\r\\n    Monsters van {{selectedLocation.description}}\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <a mat-raised-button class=\\\"backButton\\\" (click)=\\\"setShowLocationTable()\\\">Terug\\r\\n      naar overzicht</a>\\r\\n    <a mat-raised-button class=\\\"backButton\\\" (click)=\\\"compareCurrentLocation()\\\">Vergelijk alle monsters van deze\\r\\n      locatie</a>\\r\\n    <a mat-raised-button class=\\\"backButton\\\" (click)=\\\"resetLocation()\\\">Reset</a>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material taxon-table\\\"\\r\\n      [rows]=\\\"samples\\\"\\r\\n      [columns]=\\\"sampleColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<ng-template #samplesButtonTemplate let-row=\\\"row\\\">\\r\\n  <a mat-raised-button (click)=\\\"onSelect(row.id)\\\">Toevoegen</a>\\r\\n</ng-template>\\r\\n<ng-template #sampleDateTemplate let-row=\\\"row\\\">\\r\\n  {{row.date | date:'fullDate'}}\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"showGraph\\\">\\r\\n  <mat-card-title>Factor waardes per monster</mat-card-title>\\r\\n  <mat-card-subtitle>Kies in de bovenstaande tabel monsters om te vergelijken</mat-card-subtitle>\\r\\n  <mat-card-content>\\r\\n    <a *ngIf=\\\"wewConfigs\\\" mat-raised-button class=\\\"backButton\\\" (click)=\\\"clearGraph()\\\">Grafiek leeg maken</a>\\r\\n    <mat-tab-group>\\r\\n      <mat-tab *ngFor=\\\"let entry of settings\\\"\\r\\n               [label]=\\\"entry.factors.name\\\">\\r\\n        <div class=\\\"factor-group\\\">\\r\\n          <app-new-sample-compare [settings]=\\\"entry\\\"\\r\\n                             (init)=\\\"onWewChartInit($event)\\\"></app-new-sample-compare>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n\\r\\n\\r\\n    <!--<mat-tab-group>-->\\r\\n      <!--<mat-tab *ngFor=\\\"let config of wewConfigs\\\"-->\\r\\n               <!--[label]=\\\"config.factors[0].name\\\">-->\\r\\n        <!--<div class=\\\"factor-group\\\">-->\\r\\n          <!--<app-wew-bar-chart [config]=\\\"config\\\"-->\\r\\n                             <!--(init)=\\\"onWewChartInit($event)\\\"></app-wew-bar-chart>-->\\r\\n        <!--</div>-->\\r\\n      <!--</mat-tab>-->\\r\\n    <!--</mat-tab-group>-->\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ApiSampleService} from '../../services/api.sample.service';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ApiLocationService} from '../../services/api.location.service';\r\nimport {WewChartConfig} from '../../wew/wew-bar-chart/wew-bar-chart.component';\r\nimport {MaterialPalette} from '../../services/palette';\r\nimport {\r\n  ChartEntity,\r\n  ChartEntityManager\r\n} from '../../models/chart-entity.model';\r\nimport {SimpleWEWValue, WEWFactor, WEWFactorClass} from '../../models/wew.model';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\nimport {MarkerLocation} from \"../../models/markerLocation.model\";\r\nimport {ApiReferenceService} from \"../../services/api.reference.service\";\r\nimport {GlobalReferenceService} from \"../../services/global.reference.service\";\r\n\r\ntype FactorClassCalculation = {\r\n  factorClass: WEWFactorClass,\r\n  sampleValue: number,\r\n};\r\n\r\n@Component({\r\n  providers: [ApiSampleService, ApiLocationService, ChartEntityManager, ApiWewService],\r\n  selector: 'app-sample-compare',\r\n  templateUrl: './sample-compare.component.html',\r\n  styleUrls: ['./sample-compare.component.css']\r\n})\r\n\r\nexport class SampleCompareComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('locationsButtonTemplate') locationsButtonTemplate;\r\n  @ViewChild('samplesButtonTemplate') samplesButtonTemplate;\r\n  @ViewChild('sampleDateTemplate') sampleDateTemplate;\r\n  @ViewChild('locationsButtonTemplateAll') locationsButtonTemplateAll;\r\n  public wewConfig: WewChartConfig;\r\n  public locations = [];\r\n  public settings:any[] = [];\r\n  public locationColumns = [\r\n    {name: 'Mp', prop: 'code', cellTemplate: null},\r\n    {name: 'Naam', prop: 'description', cellTemplate: null},\r\n    {name: 'Monsters', prop: 'button', cellTemplate: null}\r\n  ];\r\n  public samples = [];\r\n  public sampleColumns = [\r\n    {name: 'Datum genomen', prop: 'date', cellTemplate: null},\r\n    {name: 'Kwaliteit', prop: 'quality', cellTemplate:null},\r\n    {name: 'Details', prop: 'button', cellTemplate: null}\r\n  ];\r\n  public comparedSampleColumns = [\r\n    {name: 'Staaf nummer', prop: 'id', cellTemplate: null},\r\n    {name: 'Datum genomen', prop: 'date', cellTemplate: null},\r\n    {name: 'Locatie', prop: 'locationName', cellTemplate: null}\r\n  ];\r\n  public comparedSampleRows = [];\r\n  public showLocationTable = true;\r\n  public showSampleTable = false;\r\n  public showGraph = false;\r\n  public selectedLocation = {};\r\n  public samplesToCompare = [];\r\n  private factors: WEWFactor[];\r\n  public wewConfigs: WewChartConfig[];\r\n  private wewChartInstance;\r\n  public entityCalc = [];\r\n  private factorClassIdMap: Map<number/*factor class id*/, WEWFactorClass>;\r\n  private calcMap: Map<WEWFactorClass, SimpleWEWValue>;\r\n\r\n  constructor(private apiSample: ApiSampleService, private apiLocation: ApiLocationService,\r\n              private route: ActivatedRoute, private chartEntityManager: ChartEntityManager,\r\n              private apiWew: ApiWewService, private apiReference: ApiReferenceService, private globalRef: GlobalReferenceService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getAllLocations();\r\n    this.loadFactors();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.locationColumns[2].cellTemplate = this.locationsButtonTemplate;\r\n    this.sampleColumns[0].cellTemplate = this.sampleDateTemplate;\r\n    this.sampleColumns[2].cellTemplate = this.samplesButtonTemplate;\r\n    this.comparedSampleColumns[1].cellTemplate = this.sampleDateTemplate;\r\n  }\r\n\r\n  public onSelectOld(id) {\r\n\r\n\r\n    if (this.showLocationTable) {\r\n      this.getLocationById(id);\r\n      this.getSamplesByLocationId(id);\r\n      this.showLocationTable = false;\r\n      this.showSampleTable = true;\r\n      return;\r\n    }\r\n\r\n    this.getSampleById(id);\r\n    this.samples.forEach((sample) => {\r\n      if (sample.id === id) {\r\n        let index = this.samples.indexOf(sample, 0);\r\n        this.samples.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  public onSelect(id) {\r\n\r\n\r\n    if (this.showLocationTable) {\r\n      this.getLocationById(id);\r\n      this.getSamplesByLocationId(id);\r\n      this.showLocationTable = false;\r\n      this.showSampleTable = true;\r\n      return;\r\n    }\r\n    this.globalRef.addSample(id);\r\n\r\n    this.getSampleById(id);\r\n    this.samples.forEach((sample) => {\r\n      if (sample.id === id) {\r\n        let index = this.samples.indexOf(sample, 0);\r\n        this.samples.splice(index, 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getAllLocations() {\r\n    this.apiLocation.getAllLocations()\r\n      .subscribe(locations => {\r\n        this.locations = locations;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private getLocationById(id: number) {\r\n    this.apiLocation.getById(id)\r\n      .subscribe(location => {\r\n        this.selectedLocation = location;\r\n        this.globalRef.setReferenceByKrwId(location.watertypeKrwId);\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private getSampleById(id: number) {\r\n    this.apiSample.getSample(id)\r\n      .subscribe(sample => {\r\n        let name = this.selectedLocation['description'];\r\n        this.samplesToCompare.push({\r\n          sample: sample,\r\n          locationName: name\r\n        });\r\n        this.addToChart();\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  private getSamplesByLocationId(id: number) {\r\n    this.apiSample.getByLocationId(id)\r\n      .subscribe(samples => {\r\n        this.samples = samples;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  public setShowLocationTable() {\r\n    this.showSampleTable = false;\r\n    this.showLocationTable = true;\r\n    this.selectedLocation = {};\r\n  }\r\n\r\n  private loadFactors() {\r\n    this.apiWew.getFactors()\r\n      .subscribe(factors => {\r\n        this.factors = factors;\r\n      }, error => console.log(error));\r\n  }\r\n\r\n  public addToChart() {\r\n    this.comparedSampleRows.splice(0);\r\n    const palette = new MaterialPalette().shift();\r\n    const chartEntities = [];\r\n    let entityCounter = 1;\r\n\r\n    this.samplesToCompare.forEach((item) => {\r\n      const name = item.sample.date.toLocaleString('nl-NL', {\r\n        day: 'numeric',\r\n        month: 'short',\r\n        year: 'numeric'\r\n      });\r\n      chartEntities.push(this.chartEntityManager\r\n        .createFromSample(item.sample, entityCounter.toString(), palette.clone()));\r\n      this.comparedSampleRows.push({\r\n        id: entityCounter,\r\n        date: name,\r\n        locationName: item.locationName\r\n      });\r\n      entityCounter++;\r\n    });\r\n\r\n    let pos = 0;\r\n    this.settings = [];\r\n    this.wewConfigs = this.factors.map(factor => {\r\n      this.settings.push({pos: pos, factors: factor});\r\n      pos++;\r\n      const config: WewChartConfig = {\r\n        entities: chartEntities,\r\n        factors: [factor],\r\n        xAxis: 'entity',\r\n        width: (chartEntities.length + 1) * 100,\r\n        height: 350,\r\n      };\r\n      return config;\r\n    });\r\n    this.showGraph = true;\r\n    if (this.wewChartInstance) {\r\n      this.wewChartInstance.reload(this.wewConfigs);\r\n    }\r\n  }\r\n\r\n  public onWewChartInit(wewChartInstance) {\r\n    if (!wewChartInstance)\r\n      this.wewChartInstance = wewChartInstance;\r\n  }\r\n\r\n  public compareCurrentLocation() {\r\n    let ids:number[] = []\r\n    this.samples.forEach((item) => {\r\n      this.samplesToCompare.push({sample: item, locationName: this.selectedLocation['description']});\r\n      ids.push(item.id);\r\n    });\r\n    this.samples.splice(0);\r\n    this.addToChart();\r\n    this.globalRef.addSamples(ids);\r\n  }\r\n\r\n  public clearGraph() {\r\n    this.globalRef.clearGraph();\r\n    this.samplesToCompare.splice(0);\r\n    this.wewConfigs.splice(0);\r\n    this.comparedSampleRows.splice(0);\r\n    this.getSamplesByLocationId(this.selectedLocation['id']);\r\n    this.showGraph = false;\r\n  }\r\n\r\n  public resetLocation() {\r\n    this.globalRef.clearGraph();\r\n    if (this.samplesToCompare)\r\n      this.samplesToCompare.splice(0);\r\n    if (this.wewConfigs)\r\n      this.wewConfigs.splice(0);\r\n    if (this.comparedSampleRows)\r\n      this.comparedSampleRows.splice(0);\r\n    this.getSamplesByLocationId(this.selectedLocation['id']);\r\n    this.showGraph = false;\r\n  }\r\n\r\n}\r\n","module.exports = \".factor{\\r\\n  border:1px solid #AAA;\\r\\n  padding:1em;\\r\\n  margin:1em;\\r\\n  float:left;\\r\\n  min-height:270px;\\r\\n}\\r\\n\\r\\n.head,.factorClass,.total{\\r\\n  padding:0 2px;\\r\\n}\\r\\n\\r\\n.head span,.factorClass span,.total span{\\r\\n  display:inline-block;\\r\\n}\\r\\n\\r\\n.factorName{\\r\\n  font-size:1.5em;\\r\\n}\\r\\n\\r\\n.factorName,.head,.total{\\r\\n  font-weight:bold;\\r\\n}\\r\\n\\r\\n.total{\\r\\n  border-top:1px solid #AAA;\\r\\n  margin-top:6px;\\r\\n  padding-top:3px;\\r\\n}\\r\\n\\r\\n/* Width stuff */\\r\\n\\r\\n.factor{\\r\\n  --fc-code-width:50px;\\r\\n  --fc-desc-width:200px;\\r\\n  --ref-width:70px;\\r\\n  --sam-width:60px;\\r\\n  --diff-width:60px;\\r\\n  --total-width:calc(var(--fc-code-width) + var(--fc-desc-width) + var(--ref-width) + var(--sam-width) + var(--diff-width) + 1em)\\r\\n}\\r\\n\\r\\n.factor,.total,.head,.factorClass{\\r\\n  width:var(--total-width);\\r\\n}\\r\\n\\r\\n.fcCode{width:var(--fc-code-width);}\\r\\n\\r\\n.fcDesc{width:var(--fc-desc-width);}\\r\\n\\r\\n.fc{width:calc(var(--fc-code-width) + var(--fc-desc-width));}\\r\\n\\r\\n.ref{width:var(--ref-width);}\\r\\n\\r\\n.sam{width:var(--sam-width);}\\r\\n\\r\\n.diff{width:var(--diff-width);}\\r\\n\\r\\n.total .label{width:calc(var(--fc-code-width) + var(--fc-desc-width) + var(--ref-width) + var(--sam-width) + .75em);}\\r\\n\\r\\n.total .value{width:var(--fc-diff-width);}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Monster kwaliteit\\r\\n  </mat-card-title>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <div *ngIf=\\\"sample && location\\\">\\r\\n    <mat-card-title>Monster genomen bij {{location.description}}</mat-card-title>\\r\\n    <mat-card-subtitle>{{sample.date|date:'d MMMM y'}}</mat-card-subtitle>\\r\\n  </div>\\r\\n  <mat-card-content>\\r\\n    <div *ngIf=\\\"totalDiff\\\">\\r\\n      Totale verschil met de referentie: {{totalDiff.toFixed(2)}} punten\\r\\n    </div>\\r\\n    <div>\\r\\n      <div class=\\\"factor\\\" *ngFor=\\\"let factorCalc of factorCalcs\\\">\\r\\n        <div class=\\\"factorName\\\">{{factorCalc.factor.name}}</div>\\r\\n        <div class=\\\"head\\\">\\r\\n          <span class=\\\"fc\\\">Factor Klasse</span>\\r\\n          <span class=\\\"ref\\\">Referentie</span>\\r\\n          <span class=\\\"sam\\\">Monster</span>\\r\\n          <span class=\\\"diff\\\">Verschil</span>\\r\\n        </div>\\r\\n        <div class=\\\"factorClass\\\" *ngFor=\\\"let classCalc of factorCalc.calculations\\\">\\r\\n          <span class=\\\"fcCode\\\">{{classCalc.factorClass.code}}</span>\\r\\n          <span class=\\\"fcDesc\\\">{{classCalc.factorClass.description}}</span>\\r\\n          <span class=\\\"ref\\\">{{classCalc.referenceValue.toFixed(2)}}</span>\\r\\n          <span class=\\\"sam\\\">{{classCalc.sampleValue.toFixed(2)}}</span>\\r\\n          <span class=\\\"diff\\\">{{classCalc.difference.toFixed(2)}}</span>\\r\\n        </div>\\r\\n        <div class=\\\"total\\\">\\r\\n          <span class=\\\"label\\\">Totaal</span>\\r\\n          <span class=\\\"value\\\">{{factorCalc.total.toFixed(2)}}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"clear:both\\\"></div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component,OnInit,Input} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\n\r\nimport {Sample} from \"../../models/sample.model\";\r\nimport {ApiSampleService} from '../../services/api.sample.service';\r\nimport {Reference} from '../../models/reference.model';\r\nimport {ApiReferenceService} from '../../services/api.reference.service';\r\nimport {WEWFactor,WEWFactorClass,SimpleWEWValue} from '../../models/wew.model';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\nimport {MarkerLocation} from '../../models/markerLocation.model';\r\nimport {ApiLocationService} from '../../services/api.location.service';\r\n\r\ntype FactorClassCalculation = {\r\n  factorClass:WEWFactorClass,\r\n  sampleValue:number,\r\n  referenceValue:number,\r\n  difference:number\r\n};\r\n\r\ntype FactorCalculation = {\r\n  factor:WEWFactor,\r\n  total:number,\r\n  calculations:FactorClassCalculation[]\r\n};\r\n\r\n@Component({\r\n  selector:'app-sample-quality-sheet',\r\n  providers:[ApiSampleService,ApiReferenceService,ApiWewService,ApiLocationService],\r\n  templateUrl:'./sample-quality-sheet.component.html',\r\n  styleUrls:['./sample-quality-sheet.component.css']\r\n})\r\nexport class SampleQualitySheetComponent implements OnInit{\r\n  public factorCalcs:FactorCalculation[];\r\n  public sample:Sample;\r\n  public location:MarkerLocation;\r\n  public totalDiff:number;\r\n\r\n  private factors:WEWFactor[];\r\n  private factorClassIdMap:Map<number/*factor class id*/,WEWFactorClass>;\r\n  private sampleCalcMap:Map<WEWFactorClass,SimpleWEWValue>;\r\n  private referenceCalcMap:Map<WEWFactorClass,SimpleWEWValue>;\r\n\r\n  constructor(\r\n    private sampleApi:ApiSampleService,\r\n    private referenceApi:ApiReferenceService,\r\n    private wewApi:ApiWewService,\r\n    private locationApi:ApiLocationService,\r\n    private route:ActivatedRoute\r\n  ){}\r\n\r\n  async ngOnInit(){\r\n    let id = await this.getSampleId();\r\n\r\n    //Load factors\r\n    let factorsPr = this.wewApi.getFactors().toPromise();\r\n\r\n    //Load sample and its calculations\r\n    this.sample = await this.sampleApi.getSample(id).toPromise();\r\n    let sampleCalcPr = this.sampleApi.getCalculationsBySample(this.sample.id).toPromise();\r\n\r\n    //Load reference and is calculations\r\n    this.location = await this.locationApi.getById(this.sample.location_id).toPromise();\r\n    let reference = await this.referenceApi.getByWatertype(this.location.watertypeKrwId).toPromise();\r\n    let refCalcPr = this.referenceApi.getCalculationsByReference(reference.id).toPromise();\r\n\r\n    //Wait for factors to be loaded\r\n    this.factors = await factorsPr;\r\n    this.factorClassIdMap = new Map();\r\n    this.factors.forEach(factor => factor.classes.forEach(fc => this.factorClassIdMap.set(fc.id,fc)));\r\n\r\n    //Make easy lookup maps Map<WEWFactorClass,SimpleWEWValue>\r\n    this.sampleCalcMap = await this.makeFactorClassCalcMap(sampleCalcPr);\r\n    this.referenceCalcMap = await this.makeFactorClassCalcMap(refCalcPr);\r\n\r\n    //Make objects to show on the page\r\n    this.doCalculations();\r\n  }\r\n\r\n  private async getSampleId():Promise<number>{\r\n    let idPr:Promise<string> = new Promise((resolve,reject) => {\r\n      this.route.paramMap.subscribe(paramMap => resolve(paramMap.get('id')),reject);\r\n    });\r\n    let id:number = Number.parseInt(await idPr);\r\n    return id;\r\n  }\r\n\r\n  private async makeFactorClassCalcMap(calcsPr:Promise<SimpleWEWValue[]>):Promise<Map<WEWFactorClass,SimpleWEWValue>>{\r\n    let calcs = await calcsPr;\r\n    let map:Map<WEWFactorClass,SimpleWEWValue> = new Map();\r\n    calcs.forEach(calc => map.set(this.factorClassIdMap.get(calc.factorClassId),calc));\r\n    return map;\r\n  }\r\n\r\n  private doCalculations(){\r\n    this.factorCalcs = this.factors.map(factor => {\r\n      let calculations = factor.classes.map(factorClass => {\r\n        let referenceValue = this.referenceCalcMap.get(factorClass).value;\r\n        let sampleValue = this.sampleCalcMap.get(factorClass).value;\r\n        return {\r\n          factorClass,\r\n          referenceValue,\r\n          sampleValue,\r\n          difference:Math.abs(referenceValue-sampleValue)\r\n        };\r\n      });\r\n      return {\r\n        factor,\r\n        calculations,\r\n        total:calculations.reduce((total,next) => total+next.difference,0)\r\n      };\r\n    });\r\n\r\n    this.totalDiff = this.factorCalcs.reduce((result,{total}) => result+total,0);\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>Importeer monsters</mat-card-title>\\r\\n</mat-card>\\r\\n<!-- ToDo: handle errors nicely -->\\r\\n<mat-card *ngIf=\\\"state=='error'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Error</mat-card-title>\\r\\n  <mat-card-content>{{errors|json}}</mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Loading card -->\\r\\n<mat-card *ngIf=\\\"state=='loading'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Start, show file input -->\\r\\n<mat-card *ngIf=\\\"state=='start'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Upload CSV bestanden</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <input type=\\\"file\\\" accept=\\\".csv, text/csv\\\" (change)=\\\"fileChange($event)\\\" multiple/>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Let the user confirm sample subresources -->\\r\\n<div *ngIf=\\\"state=='confirmatata'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-title>Bevestiging vereist</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <p>De volgende watertypes, locaties of soorten zijn nog niet in het systeem bekend, controleer of deze\\r\\n        correct zijn.</p>\\r\\n      <button mat-raised-button (click)=\\\"confirmAll()\\\">Bevestig alles</button>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card *ngIf=\\\"confirm.watertypes.length\\\">\\r\\n    <mat-card-title>Nieuwe watertypes</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <mat-list dense>\\r\\n        <mat-list-item *ngFor=\\\"let watertype of confirm.watertypes\\\">\\r\\n          {{watertype.code}} - {{watertype.name}}\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card *ngIf=\\\"confirm.locations.length\\\">\\r\\n    <mat-card-title>Nieuwe locaties</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <mat-list dense>\\r\\n        <mat-list-item *ngFor=\\\"let location of confirm.locations\\\">\\r\\n          {{location.code}} - {{location.description}}\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card *ngIf=\\\"confirm.taxonIds.length\\\">\\r\\n    <mat-card-title>Nieuwe soorten</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <mat-list dense>\\r\\n        <mat-list-item *ngFor=\\\"let taxon of confirm.taxonIds\\\">\\r\\n          {{taxon.name}}\\r\\n        </mat-list-item>\\r\\n      </mat-list>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n<!-- Let the user confirm the samples -->\\r\\n<div *ngIf=\\\"state=='confirmSample'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-title>Monster controle</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <p>Controleer de volgende monster gegevens voor ze opgeslagen worden.</p>\\r\\n      <button mat-raised-button (click)=\\\"confirmSamples()\\\">Bevestig alles</button>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card *ngFor=\\\"let sample of confirm.samplesFast\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title><strong>{{sample.locationCode}}:</strong> {{sample.locationDescription}}</mat-card-title>\\r\\n      <mat-card-subtitle>{{sample.date|date:'d MMMM y'}}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      {{sample.taxonValues.size}} soorten\\r\\n      <!-- TODO: Makes the page very slow\\r\\n            <mat-list dense>\\r\\n                <mat-list-item *ngFor=\\\"let .. of sample.taxonValues\\\">\\r\\n                    ...\\r\\n                </mat-list-item>\\r\\n            </mat-list>\\r\\n            -->\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\\r\\n<!-- Show final confirmation -->\\r\\n<mat-card *ngIf=\\\"state=='finished'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Klaar</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    De monsters zijn opgeslagen.\\r\\n    <button mat-raised-button (click)=\\\"goToStart()\\\">Importeer meer monsters</button>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {trigger,style,transition,animate,group,state} from '@angular/animations';\r\n\r\nimport {Sample} from 'app/models/sample.model';\r\nimport {MarkerLocation} from 'app/models/markerLocation.model';\r\nimport {Taxon} from '../../models/taxon.model';\r\nimport {Watertype} from '../../models/watertype.model';\r\n\r\nimport {ApiSampleService} from 'app/services/api.sample.service';\r\nimport {ApiTaxonService} from '../../services/api.taxon.service';\r\nimport {ApiLocationService} from '../../services/api.location.service';\r\nimport {ApiWatertypeService} from '../../services/api.watertype.service';\r\n\r\n// import 'papaparse';\r\n\r\n//The states an import process can be in\r\ntype ImportState = 'anim'|'start'|'loading'|'confirmData'|'confirmSample'|'finished'|'error';\r\n//A row in a sample csv file\r\ntype SampleImport = {\r\n  //Location code and description\r\n  Mp:string, Locatie:string,\r\n  //Parent watertype code and name\r\n  'Code watertype':string, 'Naam watertype':string,\r\n  //Water Framework Directive watertype code and name\r\n  Krw_Code:string, Krw_Naam:string,\r\n  //Rijksdriehoekscoördinaten\r\n  'X-coor':number, 'Y-coor':number,\r\n  //Date, ignore time, it'll always be empty\r\n  Datum:string, Tijd:string,\r\n  //Method used to obtain sample\r\n  'Code methode':string, 'Naam methode':string, 'Eenheid methode':string,\r\n  //Taxon name\r\n  Taxonnaam:string,\r\n  //Amount of taxonIds found in sample\r\n  Waarde:number,\r\n};\r\n\r\n@Component({\r\n  selector: 'app-sample-upload',\r\n  providers: [ApiSampleService,ApiTaxonService,ApiLocationService,ApiWatertypeService],\r\n  templateUrl: './sample-upload.component.html',\r\n  styleUrls: ['./sample-upload.component.css'],\r\n  animations:[\r\n    trigger('mainCardAnim',[\r\n      state('void',style({opacity:0})),\r\n      transition(':enter',[animate('300ms 150ms',style({opacity:1}))]),\r\n      transition(':leave',[animate('150ms', style({opacity:0}))])\r\n    ])\r\n  ]\r\n})\r\nexport class SampleUploadComponent /* implements OnInit */ {\r\n  // //The state of the import process\r\n  // state:ImportState = 'start';\r\n  // //NextState is used to go to the correct state after an animated transition\r\n  // private nextState:ImportState;\r\n  // //Any errors that happen during the process\r\n  // errors:any[] = [];\r\n  // //All rows from all csv files\r\n  // private csvData:SampleImport[];\r\n  //\r\n  // //Map codes to objects\r\n  // private watertypeMap:Map<string,Watertype> = new Map();\r\n  // private locationMap:Map<string,MarkerLocation> = new Map();\r\n  // private taxonMap:Map<string,Taxon> = new Map();\r\n  // //Map ids to objects (only used when confirming samples)\r\n  // public locationIdsMap:Map<number,MarkerLocation> = new Map();\r\n  // public taxonIdsMap:Map<number,Taxon> = new Map();\r\n  // //Store parent relations\r\n  // private locationWatertype:Map<MarkerLocation,string/*watertype code*/> = new Map();\r\n  // private locationWatertypeKrw:Map<MarkerLocation,string/*watertype code*/> = new Map();\r\n  //\r\n  // //Data to conform on the page before saving to server\r\n  // confirm:{\r\n  //   watertypes:Watertype[],\r\n  //   locations:MarkerLocation[],\r\n  //   taxonIds:Taxon[],\r\n  //   samples:Sample[],\r\n  //   samplesFast:any[]\r\n  // } = {watertypes:[],locations:[],taxonIds:[],samples:[],samplesFast:[]};\r\n  //\r\n  // constructor(\r\n  //   private sampleApi:ApiSampleService,\r\n  //   private taxonApi:ApiTaxonService,\r\n  //   private locationApi:ApiLocationService,\r\n  //   private watertypeApi:ApiWatertypeService\r\n  //\r\n  // ){}\r\n  //\r\n  // ngOnInit(){}\r\n  //\r\n  // //Set the state of the importing process\r\n  // private setState(state:ImportState){\r\n  //   this.state = 'anim';\r\n  //   this.nextState = state;\r\n  // }\r\n  //\r\n  // //Go to the next state when the :leave animation finishes\r\n  // mainCardAnimDone($event){\r\n  //   if($event.toState==='void'){\r\n  //     this.state = this.nextState;\r\n  //   }\r\n  // }\r\n  //\r\n  // //ToDo: improve error handling\r\n  // //Right now we just print the array as json on the page\r\n  // public handleError(...error){\r\n  //   this.setState('error');\r\n  //   this.errors.push(error);\r\n  // }\r\n  //\r\n  // //One or more files has been uploaded\r\n  // public fileChange($event:any){\r\n  //   this.setState('loading');\r\n  //\r\n  //   let files:FileList = $event.target.files;\r\n  //   let filesArr:File[] = [];\r\n  //   for(let i=0;i<files.length;++i){\r\n  //     filesArr.push(files.item(i));\r\n  //   }\r\n  //\r\n  //   this.handleUploadedFiles(filesArr);\r\n  // }\r\n  //\r\n  // //Parse the files\r\n  // private handleUploadedFiles(files:File[]):void{\r\n  //   Promise.all(files.map(this.parseCSV))\r\n  //     .then(csvs => csvs.map(({result}) => result.data).reduce((arr,data)=>[...arr,...data]))\r\n  //     .then(data => {\r\n  //       data.forEach(row => {\r\n  //         row['X-coor'] = parseInt(row['X-coor'],10);\r\n  //         row['Y-coor'] = parseInt(row['Y-coor'],10);\r\n  //         row['Waarde'] = parseInt(row['Waarde'],10);\r\n  //         row['Mp'] = row['Mp'].trim();\r\n  //         row['Locatie'] = row['Locatie'].trim();\r\n  //         row['Code watertype'] = row['Code watertype'].trim();\r\n  //         row['Naam watertype'] = row['Naam watertype'].trim();\r\n  //         row['Krw_Code'] = row['Krw_Code'].trim();\r\n  //         row['Krw_Naam'] = row['Krw_Naam'].trim();\r\n  //         row['Taxonnaam'] = row['Taxonnaam'].trim().toLowerCase();\r\n  //       });\r\n  //       this.csvData = data;\r\n  //       this.handleRawData();\r\n  //     });\r\n  // }\r\n  //\r\n  // //Calls PapaParse to turn the csv files into objects\r\n  // private parseCSV(file:File):Promise<{result:PapaParse.ParseResult,file:File}>{\r\n  //   return new Promise((resolve,reject)=>{\r\n  //     Papa.parse(file,{\r\n  //       header:true,\r\n  //       skipEmptyLines:true,\r\n  //       complete:(result,file)=>resolve({result:result,file:file}),\r\n  //       error:(result,file)=>reject({result:result,file:file}),\r\n  //     });\r\n  //   });\r\n  // }\r\n  //\r\n  // //Start with the sample subresources: watertypes, locations and taxon\r\n  // private handleRawData(){\r\n  //   Promise.all([\r\n  //     this.handleWatertypes(),\r\n  //     this.handleLocations(),\r\n  //     this.handleTaxa()\r\n  //   ]).then(()=>{\r\n  //     if(this.confirm.locations.length+this.confirm.watertypes.length+this.confirm.taxonIds.length > 0)\r\n  //       this.setState('confirmData');\r\n  //     else\r\n  //       this.createSamples();\r\n  //   },(...params) => this.handleError(...params));\r\n  // }\r\n  //\r\n  // //Find all the watertypes in the data and retrieve existing ones from the server\r\n  // private handleWatertypes():Promise<null>{\r\n  //   //Go through CSV data and create models for each watertype\r\n  //   this.csvData.forEach(row => {\r\n  //     //Parent watertype\r\n  //     if(!this.watertypeMap.has(row['Code watertype'])){\r\n  //       let wt:Watertype = new Watertype();\r\n  //       wt.code = row['Code watertype'];\r\n  //       wt.name = row['Naam watertype'];\r\n  //       this.watertypeMap.set(row['Code watertype'],wt);\r\n  //     }\r\n  //     //Europese kaderrichtlijn water type\r\n  //     if(!this.watertypeMap.has(row.Krw_Code)){\r\n  //       let wt:Watertype = new Watertype();\r\n  //       wt.code = row.Krw_Code;\r\n  //       wt.name = row.Krw_Naam;\r\n  //       this.watertypeMap.set(row.Krw_Code,wt);\r\n  //     }\r\n  //   });\r\n  //   return new Promise((resolve,reject) => {\r\n  //     //Retrieve existing watertypes\r\n  //     this.watertypeApi.getAll().subscribe(watertypes => {\r\n  //       watertypes.forEach(watertype => {\r\n  //         if(this.watertypeMap.has(watertype.code))\r\n  //           this.watertypeMap.set(watertype.code,watertype);\r\n  //       });\r\n  //       //Show non-existing watertypes for confirmation\r\n  //       this.confirm.watertypes = Array.from(this.watertypeMap.values()).filter(watertype => !watertype.id);\r\n  //       resolve();\r\n  //     },(...params) => this.handleError(...params));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Find all the locations in the data and retrieve existing ones from the server\r\n  // private handleLocations():Promise<null>{\r\n  //   //Go through CSV data and create models for each location\r\n  //   this.csvData.forEach(row => {\r\n  //     if(!this.locationMap.has(row.Mp)){\r\n  //       let location = new MarkerLocation();\r\n  //       location.code = row.Mp;\r\n  //       location.description = row.Locatie;\r\n  //       location.xCoord = row['X-coor'];\r\n  //       location.yCoord = row['Y-coor'];\r\n  //       this.locationMap.set(row.Mp,location);\r\n  //       //We don't have a watertype id yet, save relation for later\r\n  //       this.locationWatertype.set(location,row['Code watertype']);\r\n  //       this.locationWatertypeKrw.set(location,row.Krw_Code);\r\n  //     }\r\n  //   });\r\n  //   let retrievePrs:Promise<MarkerLocation>[] = [];\r\n  //   //Retrieve existing locations\r\n  //   this.locationMap.forEach((_,locationCode) => {\r\n  //     retrievePrs.push(new Promise((resolve,reject)=>{\r\n  //       this.locationApi.getByCode(locationCode).subscribe(location => {\r\n  //         this.locationMap.set(locationCode,location);\r\n  //         resolve(location);\r\n  //       }, ()=>resolve(location));\r\n  //     }));\r\n  //   });\r\n  //   return Promise.all(retrievePrs).then(()=>{\r\n  //     //Show non-existing locations for confirmation\r\n  //     this.confirm.locations = Array.from(this.locationMap.values()).filter(location => !location.id);\r\n  //   },this.handleError);\r\n  // }\r\n  //\r\n  // //Find all the taxonIds in the data and retrieve existing ones from the server\r\n  // private handleTaxa():Promise<null>{\r\n  //   //Go through CSV data\r\n  //   this.csvData.forEach(row => {\r\n  //     if(!this.taxonMap.has(row.Taxonnaam)){\r\n  //       let taxon = new Taxon();\r\n  //       taxon.name = row.Taxonnaam;\r\n  //       this.taxonMap.set(row.Taxonnaam,taxon);\r\n  //     }\r\n  //   });\r\n  //   return new Promise((resolve,reject) => {\r\n  //     //Retrieve existing taxon\r\n  //     this.taxonApi.getByNames(Array.from(this.taxonMap.keys())).subscribe(taxonIds => {\r\n  //       taxonIds.forEach(taxon => this.taxonMap.set(taxon.name,taxon));\r\n  //       //Show non-existing taxonIds for confirmation\r\n  //       this.confirm.taxonIds = Array.from(this.taxonMap.values()).filter(taxon => !taxon.id);\r\n  //       resolve();\r\n  //     },(...params) => this.handleError(...params));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Saves all sample subresources to the server\r\n  // public confirmAll(){\r\n  //   this.setState('loading');\r\n  //\r\n  //   //Save all watertypes\r\n  //   let waitForWatertypes:Promise<Watertype>[] = []\r\n  //   this.confirm.watertypes.slice().forEach(watertype => waitForWatertypes.push(this.confirmWatertype(watertype)));\r\n  //\r\n  //   //Save all taxonIds\r\n  //   let waitForTaxa:Promise<Taxon[]> = this.confirmTaxa(this.confirm.taxonIds);\r\n  //\r\n  //   Promise.all(waitForWatertypes).then(()=>{\r\n  //     //Save all locations (watertypes have to be saved first)\r\n  //     let waitForLocations:Promise<MarkerLocation>[] = [];\r\n  //     this.confirm.locations.slice().forEach(location => waitForLocations.push(this.confirmLocation(location)));\r\n  //\r\n  //     //Data this sample depends on is all saved, move on to creating the sample\r\n  //     let allPromises:Promise<any>[] = [...waitForLocations,waitForTaxa];\r\n  //     Promise.all(allPromises)\r\n  //       .then(()=>{\r\n  //         this.createSamples();\r\n  //       },(...params) => this.handleError(...params));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Save a watertype to the server\r\n  // private confirmWatertype(watertype:Watertype):Promise<Watertype>{\r\n  //   return new Promise((resolve,reject) => {\r\n  //     this.watertypeApi.save(watertype).subscribe(saved => {\r\n  //       watertype.id = saved.id;\r\n  //       resolve(watertype);\r\n  //     }, error => reject(error));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Save all locations to the server\r\n  // private confirmLocation(location:MarkerLocation):Promise<MarkerLocation>{\r\n  //   return new Promise((resolve,reject) => {\r\n  //     let watertype = this.watertypeMap.get(this.locationWatertype.get(location));\r\n  //     let watertypeKrw = this.watertypeMap.get(this.locationWatertypeKrw.get(location));\r\n  //     location.watertypeId = watertype.id;\r\n  //     location.watertypeKrwId = watertypeKrw.id;\r\n  //     this.locationApi.save(location).subscribe(saved => {\r\n  //       location.id = saved.id;\r\n  //       resolve(location);\r\n  //     }, error => reject(error));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Save all taxonIds to the server\r\n  // private confirmTaxa(taxonIds:Taxon[]):Promise<Taxon[]>{\r\n  //   return new Promise((resolve,reject) => {\r\n  //     this.taxonApi.save(taxonIds).subscribe(taxonIds => {\r\n  //       taxonIds.forEach(taxon => this.taxonMap.set(taxon.name,taxon));\r\n  //       resolve(taxonIds);\r\n  //     }, error => reject(error));\r\n  //   });\r\n  // }\r\n  //\r\n  // //Create the sample objects\r\n  // private createSamples(){\r\n  //   this.setState('loading');\r\n  //\r\n  //   let sampleMap:Map<string,Sample> = new Map();\r\n  //   this.csvData.forEach(row => {\r\n  //     let sampleUnique = \"\"+row.Mp+row.Datum;\r\n  //     let sample:Sample;\r\n  //     if(sampleMap.has(sampleUnique)){\r\n  //       sample = sampleMap.get(sampleUnique);\r\n  //     }\r\n  //     else{\r\n  //       sample = new Sample();\r\n  //       let [day,month,year] = row.Datum.split('/').map(n => parseInt(n,10));\r\n  //       sample.date = new Date(year,month-1,day);\r\n  //       sample.locationId = this.locationMap.get(row.Mp).id;\r\n  //       sample.xCoor = row['X-coor'];\r\n  //       sample.yCoor = row['Y-coor'];\r\n  //       sample.taxonValues = new Map();\r\n  //       sampleMap.set(sampleUnique,sample);\r\n  //     }\r\n  //     sample.taxonValues.set(this.taxonMap.get(row.Taxonnaam).id,row.Waarde);\r\n  //   });\r\n  //\r\n  //   Array.from(this.taxonMap.values()).forEach(taxon => this.taxonIdsMap.set(taxon.id,taxon));\r\n  //   Array.from(this.locationMap.values()).forEach(location => this.locationIdsMap.set(location.id,location));\r\n  //   this.confirm.samples = Array.from(sampleMap.values());\r\n  //\r\n  //   //Increase template rendering by only storing what we need on the page\r\n  //   this.confirm.samplesFast = this.confirm.samples.map(sample => {\r\n  //     let taxonValuesFast = new Map<string,number>();\r\n  //     sample.taxonValues.forEach((value,taxonId) => taxonValuesFast.set(this.taxonIdsMap.get(taxonId).name,value));\r\n  //     return {\r\n  //       locationCode:this.locationIdsMap.get(sample.locationId).code,\r\n  //       locationDescription:this.locationIdsMap.get(sample.locationId).description,\r\n  //       date:sample.date,\r\n  //       taxonValues:taxonValuesFast\r\n  //     };\r\n  //   });\r\n  //\r\n  //   this.setState('confirmSample');\r\n  // }\r\n  //\r\n  // //User agrees with all samples\r\n  // confirmSamples(){\r\n  //   this.setState('loading');\r\n  //\r\n  //   //Store all samples\r\n  //   let waitForSamples:Promise<Sample[]> = new Promise((resolve,reject) => {\r\n  //     console.log(this.confirm.samples);\r\n  //     this.sampleApi.saveMulti(this.confirm.samples).subscribe(samples => resolve(samples), err => reject(err));\r\n  //   });\r\n  //\r\n  //   //Go to finished when all samples are saved\r\n  //   waitForSamples.then(samples => this.setState('finished'), (...params) => this.handleError(...params));\r\n  // }\r\n  //\r\n  // //Go back to the start of the importing process\r\n  // goToStart(){\r\n  //   this.setState('start');\r\n  // }\r\n}\r\n","module.exports = \"ngui-map {\\r\\n  width:80%;\\r\\n  margin-left: 10%;\\r\\n}\\r\\n\\r\\n.echart {\\r\\n  height: 1000px;\\r\\n  max-width:90%;\\r\\n}\\r\\n\\r\\n.detailsButton {\\r\\n  margin-bottom: 18px;\\r\\n}\\r\\n\"","module.exports = \"<div *ngIf=\\\"sample && location\\\">\\r\\n  <h1>Monster genomen bij {{location.description}}</h1>\\r\\n  <h2>{{sample.date|date:'d MMMM y'}}</h2>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<!--<mat-card>-->\\r\\n  <!--<mat-card-title>-->\\r\\n    <!--Waterkwaliteit-->\\r\\n  <!--</mat-card-title>-->\\r\\n  <!--<mat-card-content>-->\\r\\n    <!--<div class=\\\"detailsButton\\\">-->\\r\\n      <!--<a *ngIf=\\\"sample\\\" [routerLink]=\\\"'/sample/quality/'+sample.id\\\" mat-raised-button>Bekijk de kwaliteit-->\\r\\n        <!--analyse</a><br/>-->\\r\\n    <!--</div>-->\\r\\n    <!--<app-wew-bar-chart *ngIf=\\\"wewConfig\\\" [config]=\\\"wewConfig\\\"></app-wew-bar-chart>-->\\r\\n    <!--<mat-spinner *ngIf=\\\"!wewConfig\\\"></mat-spinner>-->\\r\\n  <!--</mat-card-content>-->\\r\\n<!--</mat-card>-->\\r\\n\\r\\n\\r\\n\\r\\n<!--new barchart-->\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    Waterkwaliteit\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"detailsButton\\\">\\r\\n      <a *ngIf=\\\"sample\\\" [routerLink]=\\\"'/sample/quality/'+sample.id\\\" mat-raised-button>Bekijk de kwaliteit\\r\\n        analyse</a><br/>\\r\\n    </div>\\r\\n    <app-new-wew-bar-chart></app-new-wew-bar-chart>\\r\\n    <mat-spinner *ngIf=\\\"!wewConfig\\\"></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"sample && location && taxon && showChart\\\">\\r\\n  <mat-card-title>\\r\\n    Gevonden taxa\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div *ngIf=\\\"secondGraphEnabled\\\"><a mat-raised-button class=\\\"backButton\\\" (click)=\\\"this.setActiveGraph(0);\\\">Terug\\r\\n      naar overzicht</a></div>\\r\\n    <div echarts *ngIf=\\\"firstGraphEnabled\\\" (chartInit)=\\\"onChartInit($event)\\\" [options]=\\\"option\\\"\\r\\n         class=\\\"pie-echart\\\"></div>\\r\\n    <div echarts *ngIf=\\\"secondGraphEnabled\\\" [options]=\\\"option2\\\" class=\\\"pie-echart\\\"></div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n\\r\\n<mat-card *ngIf=\\\"location\\\">\\r\\n  <mat-card-title>\\r\\n    {{location.description}}\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <!--<ngui-map [options]=\\\"mapConfig\\\">\\r\\n      <marker *ngIf=\\\"markerPos\\\" [position]=\\\"markerPos\\\">\\r\\n      </marker>\\r\\n    </ngui-map>-->\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit} from \"@angular/core\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\nimport {ApiSampleService} from \"app/services/api.sample.service\";\r\nimport {Sample} from \"app/models/sample.model\";\r\nimport {ApiTaxonService} from \"../../services/api.taxon.service\";\r\nimport {Taxon, TaxonGroup} from \"../../models/taxon.model\";\r\nimport {ApiLocationService} from \"../../services/api.location.service\";\r\nimport {MarkerLocation} from \"app/models/markerLocation.model\";\r\nimport {Reference} from 'app/models/reference.model';\r\nimport {ApiReferenceService} from 'app/services/api.reference.service';\r\nimport {Watertype} from '../../models/watertype.model';\r\nimport {ApiWatertypeService} from '../../services/api.watertype.service';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\nimport {WEWFactor} from '../../models/wew.model';\r\nimport {WewChartConfig} from '../../wew/wew-bar-chart/wew-bar-chart.component';\r\nimport {MaterialPalette} from '../../services/palette';\r\nimport {ChartEntityManager} from '../../models/chart-entity.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-sample-view',\r\n  providers: [ApiSampleService, ApiTaxonService, ApiLocationService,ApiReferenceService,ApiWatertypeService,ApiWewService,ChartEntityManager],\r\n  templateUrl: './sample-view.component.html',\r\n  styleUrls: ['./sample-view.component.css']\r\n})\r\nexport class SampleViewComponent implements OnInit {\r\n  public sample: Sample;\r\n  public reference: Reference;\r\n  public taxon: Taxon[];\r\n  public groups: TaxonGroup[];\r\n  public location: MarkerLocation;\r\n  public wewConfig: WewChartConfig;\r\n  public showChart = false;\r\n  public markerPos;\r\n  public echart;\r\n  public option;\r\n  public option2;\r\n  public firstGraphEnabled = 1;\r\n  public secondGraphEnabled = 0;\r\n\r\n  private groupsPr:Promise<TaxonGroup[]>;\r\n\r\n  constructor(\r\n    private apiSample:ApiSampleService,\r\n    private apiTaxon:ApiTaxonService,\r\n    private apiLocation:ApiLocationService,\r\n    private apiReference:ApiReferenceService,\r\n    private apiWatertype:ApiWatertypeService,\r\n    private apiWew:ApiWewService,\r\n    private chartEntityManager:ChartEntityManager,\r\n    private route:ActivatedRoute\r\n  ){\r\n    this.option = this.defaultSettings();\r\n    this.option2 = this.defaultSettings();\r\n\r\n    this.groupsPr = this.apiTaxon.getGroups().toPromise().then(groups => this.groups = groups);\r\n  }\r\n\r\n  setActiveGraph(bool) {\r\n    if (bool) {\r\n      this.firstGraphEnabled = 0;\r\n      this.secondGraphEnabled = 1;\r\n    } else {\r\n      this.firstGraphEnabled = 1;\r\n      this.secondGraphEnabled = 0;\r\n    }\r\n  }\r\n\r\n  defaultSettings() {\r\n    return {\r\n      title: {\r\n        text: 'Aantal beestjes gevonden',\r\n        subtext: 'per monster',\r\n        x: 'center'\r\n      },\r\n      toolbox: {\r\n        right: 150,\r\n        feature: {\r\n          saveAsImage: {\r\n            title: \"Download grafiek\",\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\",\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: [/* Legenda data */]\r\n      },\r\n      series: [\r\n        {\r\n          name: 'Gevonden',\r\n          type: 'pie',\r\n          radius: '55%',\r\n          center: ['50%', '60%'],\r\n          data: [/* data*/],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  updateGraph(group:TaxonGroup, taxonValues:Map<Taxon,number>) {\r\n    let names = Array.from(taxonValues.keys()).map(taxon => taxon.name);\r\n    let output = [];\r\n    taxonValues.forEach((value,taxon) => {\r\n      output.push({name:taxon.name,value:value});\r\n    });\r\n\r\n    this.option2.legend.data = names;\r\n    this.option2.series[0].data = output;\r\n  }\r\n\r\n  onChartInit(echart) {\r\n    this.echart = echart;\r\n\r\n    echart.on('click', params => {\r\n      this.setActiveGraph(1);\r\n\r\n      let group = params.data.data.group;\r\n      let taxa = params.data.data.taxa;\r\n      let taxonValues:Map<Taxon,number/*value*/> = new Map();\r\n      taxa.forEach(taxon => taxonValues.set(taxon,this.sample.taxonValues.get(taxon.id)));\r\n\r\n      this.updateGraph(group,taxonValues);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.pipe(map(params => parseInt(params.id))).subscribe(id => {\r\n      //Retrieve sample\r\n      let samplePr = this.apiSample.getSample(id).toPromise().then(sample => this.sample = sample);\r\n      //Retrieve location\r\n      let locationPr = samplePr.then(sample => this.retrieveLocation());\r\n      //Retrieve reference\r\n      let referencePr = locationPr.then(location => this.apiReference.getByWatertype(location.watertypeKrwId).toPromise());\r\n\r\n      //Create config object for the WEW chart\r\n      referencePr.then(reference => {\r\n        this.reference = reference;\r\n        let palette = new MaterialPalette().shift();\r\n\r\n        let entArr = [];\r\n        if(reference)\r\n          entArr.push(this.chartEntityManager.createFromReference(reference,'Referentie',palette.clone()));\r\n        entArr.push(this.chartEntityManager.createFromSample(this.sample,'Monster',palette.clone()));\r\n\r\n        this.wewConfig = {\r\n          entities:entArr\r\n        };\r\n      },err => {\r\n        this.reference = null;\r\n        this.wewConfig = {entities:[]};\r\n      });\r\n\r\n      //When sample and taxon groups are in, retrieve taxa\r\n      Promise.all([samplePr,this.groupsPr]).then(([sample,groups]) => {\r\n        this.retrieveTaxon();\r\n      });\r\n    });\r\n  }\r\n\r\n  private retrieveTaxon() {\r\n    let groupMap: Map<number/*taxon group id*/, TaxonGroup> = new Map();\r\n    this.groups.forEach(group => groupMap.set(group.id, group));\r\n\r\n    let taxonIds = Array.from(this.sample.taxonValues.keys());\r\n    this.apiTaxon.getByIds(taxonIds).subscribe(taxon => {\r\n      let output = [];\r\n      this.taxon = taxon;\r\n\r\n      let groupTaxaMap: Map<TaxonGroup, Taxon[]> = new Map();\r\n\r\n      this.groups.forEach(group => {\r\n        groupTaxaMap.set(group, taxon.filter(tax => tax.groupId == group.id));\r\n      });\r\n\r\n      groupTaxaMap.forEach((taxa: Taxon[], group: TaxonGroup) => {\r\n        let totalValue = taxa.map(tax => this.sample.taxonValues.get(tax.id)).reduce((cur, total) => total + cur, 0);\r\n        if (totalValue) {\r\n          let data = {group:group, taxa:taxa};\r\n          output.push({value: totalValue, name: group.description, data: data});\r\n        }\r\n      });\r\n\r\n      this.option.legend.data = output.map(taxon => taxon.name);\r\n      this.option.series[0].data = output;\r\n\r\n      this.showChart = true;\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  private retrieveLocation():Promise<MarkerLocation>{\r\n    let locationPr = this.apiLocation.getById(this.sample.location_id).toPromise()\r\n    locationPr.then(location => {\r\n      this.location = location;\r\n      this.mapConfig.center = {\r\n        lat: location.latitude,\r\n        lng: location.longitude\r\n      };\r\n      this.markerPos = {\r\n        lat: location.latitude,\r\n        lng: location.longitude\r\n      };\r\n    }, error => console.log(error));\r\n    return locationPr;\r\n  }\r\n\r\n  public mapStyle = [\r\n    {elementType: 'labels', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'administrative.country', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'administrative.country',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality', elementType: 'labels',\r\n      stylers: [{visibility: 'simplified'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {featureType: 'road', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'water', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'water', elementType: 'geometry.fill',\r\n      stylers: [{color: '#0d9ac7'}, {visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels',\r\n      stylers: [{visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels.text.fill',\r\n      stylers: [{color: '#000000'}, {visibility: 'on'}]\r\n    }];\r\n\r\n  public mapConfig = {\r\n    styles: this.mapStyle,\r\n    mapTypeId: \"satellite\",\r\n    center: {},\r\n    zoom: 18,\r\n    disableDefaultUI: false,\r\n    clickableIcons: true,\r\n  };\r\n}\r\n","import {Injectable} from \"@angular/core\";\r\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs/index\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>,\r\n            next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const url = 'http://127.0.0.1:5000';\r\n    const idToken = localStorage.getItem('token');\r\n\r\n    req = req.clone({\r\n      url: url + req.url\r\n    });\r\n\r\n    if (idToken) {\r\n      const cloned = req.clone({\r\n        headers: req.headers.set(\"Authorization\",\r\n          \"Bearer \" + idToken)\r\n      });\r\n\r\n      return next.handle(cloned);\r\n    }\r\n    else {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\n\r\nimport {ApiService} from './api.service';\r\nimport {MarkerLocation} from '../models/markerLocation.model';\r\nimport {map} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n@Injectable()\r\nexport class ApiLocationService extends ApiService {\r\n  constructor(@Inject(Http) http: Http) {\r\n    super(http);\r\n  }\r\n\r\n  //Retrieve a list of all locations\r\n  public getAllLocations(): Observable<MarkerLocation[]> {\r\n    return this.get('/location/all').pipe(map((markerLocations: Object[]) =>\r\n      markerLocations.map(markerLocation => MarkerLocation.fromJSON(markerLocation))));\r\n  }\r\n\r\n  // Retrieve a location by its ID\r\n  public getById(id): Observable<MarkerLocation> {\r\n    return this.get('/location/id/'+id).pipe(map(markerLocation => MarkerLocation.fromJSON(markerLocation)));\r\n  }\r\n\r\n  public getByIds(ids:number[]):Observable<MarkerLocation[]> {\r\n    return this.post('/location/ids',ids).pipe(map(markerLocations => markerLocations.map(markerLocation => MarkerLocation.fromJSON(markerLocation))));\r\n  }\r\n\r\n  // Retrieve a location by its code\r\n  public getByCode(code:string):Observable<MarkerLocation>{\r\n    return this.get('/location/code/'+code).pipe(map(markerLocation => MarkerLocation.fromJSON(markerLocation)));\r\n  }\r\n\r\n  // Save a location to the server\r\n  public save(markerLocation:MarkerLocation):Observable<MarkerLocation>{\r\n    return this.post('/location',markerLocation).pipe(map(markerLocation=>MarkerLocation.fromJSON(markerLocation)));\r\n  }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\n\r\nimport {ApiService} from './api.service';\r\nimport {Marker} from '../models/marker.model';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiMarkerService extends ApiService {\r\n\tconstructor(@Inject(Http) http: Http) {\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t// Retrieve a list of filtered markers\r\n\tpublic getAllFilteredMarkers(markerFilter: Object): Observable<Marker[]> {\r\n\t\treturn this.post('/markers/filter', markerFilter).pipe(map((markers: Object[]) =>\r\n\t\t\tmarkers.map(marker => Marker.fromJSON(marker))));\r\n\t}\r\n}\r\n","import {Inject,Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from './api.service';\r\nimport {Reference} from '../models/reference.model';\r\nimport {CalculationPreTransformed, CalculationSample, SimpleWEWValue} from '../models/wew.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiReferenceService extends ApiService{\r\n\tconstructor(@Inject(Http) http:Http){\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve all references\r\n\tpublic getAll():Observable<Reference[]>{\r\n\t\treturn this.get('/reference').pipe(map(references => references.map(reference => Reference.fromJSON(reference))));\r\n\t}\r\n\r\n\t//Retrieve a reference by its id\r\n\tpublic getReference(id:number):Observable<Reference>{\r\n\t\treturn this.get('/reference/'+id).pipe(map(reference=>Reference.fromJSON(reference)));\r\n\t}\r\n  // // NIEUWE MANIER ZODAT FILTEREN MOGELIJK IS\r\n  // public getCalculationBySample(sampleId: number): Observable<CalculationSample[]>{\r\n  //   return this.get('/calculate/reference2/' + sampleId).pipe(map(objs => objs.map(obj => {\r\n  //     let calculation = new calculationSample();\r\n  //     calculation.sampleId = obj.sample_id;\r\n  //     calculation.taxon = obj.taxon;\r\n  //     calculation.taxon.id = obj.taxon.id;\r\n  //     calculation.taxon.name = obj.taxon.name;\r\n  //     calculation.taxon.hydrologischeVerstoring = obj.taxon.hydrologische_verstoring;\r\n  //     calculation.taxon.morfologischeVerstoring = obj.taxon.morfologische_verstoring;\r\n  //     calculation.taxon.eutrofieringBelasting = obj.taxon.eutrofiering_belasting;\r\n  //     calculation.wewValue = obj.wew_value;\r\n  //     return calculation;\r\n  //   })));\r\n  // }\r\n  // NIEUWE MANIER ZODAT FILTEREN MOGELIJK IS\r\n  public getCalculationBySample(sampleId: number): Observable<CalculationSample> {\r\n    return this.get('/calculate/reference2/' + sampleId).pipe(map(obj => {\r\n      let CalculationPreTransformed = new CalculationSample();\r\n      CalculationPreTransformed.id = obj.reference_id;\r\n      CalculationPreTransformed.taxon = obj.taxon;\r\n      CalculationPreTransformed.wewValue = obj.wew_value;\r\n      return CalculationPreTransformed;\r\n    }));\r\n  }\r\n\t//Retrieve a reference by its watertype\r\n\tpublic getByWatertype(watertypeId:number):Observable<Reference>{\r\n\t\treturn this.get('/reference/watertype/'+watertypeId).pipe(map(reference=>Reference.fromJSON(reference)));\r\n\t}\r\n\r\n\t//Save a reference to the server\r\n\tpublic save(reference:Reference):Observable<Reference>{\r\n\t\treturn this.post('/admin/reference',reference).pipe(map(reference => Reference.fromJSON(reference)));\r\n\t}\r\n\r\n\t//Deletes a reference and all its calculations\r\n\tpublic delete(id:number):Observable<boolean>{\r\n\t\treturn this.post('/admin/reference/delete/'+id,null);\r\n\t}\r\n\r\n\t//Get a list of calculations for the given reference id\r\n\tpublic getCalculationsByReference(referenceId:number):Observable<SimpleWEWValue[]>{\r\n\t\treturn this.get('/calculate/reference/'+referenceId).pipe(map(objs => objs.map(obj => {\r\n\t\t\tlet value = new SimpleWEWValue();\r\n\t\t\tvalue.factorClassId = obj.factorClassId;\r\n\t\t\tvalue.value = obj.computedValue;\r\n\t\t\treturn value;\r\n\t\t})));\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from './api.service';\r\nimport {Sample} from '../models/sample.model';\r\nimport {Taxon} from '../models/taxon.model';\r\nimport {CalculationSample, SimpleWEWValue} from '../models/wew.model';\r\nimport {map} from 'rxjs/operators';\r\nimport {WewValueCalc} from \"../models/wewValue.model\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiSampleService extends ApiService {\r\n\tconstructor(@Inject(Http) http: Http) {\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve a sample by its id\r\n\tpublic getSample(id: number): Observable<Sample> {\r\n\t\treturn this.get('/sample/' + id).pipe(map(sample => Sample.fromJSON(sample)));\r\n\t}\r\n\r\n\t//Save a sample to the server\r\n\tpublic save(sample: Sample): Observable<Sample> {\r\n\t\treturn this.post('/sample', [sample]).pipe(map(samples => Sample.fromJSON(samples[0])));\r\n\t}\r\n\r\n\t//Save a list of samples to the server\r\n\tpublic saveMulti(samples: Sample[]): Observable<Sample[]> {\r\n\t\treturn this.post('/sample', samples).pipe(map(samples => samples.map(sample => Sample.fromJSON(sample))));\r\n\t}\r\n\r\n\t//Get a list of calculations for the given sample id\r\n\tpublic getCalculationsBySample(sampleId: number):Observable<SimpleWEWValue[]>{\r\n\t\treturn this.get('/calculate/sample/'+sampleId).pipe(map(objs => objs.map(obj => {\r\n\t\t\tlet value = new SimpleWEWValue();\r\n\t\t\tvalue.factorClassId = obj.factorClassId;\r\n\t\t\tvalue.value = obj.computedValue;\r\n\t\t\treturn value;\r\n\t\t})));\r\n\t}\r\n\r\n\t// NIEUWE MANIER ZODAT FILTEREN MOGELIJK IS\r\n\tpublic getCalculationBySample(sampleId: number): Observable<CalculationSample>{\r\n\t  return this.get('/calculate/sample2/' + sampleId).pipe(map(obj => {\r\n\t    let calculation = new CalculationSample();\r\n\t    calculation.id = obj.sample_id;\r\n\t    calculation.taxon = obj.taxon;\r\n\t    calculation.wewValue = obj.wew_value;\r\n\t    return calculation;\r\n    }));\r\n  }\r\n\r\n\r\n\r\n\tpublic getByLocationId(locationId: number): Observable<Sample[]> {\r\n\t\treturn this.get('/sample/location/' + locationId).pipe(map(samples => samples.map(sample => Sample.fromJSON(sample))));\r\n\t}\r\n\r\n\tpublic getByDate(date: string): Observable<Sample[]> {\r\n\t\treturn this.get('/sample/date/' + date).pipe(map(samples => samples.map(sample => Sample.fromJSON(sample))));\r\n\t}\r\n\r\n\tpublic getDistinctYears(): Observable<String[]> {\r\n\t\treturn this.get('/sample/getyears');\r\n\t}\r\n\r\n\tpublic getRecent(count:number):Observable<Sample[]>{\r\n\t\treturn this.get('/sample/recent/'+count).pipe(map(samples => samples.map(sample => Sample.fromJSON(sample))));\r\n\t}\r\n\r\n\tpublic delete(id:number):Observable<boolean>{\r\n\t\treturn this.post('/admin/sample/delete',id);\r\n\t}\r\n}\r\n","import {Inject} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n//Offers generic methods for communication with the API\r\n//Parts of the application should create their own api service that extends this class\r\nexport abstract class ApiService {\r\n\tprivate http:Http;\r\n\tprivate static authHeaders = {};\r\n\tpublic apiUri;\r\n\r\n\tconstructor(http:Http) {\r\n\t\tthis.http = http;\r\n\t\tthis.apiUri = this._window().apiUri;\r\n\t}\r\n\r\n\t_window(): any {\r\n\t\t// return the global native browser window object\r\n\t\treturn window;\r\n\t}\r\n\r\n\t//Turns the json string that came from the API into an object\r\n\tprivate transformResult(res:Response,observer){\r\n\t\tobserver.next(res.json());\r\n\t}\r\n\r\n\t//Turns any errors that come from the server into an object\r\n\tprivate transformError(res:Response,observer){\r\n\t\tif(res.json)\r\n\t\t\tobserver.error(res.json());\r\n\t\telse\r\n\t\t\tobserver.error(res);\r\n\t}\r\n\r\n\t//Add authorization headers to every api call\r\n\tprotected static addToAuthHeaders(headerType: string, value: string){\r\n\t\tApiService.authHeaders[headerType] = value;\r\n\t}\r\n\r\n\t//Returns a Header object to be used in an http request\r\n\tprivate getHeaderObject():Headers{\r\n\t\tlet headers = new Headers();\r\n    headers.append('token', localStorage.getItem('token'));\r\n\t\treturn headers;\r\n\t}\r\n\r\n\t//Do a GET request to the given path\r\n\tprotected get(path:string):Observable<any>{\r\n\t\tpath = this.apiUri+path;\r\n\t\tconst headers = this.getHeaderObject();\r\n\t\treturn Observable.create(observer => {\r\n\t\t\tthis.http.get(path,{headers:headers})\r\n\t\t\t\t.subscribe(res=>this.transformResult(res,observer), err=>this.transformError(err,observer), ()=>observer.complete());\r\n\t\t});\r\n\t}\r\n\r\n\t//Do a POST request to the given path\r\n\t//Data is converted to JSON and sent along\r\n\tprotected post(path:string,data):Observable<any>{\r\n\t\tpath = this.apiUri+path;\r\n\t\tconst headers = this.getHeaderObject();\r\n\t\theaders.append('Content-Type','application/json');\r\n\t\treturn Observable.create(observer => {\r\n\t\t\tthis.http.post(path,JSON.stringify(data),{headers:headers})\r\n\t\t\t\t.subscribe(res=>this.transformResult(res,observer), err=>this.transformError(err,observer), ()=>observer.complete());\r\n\t\t});\r\n\t}\r\n\r\n\t//Retrieve the value of a cookie\r\n\tprotected getCookie(cname) {\r\n\t\tlet name = cname + \"=\";\r\n\t\tlet ca = document.cookie.split(';');\r\n\t\tfor(let i=0; i<ca.length; i++) {\r\n\t\t\tlet c = ca[i];\r\n\t\t\twhile (c.charAt(0)==' ') c = c.substring(1);\r\n\t\t\tif (c.indexOf(name) == 0) return c.substring(name.length,c.length);\r\n\t\t}\r\n\t\treturn \"\";\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\n\r\nimport {ApiService} from 'app/services/api.service';\r\nimport {Taxon,TaxonGroup,TaxonLevel} from '../models/taxon.model';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiTaxonService extends ApiService{\r\n\tconstructor(@Inject(Http) http:Http){\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve a taxon by its id\r\n\tpublic getById(id:number):Observable<Taxon>{\r\n\t\treturn this.get('/taxon/'+id).pipe(map(taxon => Taxon.fromJSON(taxon)));\r\n\t}\r\n\r\n\t//Retrieve a list of taxonIds by their ids\r\n\tpublic getByIds(ids:number[]):Observable<Taxon[]>{\r\n\t\treturn this.post('/taxon/ids',ids).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Retrieve all species in db\r\n\tpublic getAll():Observable<Taxon[]> {\r\n\t\treturn this.get('/taxon/all').pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Retrieve a taxon and all its ancestors and descendants\r\n\tpublic getFamily(id:number):Observable<Taxon[]> {\r\n\t\treturn this.get('/taxon/family/'+id).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Retrieve a list of taxonIds by their names\r\n\tpublic getByNames(names:string[]):Observable<Taxon[]>{\r\n\t\treturn this.post('/taxon/find',names).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Retrieve a list of taxonIds by their name, if the taxon doesn't exist yet it will be created\r\n\tpublic findOrCreate(names:string[]):Observable<Taxon[]>{\r\n\t\treturn this.post('/taxon/findorcreate',names).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Save list of taxonIds to the server\r\n\tpublic save(taxonIds:Taxon[]):Observable<Taxon[]>{\r\n\t\treturn this.post('/taxon',taxonIds).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Save list of taxonIds to the server\r\n\t//When no ID is set, find existing ones by name first and merge with those\r\n\tpublic saveMerge(taxonIds:Taxon[]):Observable<Taxon[]>{\r\n\t\treturn this.post('/taxon/merge',taxonIds).pipe(map(taxonIds => taxonIds.map(taxon => Taxon.fromJSON(taxon))));\r\n\t}\r\n\r\n\t//Retrieve list of all taxon groups\r\n\tpublic getGroups():Observable<TaxonGroup[]>{\r\n\t\treturn this.get('/taxongroup/all').pipe(map(groups => groups.map(group => TaxonGroup.fromJSON(group))));\r\n\t}\r\n\r\n\t//Save list of groups to the server\r\n\tpublic saveGroups(groups:TaxonGroup[]):Observable<TaxonGroup[]>{\r\n\t\treturn this.post('/taxongroup',groups).pipe(map(groups => groups.map(group => TaxonGroup.fromJSON(group))));\r\n\t}\r\n\r\n\t//Retrieve list of all taxon levels\r\n\tpublic getLevels():Observable<TaxonLevel[]>{\r\n\t\treturn this.get('/taxonlevel/all').pipe(map(levels => levels.map(level => TaxonLevel.fromJSON(level))));\r\n\t}\r\n\r\n\t//save list of taxon levels to the server\r\n\tpublic saveLevels(levels:TaxonLevel[]):Observable<TaxonLevel[]>{\r\n\t\treturn this.post('/taxon/level',levels).pipe(map(levels => levels.map(level => TaxonLevel.fromJSON(level))));\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from 'app/services/api.service';\r\nimport {User} from '../models/user.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiUserService extends ApiService{\r\n\tconstructor(@Inject(Http) http:Http){\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t// Retrieve a user by its ID\r\n\tpublic getUser(id:number):Observable<User>{\r\n\t\treturn this.get('/user/'+id).pipe(map(user=>User.fromJSON(user)));\r\n\t}\r\n\r\n\t// Retrieve the user currently logged in\r\n\tpublic getCurrentUser():Observable<User>{\r\n\t\treturn this.get('/user/currentuser').pipe(map(user=>User.fromJSON(user)));\r\n\t}\r\n\r\n\t// Save a user to the server\r\n\tpublic createUser(user:User):Observable<User> {\r\n\t\treturn this.post('/admin', user);\r\n\t}\r\n\r\n\t// Change the current user's password\r\n\tpublic editPassword(oldPassword: String, newPassword: String, confirmPassword: String):Observable<boolean> {\r\n\t\treturn this.post('/user/editpassword', {oldPassword: oldPassword, newPassword: newPassword, confirmPassword: confirmPassword});\r\n\t}\r\n\r\n\t// Change the data of a user\r\n\tpublic editUser(user:User):Observable<User> {\r\n\t\treturn this.post('/user/edit', user);\r\n\t}\r\n\r\n\tpublic resetPassword(user: String) {\r\n\t  return this.post('/admin/password',user);\r\n  }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from 'app/services/api.service';\r\nimport {Waterschap} from '../models/waterschap.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiWaterschapService extends ApiService {\r\n\tconstructor(@Inject(Http) http: Http) {\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve a waterschap by its ID\r\n\tpublic getById(id): Observable<Waterschap> {\r\n\t\treturn this.get('/waterschap/id/' + id).pipe(map((waterschap => Waterschap.fromJSON(waterschap))));\r\n\t}\r\n\r\n\t//Retrieve a list of all waterschappen\r\n\tpublic getAll(): Observable<Waterschap[]> {\r\n\t\treturn this.get('/waterschap/all').pipe(map((waterschappen: Object[]) =>\r\n\t\t\twaterschappen.map(waterschap => Waterschap.fromJSON(waterschap))));\r\n\t}\r\n\r\n\t//Save a waterschap to the server\r\n\tpublic save(waterschap: Waterschap): Observable<Waterschap> {\r\n\t\treturn this.post('/waterschap/all', waterschap);\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from 'app/services/api.service';\r\nimport {Watertype} from '../models/watertype.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiWatertypeService extends ApiService{\r\n\tconstructor(@Inject(Http) http:Http){\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve a watertype by its id\r\n\tpublic getWatertype(id):Observable<Watertype>{\r\n\t\treturn this.get('/watertype/id/' + id).pipe(map(watertype => Watertype.fromJSON(watertype)));\r\n\t}\r\n\r\n\t//Retrieve a list of all watertypes\r\n\tpublic getAll():Observable<Watertype[]>{\r\n\t\treturn this.get('/watertype/all').pipe(map((watertypes:Object[]) => watertypes.map(watertype=>Watertype.fromJSON(watertype))));\r\n\t}\r\n\r\n\t//Save a watertype to the server\r\n\tpublic save(watertype:Watertype):Observable<Watertype>{\r\n\t\treturn this.post('/watertype',watertype).pipe(map(watertype=>Watertype.fromJSON(watertype)));\r\n\t}\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Response, Headers} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {ApiService} from 'app/services/api.service';\r\nimport {WEWValue,WEWFactor,WEWFactorClass} from '../models/wew.model';\r\nimport {map} from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiWewService extends ApiService{\r\n\tconstructor(@Inject(Http) http:Http){\r\n\t\tsuper(http);\r\n\t}\r\n\r\n\t//Retrieve all WEW values from the taxon with these ids\r\n\tpublic getByTaxon(ids:number[]):Observable<WEWValue[]>{\r\n\t\treturn this.get('/wew/value/taxon/'+ids.join(',')).pipe(map(values=>values.map(value => WEWValue.fromJSON(value))));\r\n\t}\r\n\r\n\t//Saves a list of values\r\n\t//Returns number of inserted values\r\n\tpublic saveValues(values:WEWValue[]):Observable<number>{\r\n\t\treturn this.post('/wew/value',values).pipe(map(obj=>obj.count));\r\n\t}\r\n\r\n\t//Retrieves all factors and factor classes in them\r\n\tpublic getFactors():Observable<WEWFactor[]>{\r\n\t\treturn this.get('/wew/factor').pipe(map(factors=>factors.map(factor => WEWFactor.fromJSON(factor))));\r\n\t}\r\n\r\n\t//Saves a list of factors and factor classes in them\r\n\tpublic saveFactors(factors:WEWFactor[]):Observable<WEWFactor[]>{\r\n\t\treturn this.post('/wew/factor',factors).pipe(map(factors=>factors.map(factor => WEWFactor.fromJSON(factor))));\r\n\t}\r\n\r\n\t//Checks if all WEW tables are empty\r\n\tpublic areTablesEmpty():Observable<boolean>{\r\n\t\treturn this.get('/wew/admin/isEmpty');\r\n\t}\r\n\r\n\t//Delete everything from all WEW tables\r\n\tpublic emptyAllTables():Observable<boolean>{\r\n\t\treturn this.post('/wew/admin/emptyAll',null);\r\n\t}\r\n}\r\n","//Randomizes the array order\r\nexport function shuffle<T>(array:T[]):T[]{\r\n\tfor (let i=array.length-1;i>0;i--){\r\n\t\tlet j = Math.floor(Math.random()*(i+1));\r\n\t\tlet temp = array[i];\r\n\t\tarray[i] = array[j];\r\n\t\tarray[j] = temp;\r\n\t}\r\n\treturn array;\r\n}\r\n\r\n//Rotates array values\r\n//rotate([1,2,3,4,5],1) becomes [2,3,4,5,1]\r\n//rotate([1,2,3,4,5],2) becomes [3,4,5,1,2]\r\nexport function rotate<T>(array:T[],rotateBy:number):T[]{\r\n\treturn [...array.slice(rotateBy),...array.slice(0,rotateBy)];\r\n}\r\n\r\n//rotateParts([1,2,3,4,5,6,7,8,9,10], 2) becomes [1,3,5,7,9,2,4,6,8,10]\r\n//rotateParts([1,2,3,4,5,6,7,8,9,10], 3) becomes [1,4,7,10,2,5,8,3,6,9]\r\nexport function rotateParts<T>(array:T[],shift:number):T[]{\r\n\tlet shiftedValues = [];\r\n\tfor(let i=0,count=array.length,take=0,takeStart=0;i<count;++i){\r\n\t\tshiftedValues.push(array[take]);\r\n\t\ttake += shift;\r\n\t\tif(take>=count){\r\n\t\t\t++takeStart;\r\n\t\t\ttake = takeStart;\r\n\t\t}\r\n\t}\r\n\treturn shiftedValues;\r\n}\r\n\r\n//Remove duplicates from an array\r\n//[1,2,1,2,3].filter(uniqueFilter) becomes [1,2,3]\r\nexport function uniqueFilter(value,index,self){\r\n\treturn self.indexOf(value)===index;\r\n}\r\n\r\n//Makes all rows in an array have the same length\r\n//[ [1,2,3], [4,5], [6,7,8] ] becomes [ [1,2,3], [4,5,null], [6,7,8] ]\r\nexport function pad2D<T>(array:T[][],fill:any=null):T[][]{\r\n\t//Length of the longest row\r\n\tlet max = array.map(row => row.length).reduce((next,max) => Math.max(next,max));\r\n\t\r\n\t//Fill all rows starting at the original length\r\n\tarray = array.map(row => {\r\n\t\tlet len = row.length;\r\n\t\trow.length = max;\r\n\t\trow.fill(fill,len);\r\n\t\treturn row;\r\n\t});\r\n\t\r\n\treturn array;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  canActivate() {\r\n    if (true) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  // HOW IT WAS but we hacked it with \"true\"\r\n  // canActivate() {\r\n  //   if (localStorage.getItem('currentUser')) {\r\n  //     let currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  //     if(currentUser.expireDate > Date.now()){\r\n  //       // logged in and not expired so return true\r\n  //       return true;\r\n  //     }\r\n  //   }\r\n  //\r\n  //   // not logged in so redirect to login page\r\n  //   this.router.navigate(['/login']);\r\n  //   return false;\r\n  // }\r\n}\r\n","import {Inject, Injectable} from '@angular/core';\r\nimport {Http, Headers, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs';\r\nimport {ApiService} from './api.service';\r\nimport {ApiUserService} from \"./api.user.service\";\r\nimport {map} from 'rxjs/operators';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {JwtHelperService} from '@auth0/angular-jwt';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService extends ApiService {\r\n  private userService: ApiUserService;\r\n  private helper = new JwtHelperService();\r\n\r\n\r\n  constructor(http: Http) {\r\n    super(http);\r\n\r\n    this.userService = new ApiUserService(http);\r\n  }\r\n\r\n  //\r\n  // addToStorage(token: string): void {\r\n  //   // Sets an expiration date for the logged in user 24 hours from now\r\n  //   let expireDate = Date.now() + (24 * 60 * 60 * 1000);\r\n  //\r\n  //   // Puts the token and expiration date in local storage\r\n  //   localStorage.setItem('currentUser', JSON.stringify({token: token, expireDate: expireDate}));\r\n  //\r\n  //   // Creates an auth header for API calls with the token\r\n  //   ApiService.addToAuthHeaders('X-Authorization', token);\r\n  // }\r\n  //\r\n  // saveUserRole() {\r\n  //   this.userService.getCurrentUser().subscribe(user => {\r\n  //     let currentUser = user;\r\n  //     localStorage.setItem('currentUserRole', JSON.stringify({role: user.group_id}));\r\n  //     ApiService.addToAuthHeaders('User-Role', JSON.stringify(user.group_id));\r\n  //     localStorage.setItem('currentWaterschap', JSON.stringify({waterschapid: user.waterschap_id}));\r\n  //   }, error => console.log(error));\r\n  // }\r\n\r\n  login(email: string, password: string): Observable<any> {\r\n    const json = {'email': email, 'password': password};\r\n    return this.post('/authenticate/login', json);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.clear();\r\n  }\r\n\r\n  isAdmin() {\r\n    try {\r\n\r\n      if (this.helper.decodeToken(localStorage.getItem('token'))['group_id'] === \"2\") {\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    catch {\r\n      return false;\r\n    }\r\n  }\r\n\r\n\r\n  isLoggedIn() {\r\n    return !this.verifyToken();\r\n  }\r\n\r\n  verifyToken() {\r\n    try {\r\n      return this.helper.isTokenExpired(localStorage.getItem('token'));\r\n    }\r\n    catch {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","\r\nexport interface Color{\r\n\tasHSL():HSL;\r\n\tasRGB():RGB;\r\n\ttoString():string;\r\n}\r\n\r\n//Class representing an HSL color\r\n//H, S and L are in range 0.0 .. 1.0\r\nexport class HSL implements Color{\r\n\tpublic constructor(\r\n\t\tpublic hue:number,\r\n\t\tpublic saturation:number,\r\n\t\tpublic lightness:number\r\n\t){}\r\n\t\r\n\t//Copy of itself\r\n\tpublic asHSL():HSL{\r\n\t\treturn new HSL(this.hue,this.saturation,this.lightness);\r\n\t}\r\n\t\r\n\t//Convert to RGB\r\n\tpublic asRGB():RGB{\r\n\t\tlet r,g,b;\r\n\t\tif(this.saturation==0){\r\n\t\t\tr = g = b = this.lightness;\r\n\t\t}\r\n\t\telse{\r\n\t\t\tlet hue2rgb = (p,q,t) => {\r\n\t\t\t\tif(t<0)t += 1;\r\n\t\t\t\tif(t>1)t -= 1;\r\n\t\t\t\tif(t<1/6)return p + (q-p)*6*t;\r\n\t\t\t\tif(t<1/2)return q;\r\n\t\t\t\tif(t<2/3)return p + (q-p)*(2/3-t)*6;\r\n\t\t\t\treturn p;\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tlet q = this.lightness<.5 ? this.lightness*(1+this.saturation) : this.lightness+this.saturation-this.lightness*this.saturation;\r\n\t\t\tlet p = 2*this.lightness-q;\r\n\t\t\t\r\n\t\t\tr = hue2rgb(p,q,this.hue+1/3);\r\n\t\t\tg = hue2rgb(p,q,this.hue);\r\n\t\t\tb = hue2rgb(p,q,this.hue-1/3);\r\n\t\t}\r\n\t\treturn new RGB(r*255,g*255,b*255);\r\n\t}\r\n\t\r\n\t//Returns this color as hsl(h,s,l) string\r\n\tpublic toString():string{\r\n\t\treturn `hsl(${this.hue*360},${this.saturation*100}%,${this.lightness*100}%)`;\r\n\t}\r\n}\r\n\r\n//Class representing an RGB color\r\n//R, G and B are in range 0..255\r\nexport class RGB implements Color{\r\n\tpublic constructor(\r\n\t\tpublic red:number,\r\n\t\tpublic green:number,\r\n\t\tpublic blue:number\r\n\t){}\r\n\t\r\n\t//Return copy of itself\r\n\tpublic asRGB():RGB{\r\n\t\treturn new RGB(this.red,this.green,this.blue);\r\n\t}\r\n\t\r\n\t//Convert to HSL\r\n\tpublic asHSL():HSL{\r\n\t\tlet r = this.red/255;\r\n\t\tlet g = this.green/255;\r\n\t\tlet b = this.blue/255;\r\n\t\t\r\n\t\tlet max = Math.max(r,g,b);\r\n\t\tlet min = Math.min(r,g,b);\r\n\t\tlet h,s,l = (max+min)/2;\r\n\r\n\t\tif(max===min){\r\n\t\t\th = s = 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlet d = max-min;\r\n\t\t\ts = l>.5 ? d/(2-max-min) : d/(max+min);\r\n\t\t\t\r\n\t\t\tswitch(max){\r\n\t\t\t\tcase r: h = (g-b)/d + (g<b?6:0);break;\r\n\t\t\t\tcase g: h = (b-r)/d + 2;break;\r\n\t\t\t\tcase b: h = (r-g)/d + 4;break;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\th /= 6;\r\n\t\t}\r\n\t\t\r\n\t\treturn new HSL(h,s,l);\r\n\t}\r\n\t\r\n\t//Returns this color as rgb(r,g,b) string\r\n\tpublic toString():string{\r\n\t\treturn `rgb(${this.red},${this.green},${this.blue})`;\r\n\t}\r\n}\r\n","\r\nimport {ApiReferenceService} from \"./api.reference.service\";\r\nimport {ApiSampleService} from \"./api.sample.service\";\r\nimport {CalculationSample, CalculationSampleOrder, SimpleWEWValue, WEWFactor} from \"../models/wew.model\";\r\nimport {WewValueCalc} from \"../models/wewValue.model\";\r\nimport {Injectable, Input} from \"@angular/core\";\r\nimport {Observable} from \"rxjs/internal/Observable\";\r\nimport {ApiWewService} from \"./api.wew.service\";\r\nimport {MaterialPalette, Palette} from \"./palette\";\r\nimport {forEach} from \"@angular/router/src/utils/collection\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class GlobalReferenceService {\r\n\r\n\r\n  public apiReferenceServer: ApiReferenceService;\r\n  public apiSampleServer: ApiSampleService;\r\n  public apiWewService: ApiWewService;\r\n  public pallete: Palette;\r\n\r\n\r\n\r\n  //current ReferenceID and refernceList\r\n  private referenceId: number = 0;\r\n  private krwId: number;\r\n  public reference: CalculationSampleOrder[] = new Array();\r\n\r\n  private sampleId: number;\r\n  public sample: CalculationSampleOrder[] = new Array();\r\n  public test: string[] = []\r\n  public expected:number = 1;\r\n\r\n\r\n  public valueMapperRef:Map<number,WewValueCalc> = new Map();\r\n\r\n  public valueMapperSample:Map<number,WewValueCalc> = new Map();\r\n\r\n  public barChartDataList:any[] = []\r\n  public valueMapperList:Map<number,WewValueCalc>[] = [];\r\n\r\n  //global vars for barcharts, any barchart with reference should take this data.\r\n  public barChartData:any[] = [\r\n    {data: [0], label: 'test',stack: 'test'}\r\n    ];\r\n  public barChartLabels:any[] = ['test', 'test2'];\r\n  public barChartColors:any[] = [];\r\n  public barChartColorsList:any[] = [];\r\n\r\n  //keep vars for the filter///\r\n  public filter_check: boolean;\r\n  public eutro_checked: boolean;\r\n  public eutro_3_checked: boolean;\r\n  public hydro_checked:boolean;\r\n  public hydro_3_checked: boolean;\r\n  private factors: WEWFactor[] = [];\r\n  public finished:boolean = false;\r\n\r\n  //always call before using barchart to set the reference!!\r\n  //this function sets the data for the barchart based on the reference ID\r\n  public setReferenceById(id: number){\r\n    this.finished = false;\r\n    this.krwId = 0;\r\n    if (this.factors.length === 0) {\r\n      this.getWewFactor();\r\n    }\r\n    //if the array is empty or the ids arent the same get new reference\r\n   if(this.reference == null || this.referenceId !== id){\r\n      this.referenceId = id;\r\n      this.setReference();\r\n     }else{\r\n      this.filter(this.reference)\r\n     this.setData();\r\n     //this.calculateComputedValues(this.reference, this.valueMapperRef);\r\n\r\n\r\n   }\r\n\r\n   }\r\n\r\n   public clearGraph(){\r\n    this.expected = 1;\r\n    this.finished = false;\r\n    this.barChartDataList.length = 0;\r\n    this.barChartData.length = 0;\r\n    this.valueMapperList.length = 0;\r\n    this.barChartColorsList.length = 0;\r\n   }\r\n\r\n   public setReferenceByKrwId(krwId: number){\r\n     this.finished = false;\r\n     this.referenceId = 0;\r\n     this.clearGraph();\r\n     if (this.factors.length === 0) {\r\n       this.getWewFactor();\r\n     }\r\n       this.krwId = krwId;\r\n       this.setReferenceKrw();\r\n\r\n   }\r\n\r\n   //set this in the highest class ex: app.compontent.\r\n  public setService(service: ApiSampleService, wewService: ApiWewService, refApi: ApiReferenceService){\r\n    this.apiReferenceServer = refApi;\r\n    this.apiWewService = wewService;\r\n    this.pallete = new MaterialPalette().shift();\r\n    this.apiSampleServer = service;\r\n  }\r\n\r\n  //sets the reference based on the global reference ID\r\n  //also sets the split values in the subscribe by calling calculateComputedValues()\r\n  private setReference(){\r\n    this.apiReferenceServer.getCalculationBySample(this.referenceId).subscribe(result=>{\r\n      this.reference = this.orderResult(result);\r\n      this.filter(this.reference)\r\n      this.setData()\r\n    });\r\n  }\r\n\r\n  private setReferenceKrw(){\r\n    this.apiReferenceServer.getByWatertype(this.krwId).subscribe( result=>{\r\n      this.apiReferenceServer.getCalculationBySample(result.id).subscribe(result =>{\r\n        this.reference = this.orderResult(result);\r\n        this.filter(this.reference)\r\n        this.setDataSplit();\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  //calculates the data from the reference or filterd refList\r\n  private calculateComputedValues(data: CalculationSampleOrder[], valueMapper:Map<number,WewValueCalc>)  {\r\n    //set mapper to 0\r\n\r\n    const wew_classes = data[0].wewValue.length;\r\n    for (let i = 1; i < wew_classes + 1; i++) {\r\n      valueMapper.set(i, new WewValueCalc(0, 0));\r\n    }\r\n\r\n    data.forEach(x => {\r\n      x.wewValue.forEach(x => {\r\n        if (x.value != null){\r\n          const previousValue = valueMapper.get(x.factor_class_id);\r\n          valueMapper.set(x.factor_class_id, new WewValueCalc(previousValue.value + x.value, previousValue.times + 1));\r\n        }\r\n      });\r\n    });\r\n\r\n  }\r\n  public setData(){\r\n    let dataRef = this.createData(this.valueMapperRef, 'Reference');\r\n    let dataSample = this.createData(this.valueMapperSample, 'Sample');\r\n    dataSample.forEach(entry => {\r\n      dataRef.push(entry);\r\n    })\r\n\r\n    this.barChartData = dataRef;\r\n    this.done();\r\n  }\r\n\r\n\r\n\r\n  //filters the data based on the vars set in the filterbar.\r\n  filter(data: CalculationSampleOrder[]) {\r\n\r\n    if (this.eutro_checked === true) {\r\n      if (this.eutro_3_checked === true) {\r\n        console.log(\"Eutro +3 filter\");\r\n        const filter = (data: CalculationSampleOrder[]) => data.filter(calculation => calculation.taxon.eutrofieringBelasting === 3);\r\n        data = filter(data);\r\n      } else {\r\n        console.log(\"Eutro waarden filter\");\r\n        const filter = (data: CalculationSampleOrder[]) => data.filter(calculation => calculation.taxon.eutrofieringBelasting != null);\r\n        data = filter(data);\r\n      }\r\n    }\r\n\r\n    if (this.hydro_checked === true) {\r\n      if (this.hydro_3_checked === true) {\r\n        console.log(\"Hydro +3 filter\");\r\n        const filter = (data: CalculationSampleOrder[]) => data.filter(calculation => calculation.taxon.hydrologischeVerstoring && calculation.taxon.morfologischeVerstoring === 3);\r\n        data = filter(data);\r\n      } else {\r\n        console.log(\"Hydro waarden filter\");\r\n        const filter = (data: CalculationSampleOrder[]) => data.filter(calculation => calculation.taxon.hydrologischeVerstoring && calculation.taxon.morfologischeVerstoring != null);\r\n        data = filter(data);\r\n      }\r\n    }\r\n    this.calculateComputedValues(data, this.valueMapperRef); // Used to calculate the values\r\n  }\r\n\r\n  public createData(valueMapper:Map<number,WewValueCalc>, type:string){\r\n\r\n    let newData:any[]= [];\r\n    let pos = 0;\r\n    this.barChartLabels.length = 0;\r\n    this.factors.forEach( entry =>{\r\n    this.barChartLabels.push(entry.name);\r\n    entry.classes.forEach(clas=>{\r\n      let  data: any[] = [];\r\n      for (let i = 0; i < pos; i++){\r\n      data.push(0);\r\n      }\r\n      let wew = valueMapper.get(clas.id);\r\n      data.push((wew.value / wew.times).toFixed(2));\r\n      newData.push({data: data, label: clas.description, stack: type});\r\n    });\r\n      pos++;\r\n    });\r\n    return newData;\r\n\r\n  }\r\n\r\n  public createDataSplitRef(valueMapper:Map<number,WewValueCalc>){\r\n    this.barChartDataList.length = 0;\r\n    this.barChartLabels = ['ref'];\r\n    this.factors.forEach( entry =>{\r\n      let newData:any[]= [];\r\n      let newColor:any[] = [];\r\n      let color = 0;\r\n      entry.classes.forEach(clas=>{\r\n        let  data: any[] = [];\r\n        let wew = valueMapper.get(clas.id);\r\n        newColor.push({backgroundColor: this.pallete.colorAt(color)});\r\n        data.push((wew.value / wew.times).toFixed(2));\r\n        newData.push({data: data, label: clas.description});\r\n        color++;\r\n\r\n      });\r\n      this.barChartDataList.push(newData);\r\n      this.barChartColorsList.push(newColor);\r\n    });\r\n  }\r\n\r\n  doFilter() {\r\n    if(this.reference != null){\r\n      this.filter(this.reference);\r\n      if(this.referenceId!==0){\r\n        this.setData()\r\n      }else {\r\n        this.setDataSplit();\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  private getWewFactor() {\r\n    this.apiWewService.getFactors().subscribe(result => {\r\n      this.factors = result;\r\n      this.setColorWew(result);\r\n      this.setColorWew(result);\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  private setColorWew(factors: WEWFactor[]){\r\n    let test = 0\r\n    factors.forEach(entry =>{\r\n      let pos = 0;\r\n      entry.classes.forEach( clas =>{\r\n        this.barChartColors.push({backgroundColor: this.pallete.colorAt(pos)})\r\n        pos++;\r\n        test++\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n\r\n  public setSampleById(id: number) {\r\n    this.finished = false;\r\n    if(this.sample == null || this.sampleId !== id){\r\n      this.sampleId = id;\r\n      this.setSample();\r\n    }else{\r\n      this.calculateComputedValues(this.sample, this.valueMapperSample);\r\n\r\n    }\r\n  }\r\n\r\n  public setSample(){\r\n      this.apiSampleServer.getCalculationBySample(this.sampleId).subscribe(result=>{\r\n        this.sample = this.orderResult(result);\r\n        this.calculateComputedValues(this.sample, this.valueMapperSample);\r\n        this.setData();\r\n      });\r\n\r\n  }\r\n\r\n  public done(){\r\n    if(this.reference.length != 0 && this.sample.length != 0){\r\n    this.finished = true;\r\n    console.log('done loading!')\r\n    }\r\n  }\r\n\r\n  private orderResult(result: CalculationSample) {\r\n    let order_sampleList = [];\r\n\r\n    result.taxon.forEach(taxon => {\r\n      let valueList = []\r\n      result.wewValue.forEach( wew =>{\r\n        if(wew.taxon_id == taxon.id) {\r\n          valueList.push(wew)\r\n        }\r\n      })\r\n      order_sampleList.push(new CalculationSampleOrder(1, taxon, valueList ))\r\n    })\r\n\r\n    return order_sampleList;\r\n  }\r\n\r\n\r\n public addSample(id: number) {\r\n     this.finished = false;\r\n     let sampleMap: Map<number,WewValueCalc> = new Map()\r\n\r\n     this.apiSampleServer.getCalculationBySample(id).subscribe(result=>{\r\n      this.calculateComputedValues(this.orderResult(result), sampleMap);\r\n      this.valueMapperList.push(sampleMap);\r\n       this.setDataSplit();\r\n    });\r\n  }\r\n  public addSamples(ids: number[]) {\r\n    this.finished = false;\r\n    this.expected = ids.length;\r\n    ids.forEach( id=>{\r\n\r\n      let sampleMap: Map<number, WewValueCalc> = new Map()\r\n      this.apiSampleServer.getCalculationBySample(id).subscribe(result => {\r\n        this.calculateComputedValues(this.orderResult(result), sampleMap);\r\n        this.valueMapperList.push(sampleMap);\r\n        this.setDataSplit();\r\n      });\r\n    });\r\n    }\r\n\r\n\r\n\r\n  private setDataSplit() {\r\n      this.createDataSplitRef(this.valueMapperRef)\r\n      this.createDataSplitSample(this.valueMapperList);\r\n\r\n      this.doneSplit();\r\n    }\r\n    private doneSplit(){\r\n    if(this.reference.length > 0 && this.valueMapperList.length >= this.expected){\r\n    this.finished = true;\r\n     console.log('done loading!')\r\n    }\r\n\r\n    }\r\n\r\n  private createDataSplitSample(valueMapperList: Map<number, WewValueCalc>[]) {\r\n    this.finished = false;\r\n    let name = 1;\r\n    valueMapperList.forEach(map => {\r\n      this.barChartLabels.push(name)\r\n      let pos = 0\r\n      this.factors.forEach( factor => {\r\n        let color = 0;\r\n        let newData:any[]= [];\r\n       // let newColor:any[] = [];\r\n        factor.classes.forEach(clas=>{\r\n          let  data: any[] = [];\r\n          for (let i = 0; i < name; i++){\r\n            data.push(0);\r\n          }\r\n          let wew = map.get(clas.id);\r\n         // newColor.push({backgroundColor: this.pallete.colorAt(color)});\r\n          data.push((wew.value / wew.times).toFixed(2));\r\n          this.barChartColorsList[pos].push({backgroundColor: this.pallete.colorAt(color)});\r\n\r\n          let clone = JSON.parse(JSON.stringify(this.barChartDataList[pos]));\r\n          clone.push({data: data, label: clas.description});\r\n          this.barChartDataList[pos] = clone;\r\n          color++;\r\n        });\r\n\r\n        pos++;\r\n       // this.barChartDataList[0].push(newData);\r\n      });\r\n      name++;\r\n    });\r\n\r\n}\r\n}\r\n","import {Color,RGB,HSL} from '../../../../waterscan-frontend/src/app/services/color';\r\nimport {shuffle,rotate,rotateParts} from '../../../../waterscan-frontend/src/app/services/arrayUtils';\r\n\r\n//A palette is a list of HSL or RGB colors\r\nexport abstract class Palette{\r\n\tprivate originalColors:Color[];\r\n\tprivate currentColors:Color[];\r\n\r\n\tpublic set colors(colors:Color[]){\r\n\t\tthis.originalColors = colors;\r\n\t\tthis.currentColors = colors;\r\n\t}\r\n\tpublic get colors():Color[]{\r\n\t\treturn this.currentColors;\r\n\t}\r\n\r\n\tpublic loop:boolean;\r\n\r\n\tpublic constructor(loop?:boolean){\r\n\t\tthis.loop = loop==null?true:loop;\r\n\t}\r\n\r\n\t//Reset color array to before any transformations\r\n\tpublic reset():void{\r\n\t\tthis.currentColors = [...this.originalColors];\r\n\t}\r\n\r\n\t//Make copy of palette\r\n\tpublic clone(){\r\n\t\tlet cloneObj = Object.create(this);\r\n\t\tcloneObj.originalColors = this.originalColors.map(color => color.asHSL());\r\n\t\tcloneObj.currentColors = this.currentColors.map(color => color.asHSL());\r\n\t\treturn cloneObj;\r\n\t}\r\n\r\n\t//When loop is off, index must be smaller than colors.length\r\n\tpublic colorAt(index:number):Color{\r\n\t\treturn this.loop?this.colors[index%this.colors.length]:this.colors[index];\r\n\t}\r\n\r\n\t//Rotate the color palette\r\n\tpublic rotate(amount?:number):Palette{\r\n\t\tif(!amount)\r\n\t\t\tamount = Math.floor(Math.random()*this.colors.length)\r\n\t\tthis.colors = rotate(this.colors,amount);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//Shifts values within the palette apart from each other\r\n\tpublic shift(amount?:number):Palette{\r\n\t\tif(!amount)\r\n\t\t\tamount = Math.round(this.colors.length**.5)+1\r\n\t\tthis.colors = rotateParts(this.colors,amount);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//Reverses the order of colors in the palete\r\n\tpublic reverse():Palette{\r\n\t\tthis.colors.reverse();\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//Randomizes the order of the palette\r\n\tpublic randomize():Palette{\r\n\t\tshuffle(this.colors);\r\n\t\treturn this;\r\n\t}\r\n\r\n\t//Changes every color in the filter\r\n\tpublic transform(hue:number,saturation:number,lightness:number):Palette{\r\n\t\tthis.colors = this.colors.map(color => {\r\n\t\t\tlet c = color.asHSL();\r\n\t\t\tc.hue = Math.max(Math.min(c.hue+hue,1),0);\r\n\t\t\tc.saturation = Math.max(Math.min(c.saturation+saturation,1),0);\r\n\t\t\tc.lightness = Math.max(Math.min(c.lightness+lightness,1),0);\r\n\t\t\treturn c;\r\n\t\t});\r\n\t\treturn this;\r\n\t}\r\n}\r\n\r\n//A completely random color is given every time colorAt() is used\r\nexport class RandomPalette extends Palette{\r\n\tpublic constructor(){\r\n\t\tsuper(false);\r\n\t\tthis.colors = [];\r\n\t}\r\n\tpublic colorAt(index?:number):Color{\r\n\t\treturn new HSL(Math.floor(Math.random()*360),Math.round(Math.random()*100),Math.round(Math.random()*100));\r\n\t}\r\n}\r\n\r\n//A palette with different hues, but the saturation and lightness are set in the constructor\r\n//The first parameter of the constructor determines how many colors there are in the palette\r\n//A higher number means more different colors, but the colors will be more difficult to tell apart\r\nexport class HuePalette extends Palette{\r\n\tpublic constructor(howManyColors:number,saturation:number,lightness:number,loop?:boolean){\r\n\t\tsuper(loop);\r\n\t\tlet hues = new Array(howManyColors).fill(0).map((v,index) => 1/howManyColors*index);\r\n\t\tthis.colors = hues.map(hue => new HSL(hue,saturation,lightness));\r\n\t}\r\n}\r\n\r\n//A palette with different saturations, but the hue and lightness are set in the constructor\r\nexport class SaturationPalette extends Palette{\r\n\tpublic constructor(howManyColors:number,hue:number,lightness:number,loop?:boolean){\r\n\t\tsuper(loop);\r\n\t\tlet saturations = new Array(howManyColors).fill(0).map((v,index) => 1/howManyColors*index);\r\n\t\tthis.colors = saturations.map(saturation => new HSL(hue,saturation,lightness));\r\n\t}\r\n}\r\n\r\n//A palette with different lightnesses, but the hue and saturation are set in the constructor\r\nexport class LightnessPalette extends Palette{\r\n\tpublic constructor(howManyColors:number,hue:number,saturation:number,loop?:boolean){\r\n\t\tsuper(loop);\r\n\t\tlet lightnesses = new Array(howManyColors).fill(0).map((v,index) => 1/howManyColors*index);\r\n\t\tthis.colors = lightnesses.map(lightness => new HSL(hue,saturation,lightness));\r\n\t}\r\n}\r\n\r\n//A palette of pastel colors\r\nexport class PastelPalette extends HuePalette{\r\n\tpublic constructor(howManyColors:number,loop?:boolean){\r\n\t\tsuper(howManyColors,1,.8,loop);\r\n\t}\r\n}\r\n\r\n//Dark colors\r\nexport class DarkPalette extends HuePalette{\r\n\tpublic constructor(howManyColors:number,loop?:boolean){\r\n\t\tsuper(howManyColors,1,.2,loop);\r\n\t}\r\n}\r\n\r\n//Colors with saturation and lightness at 50%\r\nexport class PlainPalette extends HuePalette{\r\n\tpublic constructor(howManyColors:number,loop?:boolean){\r\n\t\tsuper(howManyColors,.5,.5,loop);\r\n\t}\r\n}\r\n\r\n//Bright colors\r\nexport class BrightPalette extends HuePalette{\r\n\tpublic constructor(howManyColors:number,loop?:boolean){\r\n\t\tsuper(howManyColors,1,.5,loop);\r\n\t}\r\n}\r\n\r\n//Colors from https://material.io/guidelines/style/color.html#color-color-palette\r\nexport class MaterialPalette extends Palette{\r\n\tpublic constructor(loop?:boolean){\r\n\t\tsuper(loop);\r\n\t\tthis.colors = [\r\n\t\t\tnew RGB(244,67,54), new RGB(233,30,99), new RGB(156,39,176), new RGB(103,58,183),\r\n\t\t\tnew RGB(63,81,181), new RGB(33,150,243), new RGB(0,188,212), new RGB(0,150,136),\r\n\t\t\tnew RGB(76,175,80), new RGB(139,195,74), new RGB(205,220,57), new RGB(255,235,59),\r\n\t\t\tnew RGB(255,152,0), new RGB(255,87,34)\r\n\t\t];\r\n\t}\r\n}\r\n","module.exports = \":host >>> .mat-nav-list .mat-list-item .mat-list-item-content{\\r\\n  height: 100%;\\r\\n  padding: 1rem;\\r\\n}\\r\\n\\r\\n:host >>> .mat-nav-list .mat-list-item-content:hover{\\r\\n  background: rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.mat-nav-list .mat-list-item{\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.mat-divider{\\r\\n  border-top-color: rgba(255,255,255,.2);\\r\\n}\\r\\n\\r\\n.logo-field {\\r\\n  height: 135px;\\r\\n}\\r\\n\"","module.exports = \"<mat-nav-list>\\r\\n  <!-- Logo that links to home -->\\r\\n  <div class=\\\"nav-header\\\">\\r\\n    <div class=\\\"logo-field\\\">\\r\\n      <a mat-list-item routerLink=\\\"/\\\" class=\\\"logo\\\"><img src=\\\"/assets/logo.svg\\\"></a>\\r\\n    </div>\\r\\n  </div>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <!-- Menu items for guests only -->\\r\\n  <div *ngIf=\\\"!authenticationService.isLoggedIn()\\\">\\r\\n    <a mat-list-item routerLink=\\\"/login\\\">Login</a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Menu items for users only -->\\r\\n  <div *ngIf=\\\"authenticationService.isLoggedIn()\\\">\\r\\n    <a mat-list-item routerLink=\\\"/map\\\">Landkaart</a>\\r\\n    <a mat-list-item routerLink=\\\"/data\\\">Algemene data</a>\\r\\n    <a mat-list-item routerLink=\\\"/sample/compare\\\">Monsters vergelijken</a>\\r\\n    <a mat-list-item routerLink=\\\"/sample/upload\\\">Uploaden monster</a>\\r\\n    <mat-divider></mat-divider>\\r\\n    <a mat-list-item routerLink=\\\"/account\\\">Account aanpassen</a>\\r\\n    <a mat-list-item routerLink=\\\"/help\\\">Hulp en contact</a>\\r\\n  </div>\\r\\n\\r\\n  <!-- Menu items for admins only -->\\r\\n  <div *ngIf=\\\"authenticationService.isAdmin()\\\">\\r\\n    <mat-divider></mat-divider>\\r\\n    <a mat-list-item routerLink=\\\"/wew/upload\\\">WEW-lijst importeren</a>\\r\\n    <a mat-list-item routerLink=\\\"/taxon/import\\\">Taxon-lijst importeren</a>\\r\\n    <a mat-list-item routerLink=\\\"/taxon/group\\\">Taxongroepen beheren</a>\\r\\n    <a mat-list-item routerLink=\\\"/reference/list\\\">Referenties beheren</a>\\r\\n    <mat-divider></mat-divider>\\r\\n    <a mat-list-item routerLink=\\\"/admin/create-account\\\">Accounts beheren</a>\\r\\n  </div>\\r\\n</mat-nav-list>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationService} from 'app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navigatie',\r\n  templateUrl: './sidenav.component.html',\r\n  providers: [AuthenticationService],\r\n  styleUrls: ['./sidenav.component.css']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  constructor(public authenticationService: AuthenticationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".taxonList{\\r\\n  padding:0;\\r\\n}\\r\\n:host >>> ul{\\r\\n  padding:0 2em;\\r\\n}\\r\\n.taxonList li,:host >>> li{\\r\\n  list-style-type:none;\\r\\n}\\r\\n\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>Importeer soorten structuur</mat-card-title>\\r\\n</mat-card>\\r\\n\\r\\n<!-- ToDo: handle errors nicely -->\\r\\n<mat-card *ngIf=\\\"state=='error'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Error</mat-card-title>\\r\\n  <mat-card-content>{{errors|json}}</mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Loading card -->\\r\\n<mat-card *ngIf=\\\"state=='loading'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Start -->\\r\\n<mat-card *ngIf=\\\"state=='start'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Upload soorten structuur (XLS)</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <input type=\\\"file\\\" (change)=\\\"fileChange($event)\\\"/>\\r\\n    <p>\\r\\n      Het bestand dient de volgende kolommen te hebben: taxonname, taxongroup, taxonlevel, parentname, refername.\\r\\n    </p>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Finished, or not? -->\\r\\n<mat-card *ngIf=\\\"state=='finished'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimatone($event)\\\">\\r\\n  <mat-card-title>Klaar</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    Alle taxonIds zijn opgeslagen.\\r\\n    ToDo: knop naar view\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {trigger,style,transition,animate,group,state} from '@angular/animations';\r\n\r\nimport {ApiTaxonService} from '../../services/api.taxon.service';\r\nimport {Taxon,TaxonGroup,TaxonLevel} from '../../models/taxon.model';\r\nimport {uniqueFilter} from '../../../../../waterscan-frontend/src/app/services/arrayUtils';\r\n\r\nimport * as XLSX from 'xlsx';\r\n\r\n//The states an import process can be in\r\ntype ImportState = 'anim'|'start'|'loading'|'confirm'|'finished'|'error';\r\n\r\n//The columns of the sheet\r\ntype ImportRow = {taxontype,taxoncode,taxonname,author,taxongroup,taxonlevel,parentname,refername,literature,localname,date,status};\r\n\r\n\r\n@Component({\r\n  selector:'app-taxon-import-structure',\r\n  providers:[ApiTaxonService],\r\n  templateUrl:'./taxon-import-structure.component.html',\r\n  styleUrls:['./taxon-import-structure.component.css'],\r\n  animations:[\r\n    trigger('mainCardAnim',[\r\n      state('void',style({opacity:0})),\r\n      transition(':enter',[animate('300ms 150ms',style({opacity:1}))]),\r\n      transition(':leave',[animate('150ms', style({opacity:0}))])\r\n    ])\r\n  ]\r\n})\r\nexport class TaxonImportStructureComponent implements OnInit{\r\n  //The state of the import process\r\n  state:ImportState = 'start';\r\n  //NextState is used to go to the correct state after an animated transition\r\n  private nextState:ImportState;\r\n  //Any errors that happen during the process\r\n  errors:any[] = [];\r\n\r\n  private groupPr:Promise<TaxonGroup[]>;\r\n  private levelPr:Promise<TaxonLevel[]>;\r\n\r\n  constructor(\r\n    private taxonApi:ApiTaxonService\r\n  ){\r\n    //Retrieve known taxon groups and levels\r\n    this.groupPr = new Promise((resolve,reject) => this.taxonApi.getGroups().subscribe(groups => resolve(groups), err => reject(err)));\r\n    this.levelPr = new Promise((resolve,reject) => this.taxonApi.getLevels().subscribe(levels => resolve(levels), err => reject(err)));\r\n  }\r\n\r\n  ngOnInit(){}\r\n\r\n  //Set the state of the importing process\r\n  private setState(state:ImportState){\r\n    this.state = 'anim';\r\n    this.nextState = state;\r\n  }\r\n\r\n  //Go to the next state when the :leave animation finishes\r\n  mainCardAnimDone($event){\r\n    if($event.toState==='void'){\r\n      this.state = this.nextState;\r\n    }\r\n  }\r\n\r\n  //ToDo: improve error handling\r\n  //Right now we just print the array as json on the page\r\n  public handleError(...error){\r\n    this.setState('error');\r\n    this.errors.push(error);\r\n  }\r\n\r\n  //A file is choses from the upload page\r\n  fileChange($event){\r\n    this.setState('loading');\r\n    let files:FileList = $event.target.files;\r\n    let file = files.item(0);\r\n    this.importFile(file);\r\n  }\r\n\r\n  //Take care of the whole importing process\r\n  private importFile(file:File){\r\n    this.handleFile(file)\r\n      .then(wb => this.handleWorkBook(wb))\r\n      .then(({taxonIds,parentMap,referMap}) => this.saveTaxa(taxonIds,parentMap,referMap));\r\n  }\r\n\r\n  //Reads and parses the file and turns it into a workbook\r\n  private handleFile(file:File):Promise<XLSX.WorkBook>{\r\n    //Require by XLSX when using readAsArrayBuffer\r\n    function fixdata(data) {\r\n      let o = \"\", l = 0, w = 10240;\r\n      for(; l<data.byteLength/w; ++l)\r\n        o += String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w,l*w+w)));\r\n      o += String.fromCharCode.apply(null,new Uint8Array(data.slice(l*w)));\r\n      return o;\r\n    }\r\n\r\n    //Resolves when the file is parsed and available as XLSX.WorkBook\r\n    return new Promise((resolve,reject) => {\r\n      let reader = new FileReader();\r\n      let name = file.name;\r\n      reader.onload = function(e:any){\r\n        setTimeout(()=>{\r\n          let data = e.target.result;\r\n          let arr = fixdata(data);\r\n          let workbook = XLSX.read(btoa(arr), {type: 'base64'});\r\n          resolve(workbook);\r\n        });\r\n      };\r\n      reader.onerror = function(e){\r\n        reject(e);\r\n      }\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  //Start work on the workbook once XLSX has parsed the file\r\n  private handleWorkBook(wb:XLSX.WorkBook):Promise<{taxonIds:Taxon[],parentMap:Map<string,string>,referMap:Map<string,string>}>{\r\n    //Get the first sheet from the workbook\r\n    let sheet = wb.Sheets[wb.SheetNames[0]];\r\n    //Turn the worksheet in a 2D array\r\n    let rows = <ImportRow[]> XLSX.utils.sheet_to_json(sheet);\r\n\r\n    //Trim spaces and make lower case\r\n    rows.forEach(row => {\r\n      row.taxonname = row.taxonname.trim().toLowerCase();\r\n      row.taxongroup = row.taxongroup.trim();\r\n      row.taxonlevel = row.taxonlevel.trim();\r\n      row.parentname = row.parentname.trim().toLowerCase();\r\n      row.refername = row.refername.trim().toLowerCase();\r\n    });\r\n\r\n    //Take care of the taxon groups and levels\r\n    this.groupPr = this.groupPr.then(groups => this.handleGroups(rows,groups));\r\n    this.levelPr = this.levelPr.then(levels => this.handleLevels(rows,levels));\r\n\r\n    //Groups and levels are all saved and available\r\n    //Turn rows into taxon objects\r\n    return Promise.all([this.groupPr,this.levelPr])\r\n      .then(([groups,levels]) => this.handleRows(rows,groups,levels))\r\n  }\r\n\r\n  //Creates groups that don't exist yet\r\n  private handleGroups(rows:ImportRow[],groups:TaxonGroup[]):Promise<TaxonGroup[]>{\r\n    //Existing groups\r\n    let groupMap:Map<string/*group code*/,TaxonGroup> = new Map();\r\n    groups.forEach(group => groupMap.set(group.code,group));\r\n\r\n    //New groups from the import\r\n    let newGroups = rows.map(row => row.taxongroup)\r\n      .filter(uniqueFilter)\r\n      .filter(code => code)\r\n      .filter(code => !groupMap.has(code))\r\n      .map(code => {\r\n        let group = new TaxonGroup();\r\n        group.code = code;\r\n        return group;\r\n      });\r\n\r\n    //Return groups array if no new ones are being imported\r\n    if(!newGroups.length)\r\n      return Promise.resolve(groups);\r\n\r\n    //Save them and return a promise\r\n    return new Promise((resolve,reject) => {\r\n      this.taxonApi.saveGroups(newGroups).subscribe(newGroups => {\r\n        resolve([...groups,...newGroups]);\r\n      },error => reject(error));\r\n    });\r\n  }\r\n\r\n  //Creates levels that don't exist yet\r\n  private handleLevels(rows:ImportRow[],levels:TaxonLevel[]):Promise<TaxonLevel[]>{\r\n    //Existing levels\r\n    let levelMap:Map<string/*level name*/,TaxonLevel> = new Map();\r\n    levels.forEach(level => levelMap.set(level.name,level));\r\n\r\n    //New levels from the import\r\n    let newLevels = rows.map(row => row.taxonlevel)\r\n      .filter(uniqueFilter)\r\n      .filter(name => name)\r\n      .filter(name => !levelMap.has(name))\r\n      .map(name => {\r\n        let level = new TaxonLevel();\r\n        level.name = name;\r\n        return level;\r\n      });\r\n\r\n    //Return levels array if no new ones are being imported\r\n    if(!newLevels.length)\r\n      return Promise.resolve(levels);\r\n\r\n    //Save them and return a promise\r\n    return new Promise((resolve,reject) => {\r\n      this.taxonApi.saveLevels(newLevels).subscribe(newLevels => {\r\n        resolve([...levels,...newLevels]);\r\n      },error => reject(error));\r\n    });\r\n  }\r\n\r\n  //Turn the rows into objects that can be saved to the server\r\n  private handleRows(rows:ImportRow[],groups:TaxonGroup[],levels:TaxonLevel[]):{taxonIds:Taxon[],parentMap:Map<string,string>,referMap:Map<string,string>}{\r\n    //Map taxon names to their objects\r\n    let taxonRowMap:Map<string/*taxon name*/,ImportRow> = new Map();\r\n    rows.forEach(row => taxonRowMap.set(row.taxonname,row));\r\n\r\n    //Easy lookup for groups and levels\r\n    let groupMap:Map<string/*group code*/,TaxonGroup> = new Map();\r\n    let levelMap:Map<string/*level name*/,TaxonLevel> = new Map();\r\n    groups.forEach(group => groupMap.set(group.code,group));\r\n    levels.forEach(level => levelMap.set(level.name,level));\r\n\r\n    //Store parent and refer relations for after stuff is saved, as we don't know the ids yet\r\n    let parentMap:Map<string/*child name*/,string/*parent name*/> = new Map();\r\n    let referMap:Map<string/*referring name*/,string/*being referred to name*/> = new Map();\r\n\r\n    //Create taxon objects\r\n    let taxonIds:Taxon[] = rows.map(row => {\r\n      let taxon = new Taxon();\r\n      taxon.name = row.taxonname;\r\n\r\n      if(row.taxongroup)\r\n        taxon.groupId = groupMap.get(row.taxongroup).id;\r\n      if(row.taxonlevel)\r\n        taxon.levelId = levelMap.get(row.taxonlevel).id;\r\n\r\n      //Store parents and refers for later\r\n      if(row.parentname)\r\n        parentMap.set(row.taxonname,row.parentname);\r\n      if(row.refername)\r\n        referMap.set(row.taxonname,row.refername);\r\n\r\n      return taxon;\r\n    });\r\n\r\n    return {taxonIds:taxonIds,parentMap:parentMap,referMap:referMap};\r\n  }\r\n\r\n  private saveTaxa(taxonIds:Taxon[],parentMap:Map<string,string>,referMap:Map<string,string>):void{\r\n    this.taxonApi.saveMerge(taxonIds).subscribe((taxonIds:Taxon[]) => {\r\n      //Create new lookup map\r\n      let taxonNameMap:Map<string,Taxon> = new Map();\r\n      taxonIds.forEach(taxon => taxonNameMap.set(taxon.name,taxon));\r\n\r\n      //Set parent and refer relations\r\n      let changed:Taxon[] = [];\r\n      taxonIds.forEach(taxon => {\r\n        if(parentMap.has(taxon.name)){\r\n          taxon.parentId = taxonNameMap.get(parentMap.get(taxon.name)).id;\r\n          changed.push(taxon);\r\n        }\r\n        else if(referMap.has(taxon.name)){\r\n          taxon.referId = taxonNameMap.get(referMap.get(taxon.name)).id;\r\n          changed.push(taxon);\r\n        }\r\n      });\r\n\r\n      //Save the changed ones\r\n      this.taxonApi.save(changed).subscribe(changed => {\r\n        this.setState('finished');\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"group editing\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar>\\r\\n        <mat-icon *ngIf=\\\"group.icon\\\" class=\\\"taxon-icon\\\" fontSet=\\\"fi\\\"\\r\\n                 [fontIcon]=\\\"'flaticon-'+group.icon\\\"></mat-icon>\\r\\n        <span *ngIf=\\\"!group.icon\\\" class=\\\"taxon-icon\\\">?</span>\\r\\n      </div>\\r\\n      <mat-card-title>{{group.code}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <div>\\r\\n        <div class=\\\"edit-label\\\">Icoon</div>\\r\\n        <mat-select [(ngModel)]=\\\"group.icon\\\">\\r\\n          <mat-option *ngFor=\\\"let icon of parent.icons\\\" [value]=\\\"icon\\\">\\r\\n            <span *ngIf=\\\"!icon\\\">?</span>\\r\\n            <mat-icon *ngIf=\\\"icon\\\" fontSet=\\\"fi\\\" [fontIcon]=\\\"'flaticon-'+icon\\\"></mat-icon>\\r\\n            {{icon}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </div>\\r\\n      <div>\\r\\n        <div class=\\\"edit-label\\\">Beschrijving</div>\\r\\n        <mat-form-field class=\\\"groupDescription\\\">\\r\\n          <input matInput [(ngModel)]=\\\"group.description\\\"/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button mat-dialog-close>\\r\\n        <mat-icon>close</mat-icon>\\r\\n      </button>\\r\\n      <button mat-button mat-dialog-close (click)=\\\"save()\\\">\\r\\n        <mat-icon>check</mat-icon>\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","module.exports = \".group{\\r\\n  display:inline-block;\\r\\n  width:320px;\\r\\n  margin:-20px -20px 0 0;\\r\\n}\\r\\n\\r\\n.group.editing{\\r\\n  width:350px;\\r\\n  margin:0;\\r\\n}\\r\\n\\r\\n.group.editing .mat-card{\\r\\n  box-shadow:none;\\r\\n  padding:0;\\r\\n  margin:0;\\r\\n}\\r\\n\\r\\n.groupDescription{\\r\\n  text-transform:capitalize;\\r\\n}\\r\\n\\r\\n.noName{\\r\\n  font-style:italic;\\r\\n}\\r\\n\\r\\n.taxon-icon{\\r\\n  border-radius:inherit;\\r\\n  text-align:center;\\r\\n  height:28px;\\r\\n  width:28px;\\r\\n  font-size:28px;\\r\\n  padding:4px 6px 8px 6px;\\r\\n  background:#EBEBEB;\\r\\n  color:#222;\\r\\n  display:inline-block;\\r\\n}\\r\\n\\r\\n.group md-card-actions{\\r\\n  text-align:right;\\r\\n}\\r\\n\\r\\n.group md-card-content{\\r\\n  margin-top:16px;\\r\\n}\\r\\n\\r\\n.edit-label{\\r\\n  display:inline-block;\\r\\n  width:100px;\\r\\n  font-weight:bold;\\r\\n}\\r\\n\\r\\n.mat-option .mat-icon{\\r\\n  font-size:26px;\\r\\n}\\r\\n\"","module.exports = \"<h1>Taxon Groepen</h1>\\r\\n<div class=\\\"group\\\" *ngFor=\\\"let group of groups; index as index\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar>\\r\\n        <mat-icon *ngIf=\\\"group.icon\\\" class=\\\"taxon-icon\\\" fontSet=\\\"fi\\\"\\r\\n                 [fontIcon]=\\\"'flaticon-'+group.icon\\\"></mat-icon>\\r\\n        <span *ngIf=\\\"!group.icon\\\" class=\\\"taxon-icon\\\">?</span>\\r\\n      </div>\\r\\n      <mat-card-title>{{group.code}}</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <p>\\r\\n        <span class=\\\"groupDescription\\\" [ngClass]=\\\"{noName:!group.description}\\\">{{group.description?group.description:'Geen naam'}}</span>\\r\\n      </p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-button (click)=\\\"edit(group)\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {MatDialog,MatDialogRef} from '@angular/material';\r\n\r\nimport {TaxonGroup} from 'app/models/taxon.model';\r\nimport {ApiTaxonService} from 'app/services/api.taxon.service';\r\n\r\n@Component({\r\n  selector:'app-taxon-manage-groups',\r\n  providers:[ApiTaxonService],\r\n  templateUrl:'./taxon-manage-groups.component.html',\r\n  styleUrls:['./taxon-manage-groups.component.css']\r\n})\r\nexport class TaxonManageGroupsComponent implements OnInit{\r\n  groups:TaxonGroup[];\r\n\r\n  icons = [null,'animals','animals-1','ant','ant-1','asparagus-beetle','bedbug','bee','big-mussel','big-shrimp','bug','bumblebee',\r\n    'butterfly','butterfly-1','caterpillar','centipede','centipede-1','chrysomela','cicada','cockroach','cockroach-1','dragonfly',\r\n    'dragonfly-1','dragonfly-hand-drawn-insect','earth-worm','earthworm-shape','firefly','fly','golden-ground-beetle','grasshopper',\r\n    'hoverfly','insects','insects-1','ladybug','leaf-butterfly','leaf-insect','lobster','lobster-1','lobster-2','locust','louse',\r\n    'madagascan','mite','mosquito','mosquito-1','mosquito-2','mosquito-3','mosquito-4','moth','mussel','opiliones','pollen-beetle',\r\n    'pond-skater','psocoptera','pyrrhocoridae','red-soldier-beetle','sawfly','scorpio','shrimp','silverfish','snail','snail-1',\r\n    'spider','spider-1','spider-black-widow','stag-beetle','stag-beetle-1','stick-insect','stone','strepsiptera','swamp-monster',\r\n    'tarantula','termite','tree-lobster','tree-of-dots-foliage','wasp','wharf-borer','worm-facing-left','worm-outline-inside-a-circle'];\r\n\r\n  constructor(\r\n    private taxonApi:ApiTaxonService,\r\n    private dialog:MatDialog\r\n  ){\r\n    taxonApi.getGroups().subscribe(groups => {\r\n      groups.sort((a,b) => a.code.localeCompare(b.code));\r\n      this.groups = groups;\r\n    });\r\n  }\r\n\r\n  ngOnInit(){}\r\n\r\n  edit(group:TaxonGroup){\r\n    let dialogRef = this.dialog.open(TaxonManageGroupsEditComponent);\r\n    dialogRef.componentInstance.parent = this;\r\n    dialogRef.componentInstance.group = Object.assign(new TaxonGroup(),group);\r\n  }\r\n\r\n  save(group:TaxonGroup){\r\n    this.groups.forEach((gr,index) => {\r\n      if(gr.id==group.id)\r\n        this.groups[index] = group;\r\n    });\r\n    this.taxonApi.saveGroups([group]).subscribe();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector:'app-taxon-manage-groups-edit',\r\n  templateUrl:'./taxon-manage-groups-edit.component.html',\r\n  styleUrls:['./taxon-manage-groups.component.css']\r\n})\r\nexport class TaxonManageGroupsEditComponent{\r\n  parent:TaxonManageGroupsComponent;\r\n  group:TaxonGroup;\r\n\r\n  constructor(public dialogRef:MatDialogRef<TaxonManageGroupsEditComponent>){}\r\n\r\n  save(){\r\n    this.group.description = this.group.description.toLowerCase();\r\n    this.parent.save(this.group);\r\n  }\r\n}\r\n","module.exports = \".depthLines{\\r\\n  font-family:monospace;\\r\\n  white-space:pre;\\r\\n}\\r\\n\\r\\n.treeRow{\\r\\n  box-sizing:border-box;\\r\\n  height:22px;\\r\\n  font-size:22px;\\r\\n}\\r\\n\\r\\n.root .treeRowTaxon{\\r\\n  color:#800;\\r\\n  text-decoration:underline;\\r\\n}\\r\\n\\r\\n.treeRowTaxon{\\r\\n  font-family:sans-serif;\\r\\n  color:#333;\\r\\n  font-size:14px;\\r\\n  font-weight:bold;\\r\\n  position:relative;\\r\\n  top:-3px;\\r\\n  left:2px;\\r\\n}\\r\\n\\r\\n.referrer{\\r\\n  font-style:italic;\\r\\n  font-weight:normal;\\r\\n}\\r\\n\\r\\n.postfix{\\r\\n  color:#7B7F85;\\r\\n  font-size:12px;\\r\\n  font-style:italic;\\r\\n  font-weight:normal;\\r\\n}\\r\\n\\r\\n.root .postfix{\\r\\n  text-decoration:underline;\\r\\n}\\r\\n\\r\\n.taxonLink:link,.taxonLink:visited{\\r\\n  color:#333;\\r\\n  text-decoration:none;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"tree\\\" [ngStyle]=\\\"{'height.px':treeRows.length*22}\\\">\\r\\n  <div class=\\\"treeRow\\\" *ngFor=\\\"let row of treeRows\\\" [ngClass]=\\\"{root:row.taxon===root}\\\">\\r\\n    <span class=\\\"depthLines\\\">{{row.depthLines}}</span>\\r\\n    <span class=\\\"treeRowTaxon\\\" [ngClass]=\\\"{referrer:row.isRefer}\\\">\\r\\n\\t\\t\\t{{row.isRefer?'Referrer: ':''}}\\r\\n\\t\\t\\t<a class=\\\"taxonLink\\\" [routerLink]=\\\"'/taxon/view/'+row.taxon.id\\\">{{row.taxon.name}}</a>\\r\\n\\t\\t\\t<span class=\\\"postfix\\\">{{row.postfix}}</span>\\r\\n\\t\\t</span>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component,OnInit,Input} from '@angular/core';\r\n\r\nimport {Taxon,TaxonGroup,TaxonLevel} from '../../models/taxon.model';\r\n\r\ntype TreeRow = {taxon:Taxon,depth:number,isRefer:boolean,depthLines:string,postfix:string};\r\n\r\n@Component({\r\n  selector:'app-taxon-tree',\r\n  templateUrl:'./taxon-tree.component.html',\r\n  styleUrls:['./taxon-tree.component.css']\r\n})\r\nexport class TaxonTreeComponent implements OnInit {\r\n  @Input() root:Taxon;\r\n  @Input() taxonIds:Taxon[];\r\n  @Input() groups:TaxonGroup[];\r\n  @Input() levels:TaxonLevel[];\r\n  @Input() showAncestors:boolean;\r\n  @Input() showDescendants:boolean;\r\n\r\n  treeRows:TreeRow[];\r\n\r\n  constructor(){}\r\n\r\n  ngOnInit(){\r\n    this.createTree();\r\n  }\r\n\r\n  private createTree(){\r\n    //Create easy lookup maps\r\n    let groupIdMap:Map<number/*group id*/,TaxonGroup> = new Map();\r\n    let levelIdMap:Map<number/*level id*/,TaxonLevel> = new Map();\r\n    let taxonIdMap:Map<number/*taxon id*/,Taxon> = new Map();\r\n\r\n    this.groups.forEach(group => groupIdMap.set(group.id,group));\r\n    this.levels.forEach(level => levelIdMap.set(level.id,level));\r\n    this.taxonIds.forEach(taxon => taxonIdMap.set(taxon.id,taxon));\r\n\r\n    //Create a hierarchy\r\n    let taxonParentMap:Map<Taxon/*parent*/,Taxon[]/*children*/> = new Map();\r\n    let taxonReferMap:Map<Taxon/*being referred to*/,Taxon[]/*referring to*/> = new Map();\r\n\r\n    //Make empty arrays\r\n    this.taxonIds.forEach(taxon => {\r\n      taxonParentMap.set(taxon,[]);\r\n      taxonReferMap.set(taxon,[]);\r\n    });\r\n\r\n    //Fill arrays\r\n    this.taxonIds.filter(taxon => taxon.parentId).forEach(taxon => taxonParentMap.get(taxonIdMap.get(taxon.parentId)).push(taxon));\r\n    this.taxonIds.filter(taxon => taxon.referId).forEach(taxon => taxonReferMap.get(taxonIdMap.get(taxon.referId)).push(taxon));\r\n\r\n\r\n    //Only use the taxonIds we actually want to show\r\n    let activeTaxa:Taxon[] = [this.root];\r\n    let firstTaxon = this.root;\r\n\r\n    //Ancestors\r\n    if(this.showAncestors && this.root.parentId){\r\n      let ancestor:Taxon = taxonIdMap.get(this.root.parentId);\r\n      while(ancestor){\r\n        activeTaxa.push(ancestor);\r\n        ancestor = ancestor.parentId?taxonIdMap.get(ancestor.parentId):null;\r\n      }\r\n      //Store final ancestor to start the tree with\r\n      firstTaxon = activeTaxa[activeTaxa.length-1];\r\n    }\r\n\r\n    //Descendants\r\n    if(this.showDescendants){\r\n      let lookingFor:Taxon[] = [this.root];\r\n      while(lookingFor.length){\r\n        let newLookingFor = [];\r\n        lookingFor.forEach(taxon => {\r\n          let children = taxonParentMap.get(taxon);\r\n          if(children.length){\r\n            newLookingFor.push(...children);\r\n            activeTaxa.push(...children);\r\n          }\r\n        });\r\n        lookingFor = newLookingFor;\r\n      }\r\n    }\r\n\r\n    //Turn hierarchy into a list\r\n    let treeRows:TreeRow[] = [];\r\n    let addRecursive = (list:TreeRow[],taxon:Taxon,depth:number,depthLines:string,lastChildOfParent:boolean) => {\r\n      if(!activeTaxa.includes(taxon))\r\n        return;\r\n\r\n      let postfix = [];\r\n      if(taxon.groupId){\r\n        let group = groupIdMap.get(taxon.groupId);\r\n        postfix.push(group.description?group.description:group.code);\r\n      }\r\n      if(taxon.levelId)\r\n        postfix.push(levelIdMap.get(taxon.levelId).name);\r\n\r\n      list.push({\r\n        taxon:taxon,\r\n        depth:depth,\r\n        isRefer:!!taxon.referId,\r\n        postfix:postfix.length?'('+postfix.join(', ')+')':'',\r\n        depthLines:depth?depthLines+(lastChildOfParent?' └─':' ├─'):''\r\n      });\r\n      if(depth)\r\n        depthLines += lastChildOfParent?'   ':' │ ';\r\n      taxonReferMap.get(taxon).forEach((taxon,index,array) => addRecursive(list,taxon,depth+1,depthLines,index===array.length-1));\r\n      taxonParentMap.get(taxon).forEach((taxon,index,array) => addRecursive(list,taxon,depth+1,depthLines,index===array.length-1));\r\n    };\r\n\r\n    addRecursive(treeRows,firstTaxon,0,'',false);\r\n\r\n    this.treeRows = treeRows;\r\n  }\r\n\r\n}\r\n","module.exports = \".taxon-icon{\\r\\n  border-radius:50%;\\r\\n  text-align:center;\\r\\n  height:28px;\\r\\n  width:28px;\\r\\n  font-size:28px;\\r\\n  padding:4px 6px 8px 6px;\\r\\n  background:#EBEBEB;\\r\\n  color:#222;\\r\\n  display:inline-block;\\r\\n}\\r\\n\"","module.exports = \"<h1 *ngIf=\\\"!root\\\">Taxon bekijken</h1>\\r\\n<h1 *ngIf=\\\"root\\\">Taxon: {{root.name}}</h1>\\r\\n\\r\\n<!-- ToDo: handle errors nicely -->\\r\\n<mat-card *ngIf=\\\"state=='error'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimDone($event)\\\">\\r\\n  <mat-card-title>Error</mat-card-title>\\r\\n  <mat-card-content>{{errors|json}}</mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Loading card -->\\r\\n<mat-card *ngIf=\\\"state=='loading'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimDone($event)\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Ready -->\\r\\n<div *ngIf=\\\"state=='ready'\\\" [@mainCardAnim] (@mainCardAnim.done)=\\\"mainCardAnimDone($event)\\\">\\r\\n  <!-- Family tree -->\\r\\n  <mat-card>\\r\\n    <mat-card-title>\\r\\n\\t\\t\\t<span *ngIf=\\\"rootGroup && rootGroup.icon\\\">\\r\\n\\t\\t\\t\\t<mat-icon class=\\\"taxon-icon\\\" fontSet=\\\"fi\\\" [fontIcon]=\\\"'flaticon-'+rootGroup.icon\\\"></mat-icon>\\r\\n\\t\\t\\t</span>\\r\\n      Taxon familie\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <app-taxon-tree [groups]=\\\"groups\\\" [levels]=\\\"levels\\\" [taxonIds]=\\\"taxonIds\\\" [root]=\\\"root\\\"\\r\\n                      [showAncestors]=\\\"true\\\" [showDescendants]=\\\"true\\\"></app-taxon-tree>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n  <!-- WEW-info -->\\r\\n  <mat-card>\\r\\n    <mat-card-title>WEW gegevens</mat-card-title>\\r\\n    <mat-card-content>\\r\\n      <app-wew-bar-chart *ngIf=\\\"wewConfig\\\" [config]=\\\"wewConfig\\\"></app-wew-bar-chart>\\r\\n      <mat-spinner *ngIf=\\\"!wewConfig\\\"></mat-spinner>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import {Component,OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {trigger,style,transition,animate,group,state} from '@angular/animations';\r\n\r\nimport {Taxon,TaxonGroup,TaxonLevel} from 'app/models/taxon.model';\r\nimport {ApiTaxonService} from 'app/services/api.taxon.service';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\nimport {WewChartConfig} from '../../wew/wew-bar-chart/wew-bar-chart.component';\r\nimport {MaterialPalette} from 'app/services/palette';\r\nimport {ChartEntityManager} from '../../models/chart-entity.model';\r\n\r\nimport {map} from 'rxjs/operators';\r\n\r\ntype State = 'anim'|'error'|'loading'|'ready';\r\n\r\n@Component({\r\n  selector:'app-taxon-view',\r\n  providers:[ApiTaxonService,ApiWewService,ChartEntityManager],\r\n  templateUrl:'./taxon-view.component.html',\r\n  styleUrls:['./taxon-view.component.css'],\r\n  animations:[\r\n    trigger('mainCardAnim',[\r\n      state('void',style({opacity:0})),\r\n      transition(':enter',[animate('300ms 150ms',style({opacity:1}))]),\r\n      transition(':leave',[animate('150ms', style({opacity:0}))])\r\n    ])\r\n  ]\r\n})\r\nexport class TaxonViewComponent implements OnInit{\r\n  //The state of the import process\r\n  state:State = 'loading';\r\n  //NextState is used to go to the correct state after an animated transition\r\n  private nextState:State;\r\n  //Any errors that happen during the process\r\n  errors:any[] = [];\r\n\r\n  //The taxon being viewed\r\n  root:Taxon;\r\n  //The group of the root taxon\r\n  rootGroup:TaxonGroup;\r\n  //List of taxa on the page\r\n  taxonIds:Taxon[];\r\n  //List of all taxon groups\r\n  groups:TaxonGroup[];\r\n  //List of all taxon levels\r\n  levels:TaxonLevel[];\r\n  //Config for the chart\r\n  wewConfig:WewChartConfig;\r\n  //Promise that resolves with a list of all groups\r\n  private groupsPr:Promise<TaxonGroup[]>;\r\n\r\n  constructor(\r\n    private taxonApi:ApiTaxonService,\r\n    private wewApi:ApiWewService,\r\n    private chartEntityManager:ChartEntityManager,\r\n    private route:ActivatedRoute\r\n  ){\r\n    this.groupsPr = taxonApi.getGroups().toPromise();\r\n    this.groupsPr.then(groups => this.groups = groups);\r\n    taxonApi.getLevels().subscribe(levels => this.levels = levels);\r\n  }\r\n\r\n  ngOnInit(){\r\n    this.route.params.pipe(map(params => parseInt(params.id))).subscribe(id => {\r\n      let familyPr:Promise<Taxon[]> = this.taxonApi.getFamily(id).toPromise();\r\n\r\n      familyPr.then(taxonIds => {\r\n        this.taxonIds = taxonIds;\r\n        //The taxon this page is about\r\n        this.root = taxonIds.filter(taxon => taxon.id==id)[0];\r\n\r\n        //Find what group the root taxon is in\r\n        this.groupsPr.then(groups => {\r\n          groups.forEach(group => {\r\n            if(group.id===this.root.groupId)\r\n              this.rootGroup = group;\r\n          });\r\n        });\r\n\r\n        //The config for the wew chart\r\n        this.wewConfig = {\r\n          entities:[this.chartEntityManager.createFromTaxon(this.root,new MaterialPalette().shift())]\r\n        };\r\n\r\n        this.setState('ready');\r\n      });\r\n    });\r\n  }\r\n\r\n  //Set the state of the importing process\r\n  private setState(state:State){\r\n    this.state = 'anim';\r\n    this.nextState = state;\r\n  }\r\n\r\n  //Go to the next state when the :leave animation finishes\r\n  public mainCardAnimDone($event){\r\n    if($event.toState==='void'){\r\n      this.state = this.nextState;\r\n    }\r\n  }\r\n\r\n  //ToDo: improve error handling\r\n  //Right now we just print the array as json on the page\r\n  private handleError(...error){\r\n    this.setState('error');\r\n    this.errors.push(error);\r\n  }\r\n}\r\n","module.exports = \"<mat-card>\\r\\n  <mat-card-title>\\r\\n    Maak een nieuwe gebruiker aan\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"complexForm\\\" (ngSubmit)=\\\"submitForm(complexForm.value)\\\">\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"name\\\" [formControl]=\\\"complexForm.controls['name']\\\" placeholder=\\\"Naam\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div *ngIf=\\\"complexForm.controls['name'].hasError('required') && complexForm.controls['name'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Vul een naam in.\\r\\n      </div>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"email\\\" placeholder=\\\"E-mail\\\" [formControl]=\\\"complexForm.controls['email']\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div *ngIf=\\\"complexForm.controls['email'].hasError('required') && complexForm.controls['email'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Vul een email adres in.\\r\\n      </div>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"password\\\" placeholder=\\\"Wachtwoord\\\" type=\\\"password\\\"\\r\\n               [formControl]=\\\"complexForm.controls['password']\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div *ngIf=\\\"complexForm.controls['password'].hasError('required') && complexForm.controls['password'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Vul een wachtwoord in.\\r\\n      </div>\\r\\n\\r\\n      <br><br><div>Rol *</div>\\r\\n      <p>\\r\\n        <mat-select name=\\\"group_id\\\" [formControl]=\\\"complexForm.controls['group_id']\\\" placeholder=\\\"Kies een rol...\\\">\\r\\n          <mat-option *ngFor=\\\"let rol of rollen\\\" [value]=\\\"rol.value\\\">\\r\\n            {{ rol.viewValue }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </p>\\r\\n      <div *ngIf=\\\"complexForm.controls['group_id'].hasError('required') && complexForm.controls['group_id'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Selecteer een rol.\\r\\n      </div><br>\\r\\n\\r\\n\\r\\n      <div>Waterschap *</div>\\r\\n      <p>\\r\\n        <mat-select name=\\\"waterschap_id\\\" [formControl]=\\\"complexForm.controls['waterschap_id']\\\"\\r\\n                   placeholder=\\\"Kies een waterschap...\\\">\\r\\n          <mat-option *ngFor=\\\"let waterschap of waterschappen\\\" [value]=\\\"waterschap.id\\\">\\r\\n            {{ waterschap.name }}\\r\\n          </mat-option>\\r\\n          <mat-option [value]=\\\"isNull\\\">\\r\\n            Maak een nieuw waterschap aan...\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </p><br>\\r\\n      <p>\\r\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!complexForm.valid\\\">Opslaan</button>\\r\\n      </p>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card *ngIf=\\\"complexForm.value.waterschap_id == undefined && complexForm.controls['waterschap_id'].touched\\\">\\r\\n  <mat-card-title>\\r\\n    Maak een nieuw waterschap aan\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"waterschapForm\\\" (ngSubmit)=\\\"submitWaterschapForm(waterschapForm.value)\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"name\\\" [formControl]=\\\"waterschapForm.controls['name']\\\"\\r\\n               placeholder=\\\"Waterschap naam\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"address\\\" [formControl]=\\\"waterschapForm.controls['address']\\\"\\r\\n               placeholder=\\\"Waterschap adres\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"houseNumber\\\" [formControl]=\\\"waterschapForm.controls['houseNumber']\\\"\\r\\n               placeholder=\\\"Waterschap huisnummer\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"zipCode\\\" [formControl]=\\\"waterschapForm.controls['zipCode']\\\"\\r\\n               placeholder=\\\"Waterschap postcode\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"location\\\" [formControl]=\\\"waterschapForm.controls['location']\\\"\\r\\n               placeholder=\\\"Waterschap locatie\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"phoneNumber\\\" [formControl]=\\\"waterschapForm.controls['phoneNumber']\\\"\\r\\n               placeholder=\\\"Waterschap telefoonnummer\\\">\\r\\n      </mat-form-field>\\r\\n      <p>\\r\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!waterschapForm.valid\\\">Opslaan</button>\\r\\n      </p>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-title>Wachtwoord resetten</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"resetPassword(passwordForm.value)\\\">\\r\\n    <mat-form-field class=\\\"full-width\\\">\\r\\n      <input matInput name=\\\"Email\\\" [formControl]=\\\"passwordForm.controls['email']\\\" placeholder=\\\"Email van gebruiker\\\">\\r\\n    </mat-form-field>\\r\\n      <p>\\r\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!passwordForm.valid\\\">Reset</button>\\r\\n      </p>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ApiUserService} from '../../services/api.user.service';\r\nimport {User}\tfrom '../../models/user.model';\r\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport {ApiWaterschapService} from \"../../services/api.waterschap.service\";\r\nimport {Waterschap} from \"../../models/waterschap.model\";\r\nimport swal from 'sweetalert2';\r\n\r\n\r\n@Component({\r\n  providers: [ApiUserService, ApiWaterschapService],\r\n  selector: 'create-account-form',\r\n  templateUrl: './create-account.component.html'\r\n})\r\nexport class CreateAccountComponent implements OnInit {\r\n  private route: ActivatedRoute;\r\n  private apiUser: ApiUserService;\r\n  private apiWaterschap: ApiWaterschapService;\r\n  public user: User;\r\n  public complexForm: FormGroup;\r\n  public waterschapForm: FormGroup;\r\n  public passwordForm: FormGroup;\r\n  public waterschappen: Waterschap[];\r\n  public isNull = null;\r\n\r\n  constructor(apiUser: ApiUserService, route: ActivatedRoute, apiWaterschap: ApiWaterschapService,\r\n              fb: FormBuilder) {\r\n    this.apiUser = apiUser;\r\n    this.apiWaterschap = apiWaterschap;\r\n    this.route = route;\r\n    this.complexForm = fb.group({\r\n      'name': [null, Validators.required],\r\n      'email': [null, Validators.required],\r\n      'password': [null, Validators.required],\r\n      'group_id': [1, Validators.required],\r\n      'waterschap_id': [null, Validators.required]\r\n    });\r\n    this.waterschapForm = fb.group({\r\n      'name': [null, Validators.required],\r\n      'address': [],\r\n      'houseNumber': [],\r\n      'zipCode': [],\r\n      'location': [],\r\n      'phoneNumber': [],\r\n    });\r\n\r\n    this.passwordForm = fb.group({\r\n      'email': [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.retrieveWaterschappen(false);\r\n  }\r\n\r\n  submitForm(value: any) {\r\n    this.apiUser.createUser(User.fromJSON(value)).subscribe(data => {\r\n      swal('', `Gebruiker ${data.name} aangemaakt!`, 'success');\r\n      this.resetForm();\r\n    }, error => swal('Oops...', error.detailMessage, 'error'));\r\n  }\r\n\r\n  resetForm() {\r\n    this.complexForm.reset();\r\n    this.complexForm.clearValidators();\r\n  }\r\n\r\n  rollen = [\r\n    {value: 1, viewValue: 'Gebruiker'},\r\n    {value: 2, viewValue: 'Administrator'},\r\n    {value: 3, viewValue: 'Waterschap'}\r\n  ];\r\n\r\n  submitWaterschapForm(value: any) {\r\n    console.log(Waterschap.fromJSON(value));\r\n    this.apiWaterschap.save(Waterschap.fromJSON(value)).subscribe(data => {\r\n      swal('', `Waterschap ${data.name} aangemaakt!`, 'success');\r\n      this.resetWaterschapForm();\r\n    }, error => swal('Oops...', error.detailMessage, 'error'));\r\n  }\r\n\r\n  retrieveWaterschappen(selectLast: boolean) {\r\n    this.apiWaterschap.getAll().subscribe(waterschappen => {\r\n      this.waterschappen = waterschappen;\r\n      if (selectLast)\r\n        this.complexForm.patchValue({'waterschap_id': this.waterschappen[this.waterschappen.length - 1].id});\r\n    }), error => swal('Oops...', error.detailMessage, 'error');\r\n  }\r\n\r\n  resetWaterschapForm() {\r\n    this.waterschapForm.reset();\r\n    this.retrieveWaterschappen(true);\r\n  }\r\n\r\n  resetPassword(user: String) {\r\n    console.log(user);\r\n    this.apiUser.resetPassword(user).subscribe(res =>\r\n      swal('',  'Wachtwoord is veranderd naar: ' +res['pin'], 'success')\r\n      ), error => swal('Oops...', error.detailMessage, 'error');\r\n    this.passwordForm.reset();\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".editPasswordForm {\\r\\n  width: 50%;\\r\\n}\\r\\n.editPasswordField {\\r\\n  width: 49.75%;\\r\\n}\\r\\n\"","module.exports = \"<mat-card *ngIf=\\\"currentUser\\\">\\r\\n  <mat-card-title>\\r\\n    <span class=\\\"mat-headline\\\">Accountgegevens</span>\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"complexForm\\\" (ngSubmit)=\\\"editAccount(complexForm.value)\\\">\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"name\\\" [formControl]=\\\"complexForm.controls['name']\\\" placeholder=\\\"Naam\\\"\\r\\n               [(ngModel)]=\\\"currentUser.name\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div *ngIf=\\\"complexForm.controls['name'].hasError('required') && complexForm.controls['name'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Vul een gebruikersnaam in.\\r\\n      </div>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"email\\\" placeholder=\\\"E-mail\\\" [(ngModel)]=\\\"currentUser.email\\\"\\r\\n               [formControl]=\\\"complexForm.controls['email']\\\" required>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <div *ngIf=\\\"complexForm.controls['email'].hasError('required') && complexForm.controls['email'].touched\\\"\\r\\n           class=\\\"alert alert-danger\\\">Vul een email adres in.\\r\\n      </div>\\r\\n\\r\\n      <p>\\r\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!complexForm.valid\\\">Aanpassen</button>\\r\\n      </p>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <mat-card-title>\\r\\n    <span class=\\\"mat-headline\\\">Wachtwoord aanpassen</span>\\r\\n  </mat-card-title>\\r\\n  <form (ngSubmit)=\\\"editPassword()\\\">\\r\\n    <mat-card-content>\\r\\n      <div class=\\\"editPasswordForm\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <input matInput type=\\\"password\\\" placeholder=\\\"Oud Wachtwoord\\\" name=\\\"oldPassword\\\"\\r\\n                 [(ngModel)]=\\\"model.oldPassword\\\" required>\\r\\n        </mat-form-field>\\r\\n        <section layout=\\\"row\\\">\\r\\n          <mat-form-field class=\\\"editPasswordField\\\">\\r\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Nieuw Wachtwoord\\\" name=\\\"newPassword\\\"\\r\\n                   [(ngModel)]=\\\"model.newPassword\\\" required>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field class=\\\"editPasswordField\\\">\\r\\n            <input matInput type=\\\"password\\\" placeholder=\\\"Bevestig Nieuw Wachtwoord\\\" name=\\\"confirmPassword\\\"\\r\\n                   [(ngModel)]=\\\"model.confirmPassword\\\" required>\\r\\n          </mat-form-field>\\r\\n        </section>\\r\\n        <button type=\\\"submit\\\" mat-raised-button>Aanpassen</button>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\\r\\n<mat-card *ngIf=\\\"waterschap\\\">\\r\\n  <mat-card-title>\\r\\n    Waterschap gegevens\\r\\n  </mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"waterschapForm\\\" (ngSubmit)=\\\"submitWaterschapForm(waterschapForm.value)\\\">\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"name\\\" [(ngModel)]=\\\"waterschap.name\\\" [formControl]=\\\"waterschapForm.controls['name']\\\"\\r\\n               placeholder=\\\"Waterschap naam\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"address\\\" [(ngModel)]=\\\"waterschap.address\\\"\\r\\n               [formControl]=\\\"waterschapForm.controls['address']\\\" placeholder=\\\"Waterschap adres\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"houseNumber\\\" [(ngModel)]=\\\"waterschap.houseNumber\\\"\\r\\n               [formControl]=\\\"waterschapForm.controls['houseNumber']\\\" placeholder=\\\"Waterschap huisnummer\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"zipCode\\\" [(ngModel)]=\\\"waterschap.zipCode\\\"\\r\\n               [formControl]=\\\"waterschapForm.controls['zipCode']\\\" placeholder=\\\"Waterschap postcode\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"location\\\" [(ngModel)]=\\\"waterschap.location\\\"\\r\\n               [formControl]=\\\"waterschapForm.controls['location']\\\" placeholder=\\\"Waterschap locatie\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field class=\\\"full-width\\\">\\r\\n        <input matInput name=\\\"phoneNumber\\\" [(ngModel)]=\\\"waterschap.phoneNumber\\\"\\r\\n               [formControl]=\\\"waterschapForm.controls['phoneNumber']\\\" placeholder=\\\"Waterschap telefoonnummer\\\">\\r\\n      </mat-form-field>\\r\\n      <p>\\r\\n        <button mat-raised-button type=\\\"submit\\\" [disabled]=\\\"!waterschapForm.valid\\\">Aanpassen</button>\\r\\n      </p>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {ApiUserService} from 'app/services/api.user.service';\r\nimport swal from 'sweetalert2';\r\nimport {FormGroup, FormBuilder, Validators} from \"@angular/forms\";\r\nimport {User} from \"app/models/user.model\";\r\nimport {ApiWaterschapService} from \"../../services/api.waterschap.service\";\r\nimport {Waterschap} from \"../../models/waterschap.model\";\r\n\r\n@Component({\r\n  providers: [ApiUserService, ApiWaterschapService],\r\n  selector: 'app-edit-account',\r\n  templateUrl: './edit-account.component.html',\r\n  styleUrls: ['./edit-account.component.css']\r\n})\r\nexport class EditAccountComponent implements OnInit {\r\n  private route: ActivatedRoute;\r\n  private userService: ApiUserService;\r\n  private apiWaterschap: ApiWaterschapService;\r\n  public user: User;\r\n  public complexForm: FormGroup;\r\n  public waterschapForm: FormGroup;\r\n\r\n  public model: any = {};\r\n  public currentUser: User;\r\n  public waterschap: Waterschap;\r\n\r\n  constructor(userService: ApiUserService, fb: FormBuilder, apiWaterschap: ApiWaterschapService, route: ActivatedRoute) {\r\n    this.userService = userService;\r\n    this.apiWaterschap = apiWaterschap;\r\n    this.complexForm = fb.group({\r\n      'name': [null, Validators.required],\r\n      'email': [null, Validators.required]\r\n    });\r\n    this.waterschapForm = fb.group({\r\n      'name': [null, Validators.required],\r\n      'address': [null],\r\n      'houseNumber': [null],\r\n      'zipCode': [null],\r\n      'location': [null],\r\n      'phoneNumber': [null],\r\n    });\r\n    this.route = route;\r\n  }\r\n\r\n  resetForm() {\r\n    this.complexForm.reset();\r\n    this.complexForm.clearValidators();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.getCurrentUser().subscribe(user => {\r\n      this.currentUser = user;\r\n      if (user.waterschap_id != undefined)\r\n        this.retrieveWaterschap(user.waterschap_id);\r\n    }, error => console.log(error));\r\n  }\r\n\r\n  editPassword() {\r\n    this.userService.editPassword(this.model.oldPassword, this.model.newPassword, this.model.confirmPassword).subscribe(() => {\r\n      swal('', `Wachtwoord aangepast!`, 'success');\r\n    }, error => swal('Oops...', error.detailMessage, 'error'));\r\n  }\r\n\r\n  editAccount() {\r\n    this.userService.editUser(User.fromJSON(this.currentUser)).subscribe(data => {\r\n      swal('', `Gebruiker ${data.name} aangepast!`, 'success');\r\n      // this.resetForm();\r\n      // Ik zou geen resetform doen aangezien hij hem dan terug zet naar lege waardes in plaats van nieuwe waardes\r\n    }, error => swal('Oops...', error.detailMessage, 'error'));\r\n  }\r\n\r\n  submitWaterschapForm() {\r\n    this.apiWaterschap.save(Waterschap.fromJSON(this.waterschap)).subscribe(data => {\r\n      swal('', `Waterschap ${data.name} gewijzigd!`, 'success');\r\n    }, error => swal('Oops...', error.detailMessage, 'error'));\r\n  }\r\n\r\n  retrieveWaterschap(id) {\r\n    this.apiWaterschap.getById(id).subscribe(waterschap => {\r\n      this.waterschap = waterschap;\r\n    }), error => swal('Oops...', error.detailMessage, 'error');\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card *ngIf=\\\"currentLocation\\\">\\r\\n  <mat-card-title>Monsters van {{currentLocation.description}}</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <ngx-datatable\\r\\n      class=\\\"material\\\"\\r\\n      [rows]=\\\"sampleRows\\\"\\r\\n      [columns]=\\\"sampleColumns\\\"\\r\\n      [columnMode]=\\\"'force'\\\"\\r\\n      [headerHeight]=\\\"50\\\"\\r\\n      [footerHeight]=\\\"50\\\"\\r\\n      [rowHeight]=\\\"'auto'\\\"\\r\\n      [limit]=\\\"10\\\">\\r\\n    </ngx-datatable>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n<ng-template #sampleDateTemplate let-row=\\\"row\\\">\\r\\n  {{row.date | date:'fullDate'}}\\r\\n</ng-template>\\r\\n<ng-template #sampleQualityTemplate let-row=\\\"row\\\">\\r\\n  {{row.quality==null?'?':row.quality.toFixed(2)}}\\r\\n</ng-template>\\r\\n<ng-template #sampleDetailsTemplate let-row=\\\"row\\\">\\r\\n  <button [routerLink]=\\\"'/sample/view/'+row.id\\\" mat-raised-button>Details</button>\\r\\n</ng-template>\\r\\n\\r\\n\\r\\n<mat-tab-group>\\r\\n  <mat-tab *ngFor=\\\"let entry of settings\\\"\\r\\n           [label]=\\\"entry.factors.name\\\">\\r\\n    <div class=\\\"factor-group\\\">\\r\\n      <app-new-sample-compare [settings]=\\\"entry\\\"></app-new-sample-compare>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n</mat-tab-group>\\r\\n\\r\\n<mat-card>\\r\\n  <mat-card-title>Afwijking van referentie</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <div *ngIf=\\\"qualityChartOptions\\\" echarts (chartInit)=\\\"onQualityChartInit($event)\\\"\\r\\n         [options]=\\\"qualityChartOptions\\\" style=\\\"width:1000px;height:350px;\\\"></div>\\r\\n    <mat-spinner *ngIf=\\\"!qualityChartOptions\\\"></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!--<mat-card *ngIf=\\\"currentLocation\\\">-->\\r\\n  <!--<mat-card-title>Waterkwaliteit van {{currentLocation.description}}</mat-card-title>-->\\r\\n  <!--<mat-tab-group *ngIf=\\\"currentLocation && wewConfigs\\\">-->\\r\\n    <!--<mat-tab *ngFor=\\\"let config of wewConfigs\\\" [label]=\\\"config.factors[0].name\\\">-->\\r\\n      <!--<app-wew-bar-chart [config]=\\\"config\\\"></app-wew-bar-chart>-->\\r\\n    <!--</mat-tab>-->\\r\\n  <!--</mat-tab-group>-->\\r\\n<!--</mat-card>-->\\r\\n\\r\\n\\r\\n<!--<mat-card *ngIf=\\\"markerPos\\\">-->\\r\\n  <!--<mat-card-content>-->\\r\\n    <!--&lt;!&ndash;<ngui-map [options]=\\\"mapConfig\\\">-->\\r\\n      <!--<marker [position]=\\\"markerPos\\\">-->\\r\\n      <!--</marker>-->\\r\\n    <!--</ngui-map>&ndash;&gt;-->\\r\\n  <!--</mat-card-content>-->\\r\\n<!--</mat-card>-->\\r\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute} from '@angular/router';\r\nimport {DatatableComponent} from \"@swimlane/ngx-datatable\";\r\nimport {ApiLocationService} from '../services/api.location.service';\r\nimport {WEWFactor} from '../models/wew.model';\r\nimport {ApiWewService} from '../services/api.wew.service';\r\nimport {WewChartConfig} from '../wew/wew-bar-chart/wew-bar-chart.component';\r\nimport {MaterialPalette} from '../services/palette';\r\nimport {ChartEntityManager} from '../models/chart-entity.model';\r\nimport {ApiSampleService} from '../services/api.sample.service';\r\nimport {ApiReferenceService} from '../services/api.reference.service';\r\nimport {MarkerLocation} from '../models/markerLocation.model';\r\nimport {Reference} from '../models/reference.model';\r\nimport {Sample} from \"../models/sample.model\";\r\nimport {GlobalReferenceService} from \"../services/global.reference.service\";\r\n\r\n@Component({\r\n  selector:'app-water',\r\n  providers: [ApiSampleService, ApiLocationService, ApiWewService, ApiReferenceService, ChartEntityManager],\r\n  templateUrl:'./water.component.html',\r\n  styleUrls:['./water.component.css']\r\n})\r\n\r\nexport class WaterComponent implements OnInit{\r\n  public currentLocation:MarkerLocation;\r\n  private samples:Sample[];\r\n  private factors:WEWFactor[];\r\n  private reference:Reference;\r\n\r\n  @ViewChild(DatatableComponent) table: DatatableComponent;\r\n  @ViewChild('sampleDateTemplate') sampleDateTemplate;\r\n  @ViewChild('sampleDetailsTemplate') sampleDetailsTemplate;\r\n  @ViewChild('sampleQualityTemplate') sampleQualityTemplate;\r\n\r\n  sampleRows = [];\r\n  sampleColumns = [\r\n    {name: 'Datum', prop: 'date', cellTemplate:null}, // Moet alleen nog ff formatten naar dag / maand / jaar\r\n    {name: 'Kwaliteit', prop: 'quality', cellTemplate:null},\r\n    {name: 'details', prop: 'button', cellTemplate:null}\r\n  ];\r\n  public markerPos;\r\n  public settings:any[] = [];\r\n  public wewConfigs:WewChartConfig[];\r\n\r\n  private qualityEchart;\r\n  public qualityChartOptions = {\r\n    title:{text:'Verschil tussen monsters en referentie',subtext:'Lager is beter'},\r\n    tooltip:{\r\n      trigger:'axis',\r\n      axisPointer:{type:'shadow'},\r\n      backgroundColor:'rgba(0,0,0,0.9)',\r\n      formatter:params=>{\r\n        if(!params[0] || !params[0].data || !params[0].data[0] || !params[0].data[1])\r\n          return;\r\n        let date = params[0].data[0].toLocaleString('nl-NL',{day:'numeric',month:'short',year:'numeric'});\r\n        let value = params[0].data[1].toFixed(2);\r\n        return date+': '+value;\r\n      }\r\n    },\r\n    grid:{left:'3%',right:'4%',bottom:'4%',containLabel:true},\r\n    xAxis:{type:'time',data:[],axisLabel:{formatter:val=>new Date(val).toLocaleString('nl-NL',{day:'numeric',month:'short',year:'numeric'})}},\r\n    yAxis:{type:'value',boundaryGap:[0, 0.01],min:0},\r\n    series:{},\r\n    toolbox:{right:50,feature:{saveAsImage:{title:'Download grafiek'}}}\r\n  };\r\n\r\n  constructor(\r\n    private apiSample:ApiSampleService,\r\n    private apiLocation:ApiLocationService,\r\n    private apiWew:ApiWewService,\r\n    private apiReference:ApiReferenceService,\r\n    private chartEntityManager:ChartEntityManager,\r\n    private route:ActivatedRoute,\r\n    private globalRef: GlobalReferenceService\r\n  ){}\r\n\r\n  ngOnInit(){\r\n    this.loadResources();\r\n  }\r\n\r\n  ngAfterViewInit(){\r\n    this.sampleColumns[0].cellTemplate = this.sampleDateTemplate;\r\n    this.sampleColumns[1].cellTemplate = this.sampleQualityTemplate;\r\n    this.sampleColumns[2].cellTemplate = this.sampleDetailsTemplate;\r\n  }\r\n\r\n  onQualityChartInit(echart){\r\n    this.qualityEchart = echart;\r\n  }\r\n\r\n  private async loadResources(){\r\n    let locationId = await this.getLocationId();\r\n\r\n    let locationPr = this.loadLocation(locationId);\r\n    let samplesPr = this.loadSamples(locationId);\r\n    let factorsPr = this.loadFactors();\r\n\r\n    let referencePr = locationPr.then(() => this.loadReference());\r\n\r\n    Promise.all([samplesPr,factorsPr,referencePr]).then(() => {\r\n\r\n      this.loadMap();\r\n      this.loadQualityChart();\r\n      this.loadWewCharts();\r\n      this.loadGlobalChart();\r\n    });\r\n  }\r\n\r\n  private async getLocationId():Promise<number>{\r\n    let params = this.route.snapshot.paramMap;\r\n    let id = parseInt(params.get('id'));\r\n    return id;\r\n  }\r\n\r\n  private async loadLocation(id:number){\r\n    this.currentLocation = await this.apiLocation.getById(id).toPromise();;\r\n  }\r\n\r\n  private async loadSamples(locationId:number){\r\n    this.samples = await this.apiSample.getByLocationId(locationId).toPromise();\r\n    this.samples.sort((a,b) => a.date.valueOf()-b.date.valueOf());\r\n    this.sampleRows = this.samples;\r\n  }\r\n\r\n  private async loadFactors(){\r\n    this.factors = await this.apiWew.getFactors().toPromise();\r\n  }\r\n\r\n  private async loadReference(){\r\n    let watertype = this.currentLocation.watertypeKrwId;\r\n    try{\r\n      this.reference = await this.apiReference.getByWatertype(watertype).toPromise();\r\n    }\r\n    catch(err){\r\n      this.reference = null;\r\n    }\r\n  }\r\n\r\n  private loadQualityChart(){\r\n    let samples = this.samples.filter(sample => sample.quality !== null);\r\n    this.qualityChartOptions.series = {\r\n      type:'line',\r\n      data:samples.map(sample => [sample.date,sample.quality])\r\n    };\r\n    this.qualityChartOptions.xAxis.data = samples.map(sample => sample.date);\r\n    this.qualityEchart.setOption(this.qualityChartOptions,true);\r\n  }\r\n\r\n  private loadGlobalChart(){\r\n    let pos = 0;\r\n    this.factors.forEach(factor=>{\r\n      this.settings.push({pos: pos, factors: factor});\r\n      pos++;\r\n    });\r\n    this.globalRef.setReferenceByKrwId(this.currentLocation.watertypeKrwId);\r\n    let ids:number[]  = []\r\n    this.samples.forEach(sample=>{\r\n      ids.push(sample.id)\r\n    });\r\n    this.globalRef.addSamples(ids);\r\n\r\n  }\r\n\r\n\r\n  private loadWewCharts(){\r\n    if(!this.reference)\r\n      return;\r\n    let chartReference = this.chartEntityManager.createFromReference(this.reference,'Referentie',new MaterialPalette().shift());\r\n    let chartSamples = this.samples.map(sample => {\r\n      let name = sample.date.toLocaleString('nl-NL',{month:'short',year:'numeric'});\r\n      return this.chartEntityManager.createFromSample(sample,name,new MaterialPalette().shift());\r\n    });\r\n\r\n    this.wewConfigs = this.factors.map(factor => {\r\n      let config:WewChartConfig = {\r\n        entities:[chartReference,...chartSamples],\r\n        factors:[factor],\r\n        xAxis:'entity',\r\n        width:(chartSamples.length+1)*90,\r\n        height:350,\r\n      };\r\n      return config;\r\n    });\r\n  }\r\n\r\n  private loadMap(){\r\n    this.mapConfig.center = {\r\n      lat: this.currentLocation.latitude,\r\n      lng: this.currentLocation.longitude\r\n    };\r\n    this.markerPos = {\r\n      lat: this.currentLocation.latitude,\r\n      lng: this.currentLocation.longitude\r\n    }\r\n  }\r\n\r\n  public mapStyle = [\r\n    {elementType: 'labels', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'administrative.country', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'administrative.country',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality', elementType: 'labels',\r\n      stylers: [{visibility: 'simplified'}]\r\n    },\r\n    {\r\n      featureType: 'administrative.locality',\r\n      elementType: 'labels.text.fill',\r\n      stylers: [{color: '#606060'}]\r\n    },\r\n    {featureType: 'road', stylers: [{visibility: 'off'}]},\r\n    {featureType: 'water', stylers: [{visibility: 'on'}]},\r\n    {\r\n      featureType: 'water', elementType: 'geometry.fill',\r\n      stylers: [{color: '#0d9ac7'}, {visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels',\r\n      stylers: [{visibility: 'on'}]\r\n    },\r\n    {\r\n      featureType: 'water', elementType: 'labels.text.fill',\r\n      stylers: [{color: '#000000'}, {visibility: 'on'}]\r\n    }];\r\n\r\n  public mapConfig = {\r\n    styles: this.mapStyle,\r\n    mapTypeId: \"satellite\",\r\n    center: {},\r\n    zoom: 18,\r\n    disableDefaultUI: false,\r\n    clickableIcons: true,\r\n  };\r\n}\r\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!hasData\\\">Geen gegevens beschikbaar</div>\\r\\n<div *ngIf=\\\"hasData\\\" echarts [options]=\\\"chartOptions\\\" (chartInit)=\\\"onChartInit($event)\\\"\\r\\n     [ngStyle]=\\\"{'width.px':width,'height.px':height}\\\"></div>\\r\\n\"","import {Component,OnInit,Input,Output,EventEmitter} from '@angular/core';\r\n\r\nimport {WEWFactor,WEWFactorClass,SimpleWEWValue} from '../../models/wew.model';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\n\r\nimport {ChartEntity} from '../../models/chart-entity.model';\r\nimport {pad2D, uniqueFilter} from \"../../services/arrayUtils\";\r\n\r\n//Send out with <app-wew-bar-chart (init)=\"func(WewChartPublicInstance)\"></app-wew-bar-chart>\r\nexport type WewChartPublicInstance = {\r\n  reload(config?:WewChartConfig),\r\n  resize(width:number,height:number)\r\n};\r\n\r\n//The options given as input\r\nexport type WewXAxisConfig = 'entity'|'factor';\r\nexport type WewChartConfig = {\r\n  entities:ChartEntity[],\r\n  factors?:WEWFactor[],\r\n  barGap?:string,\r\n  barCategoryGap?:string,\r\n  xAxis?:WewXAxisConfig,\r\n  width?:number,\r\n  height?:number\r\n};\r\n\r\n//Value to put in the charts series.data list\r\ntype DataValue = {factorId:number,factorClassId:number,value:number,itemStyle?:any,entityId:string};\r\n\r\n\r\n@Component({\r\n  selector:'app-wew-bar-chart',\r\n  providers:[ApiWewService],\r\n  templateUrl:'./wew-bar-chart.component.html',\r\n  styleUrls:['./wew-bar-chart.component.css']\r\n})\r\nexport class WewBarChartComponent implements OnInit {\r\n  //The samples this chart will show data of\r\n  @Input() config:WewChartConfig;\r\n  @Output() init = new EventEmitter();\r\n\r\n  //Size of the chart in pixels\r\n  public width:number;\r\n  public height:number;\r\n\r\n  //Promise that resolves with EChart instance\r\n  private echartPr:Promise<any>;\r\n  private echartResolve;\r\n  //DOM of the echart, used to position the tooltip\r\n  private echartDom = null;\r\n\r\n  //Promise that resoles when all required data is loaded\r\n  private allDataPr:Promise<[WEWFactor[],Map<ChartEntity,SimpleWEWValue[]>]>;\r\n  //Whether or not there is any data to be shown\r\n  public hasData:boolean = true;\r\n\r\n  /* Maps and arrays for quick lookup and looping */\r\n  private entities:ChartEntity[];\r\n  private entityCalcs:Map<ChartEntity,SimpleWEWValue[]>;\r\n  private entityIdMap:Map<string/*ChartEntity.id*/,ChartEntity>;\r\n\r\n  private factors:WEWFactor[];\r\n  private factorClasses:WEWFactorClass[];\r\n  private factorIdMap:Map<number/*factor id*/,WEWFactor>;\r\n  private factorClassIdMap:Map<number/*factor class id*/,WEWFactorClass>;\r\n\r\n  private dataMap:Map<string/*ChartEntity.id+WEWFactorClass.code*/,DataValue>;\r\n\r\n  //EChart options\r\n  public chartOptions = {\r\n    title:{text:'',subtext:''},\r\n    tooltip:{\r\n      trigger:'axis',\r\n      axisPointer:{type:'shadow'},\r\n      backgroundColor:'rgba(0,0,0,0.9)',\r\n      formatter:(p)=>this.tooltipFormatter(p),\r\n      position:(point,params,dom,rect,size)=>this.tooltipPosition(point,params,dom,rect,size)\r\n\r\n    },\r\n    grid:{left:'3%',right:'4%',bottom:'15%',containLabel:true},\r\n    xAxis:{type:'category',data:[],axisLabel:{rotate:45}},\r\n    yAxis:{type:'value',boundaryGap:[0, 0.01],min:0,max:10},\r\n    series:[],\r\n    toolbox: {\r\n      right: 50,\r\n      feature: {\r\n        saveAsImage: {\r\n          title: \"Download grafiek\",\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(private wewApi:ApiWewService){}\r\n\r\n  //@Input()s are available\r\n  ngOnInit(){\r\n    //Set missing config properties to default\r\n    let defaultConfig:WewChartConfig = {\r\n      entities:[],\r\n      factors:[],\r\n      barGap:'15%',\r\n      barCategoryGap:'35%',\r\n      xAxis:'factor',\r\n      width:1000,\r\n      height:300\r\n    };\r\n    this.config = Object.assign(defaultConfig,this.config);\r\n\r\n    this.width = this.config.width;\r\n    this.height = this.config.height;\r\n\r\n    //Make sure we got echart when we need it\r\n    this.echartPr = new Promise((resolve,reject) => this.echartResolve = resolve);\r\n\r\n    //Remove nulls from entity list\r\n    this.entities = this.config.entities.filter(entity => entity != null);\r\n\r\n    //Show the charts title\r\n    this.showTitle();\r\n\r\n    //Retrieve all factors if none are given as input\r\n    let factorsPr:Promise<WEWFactor[]>;\r\n    if(this.config.factors&&this.config.factors.length)\r\n      factorsPr = Promise.resolve(this.config.factors);\r\n    else\r\n      factorsPr = this.wewApi.getFactors().toPromise();\r\n\r\n    //Load calculations\r\n    let calcsPr = this.loadCalculations();\r\n\r\n    //Is all data we need loaded?\r\n    this.allDataPr = Promise.all([factorsPr,calcsPr]);\r\n\r\n    //Fill Maps\r\n    this.allDataPr.then(([factors,calcs]) => this.storeCollections(factors,calcs));\r\n\r\n    //Should we even show anything?\r\n    this.allDataPr.then(() => {\r\n      let calcCount = Array.from(this.entityCalcs.values())\r\n        .reduce((a,b) => [...a,...b],[])\r\n        .filter((val:SimpleWEWValue) => val&&val.value)\r\n        .length;\r\n\r\n      this.hasData = calcCount>0;\r\n    });\r\n\r\n    //Then show the chart\r\n    this.allDataPr.then(() => this.showData());\r\n\r\n    //Let the parent know we're done\r\n    this.allDataPr.then(() => this.init.emit(this.getPublicInstance()));\r\n  }\r\n\r\n  //Object that is outputted to the parent\r\n  private getPublicInstance():WewChartPublicInstance{\r\n    return {\r\n      reload:(config?:WewChartConfig)=>{\r\n        if(config)this.config = config;\r\n        this.ngOnInit();\r\n      },\r\n      resize:(width,height)=>{\r\n        this.width = width;\r\n        this.height = height;\r\n        this.echartPr.then(echart => echart.resize({width:this.width,height:this.height}));\r\n      }\r\n    };\r\n  }\r\n\r\n  //EChart instance is available\r\n  public onChartInit(echart){\r\n    echart.resize({width:this.width,height:this.height});\r\n    echart.showLoading();\r\n    this.echartResolve(echart);\r\n  }\r\n\r\n  //Sets the time based on how many factors we have\r\n  private showTitle(){\r\n    let title = 'Watereigenschappen';\r\n    let subtext = 'Aan de hand van de WEW-lijst';\r\n\r\n    let factors = this.config.factors;\r\n    if(factors.length===1){\r\n      title += ' - '+factors[0].name;\r\n    }\r\n\r\n    this.chartOptions.title.text = title;\r\n    this.chartOptions.title.subtext = subtext;\r\n  }\r\n\r\n  //Put data in arrays and maps for easy access\r\n  private storeCollections(factors:WEWFactor[],entityCalcs:Map<ChartEntity,SimpleWEWValue[]>):void{\r\n    this.entityCalcs = entityCalcs;\r\n    this.factors = factors;\r\n    this.factorClasses = factors.reduce((arr,f) => [...arr,...f.classes],[]);\r\n\r\n    //Map<number/*factor id*/,WEWFactor>\r\n    this.factorIdMap = new Map();\r\n    this.factors.forEach(f => this.factorIdMap.set(f.id,f));\r\n\r\n    //Map<number/*factor class id*/,WEWFactorClass>\r\n    this.factorClassIdMap = new Map();\r\n    this.factorClasses.forEach(fc => this.factorClassIdMap.set(fc.id,fc));\r\n\r\n    //Map<string/*ChartEntity.id*/,ChartEntity>\r\n    this.entityIdMap = new Map();\r\n    this.entities.forEach(entity => this.entityIdMap.set(entity.id,entity));\r\n\r\n    this.createDataMap();\r\n  }\r\n\r\n  //Creates all the DataValue objects\r\n  private createDataMap(){\r\n    //Map<string/*ChartEntity.id+WEWFactorClass.code*/,DataValue>\r\n    this.dataMap = new Map();\r\n\r\n    this.entityCalcs.forEach((calcs,entity) => {\r\n      let calcMap = new Map<number/*factor class id*/,number/*computed value*/>();\r\n      calcs.forEach(calc => calcMap.set(calc.factorClassId,calc.value));\r\n\r\n      this.factorClasses.forEach(factorClass => {\r\n        this.dataMap.set(entity.id+factorClass.code,{\r\n          factorId:factorClass.factorId,\r\n          factorClassId:factorClass.id,\r\n          value:calcMap.get(factorClass.id),\r\n          entityId:entity.id\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  //Loads the calculations of all entities\r\n  private async loadCalculations():Promise<Map<ChartEntity,SimpleWEWValue[]>>{\r\n    let calcMap:Map<ChartEntity,SimpleWEWValue[]> = new Map();\r\n\r\n    //Retrieve calculations for each entity\r\n    let promises = this.entities.map(entity =>\r\n      entity.getCalculations().then(calcs =>\r\n        calcMap.set(entity,calcs)));\r\n\r\n    return Promise.all(promises).then(() => calcMap);\r\n  }\r\n\r\n  //Make a 2D array with all the data (every row is a factor, every column a factor class)\r\n  private getDataWithFactorCategory(entity:ChartEntity):DataValue[][]{\r\n    let data = this.factors.map(factor => {\r\n      return factor.classes.map(factorClass => {\r\n        return this.dataMap.get(entity.id+factorClass.code);\r\n      });\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  //Make a 2D array with all the data (every row is an entity, every column a factor class)\r\n  private getDataWithEntityCategory(factor:WEWFactor):DataValue[][]{\r\n    let data = this.entities.map(entity => {\r\n      return factor.classes.map(factorClass => {\r\n        return this.dataMap.get(entity.id+factorClass.code);\r\n      });\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  //Stores any data we need to show in this.chartOptions\r\n  private showData(){\r\n    if(!this.hasData)\r\n      return;\r\n\r\n    //Clear any previous data\r\n    this.chartOptions.series = [];\r\n    this.chartOptions.xAxis.data = [];\r\n\r\n    //Add x-axis labels and data\r\n    if(this.config.xAxis==='entity'){\r\n      this.entities.forEach(entity => this.chartOptions.xAxis.data.push(entity.name));\r\n      this.factors.forEach(factor => this.addSeries(this.getDataWithEntityCategory(factor)));\r\n    }\r\n    else{\r\n      this.factors.forEach(factor => this.chartOptions.xAxis.data.push(factor.name));\r\n      this.entities.forEach(entity => this.addSeries(this.getDataWithFactorCategory(entity)));\r\n    }\r\n\r\n    //These options should be applied to the last item in the series only\r\n    let lastSeries = this.chartOptions.series[this.chartOptions.series.length-1];\r\n    lastSeries.barGap = this.config.barGap;\r\n    lastSeries.barCategoryGap = this.config.barCategoryGap;\r\n\r\n    //Show data\r\n    this.echartPr.then(echart => {\r\n      setTimeout(()=>{\r\n        echart.resize({width:this.width,height:this.height});\r\n        echart.setOption(this.chartOptions,true);\r\n        echart.hideLoading();\r\n      });\r\n    });\r\n  }\r\n\r\n  //Use the palettes to set the correct color in each data value\r\n  private setColors(data:DataValue[][]){\r\n\r\n    data.forEach(row => {\r\n      row.filter(val => val!==null).forEach((val,index) => {\r\n        let entity = this.entityIdMap.get(val.entityId);\r\n    //    console.log(entity.palette.colorAt(index), ' index: ', index)\r\n        val.itemStyle = {normal:{color:entity.palette.colorAt(index).toString()}};\r\n      });\r\n    });\r\n  }\r\n\r\n  //A series is a list of stacks, with one stack for each category on the x-axis\r\n  private addSeries(data:DataValue[][]){\r\n    //Make sure data is a 2D array (all rows should have the same length)\r\n    data = pad2D(data,null);\r\n\r\n    //Reverse the rows, so the first objects show at the top of the chart instead of the bottom\r\n    data.forEach(row => row.reverse());\r\n\r\n    //Set the correct colors\r\n    this.setColors(data);\r\n // console.log('data: ', data);\r\n    //Rotate the data array\r\n    let transpose = m => m[0].map((x,i) => m.map(x => x[i]));\r\n    data = transpose(data);\r\n\r\n    //Put data in chart\r\n    let stack = Math.random();\r\n    data.forEach(row => {\r\n      let series = {\r\n        type:'bar',\r\n        stack:stack,\r\n        data:row\r\n      };\r\n      this.chartOptions.series.push(series);\r\n    });\r\n  }\r\n\r\n  //Returns the tooltip that is shown when hovering over the chart\r\n  private tooltipFormatter(params){\r\n    //If param.data is empty, then echart is passing on data from other bar stacks, ignore it\r\n    params = params.filter(param => param.data);\r\n    if(!params.length)\r\n      return;\r\n\r\n    //The factor we're hovering over\r\n    let factor:WEWFactor = this.factorIdMap.get(params[0].data.factorId);\r\n\r\n    //The entities in the category we're hovering over\r\n    let entities:ChartEntity[] = params.map(p => this.entityIdMap.get(p.data.entityId)).filter(uniqueFilter);\r\n\r\n    //List of names\r\n    let names:string[] = entities.map(entity => entity.name);\r\n\r\n    //Show sample colors if there are any samples, otherwise use any other\r\n    let markers:Map<WEWFactorClass,string/*marker html*/> = new Map();\r\n    //TODO: decide what markers to show in a less hacky way\r\n    let markerParams = params.filter(p => p.data.entityId.substr(0,6)==='sample');\r\n    if(!markerParams.length)\r\n      markerParams = params;\r\n    markerParams.forEach(p => markers.set(this.factorClassIdMap.get(p.data.factorClassId),p.marker));\r\n\r\n    //Return html to be put in the tooltip\r\n    return `<div class=\"wewChartTooltip\"><div class=\"tooltip-title\">${factor.name}</div>\r\n\t\t\t<p>\r\n\t\t\t\t<table class=\"tooltip-table\">\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th colspan=\"3\">&nbsp;</th>\r\n\t\t\t\t\t\t\t${names.map(name => `<th class=\"entity-name\">${name}</th>`).join('')}\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t${factor.classes.map(fc => `<tr>\r\n\t\t\t\t\t\t\t<td>${markers.get(fc)}</td>\r\n\t\t\t\t\t\t\t<td>${fc.code}</td>\r\n\t\t\t\t\t\t\t<td>${fc.description}</td>\r\n\t\t\t\t\t\t\t${entities.map(entity => {\r\n      let dataValue = this.dataMap.get(entity.id+fc.code);\r\n      let value = (dataValue!=null&&dataValue.value!=null)?dataValue.value.toFixed(2):'?';\r\n      return `<td>${value}</td>`\r\n    }).join('')}\r\n\t\t\t\t\t\t</tr>`).join('')}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</p></div>`;\r\n  }\r\n\r\n  //Tooltip won't show when inside some container\r\n  private tooltipPosition([mouseX,mouseY],params,dom,rect,{viewSize:[chartWidth,chartHeight],contentSize:[tooltipWidth,tooltipHeight]}){\r\n    //Get chart position\r\n    let echartDom;\r\n    if(this.echartDom===null)\r\n      this.echartDom = echartDom = dom.parentNode;\r\n    else\r\n      echartDom = this.echartDom;\r\n    let chartRect = echartDom.getBoundingClientRect();\r\n    let chartX = chartRect.left;\r\n    let chartY = chartRect.top;\r\n\r\n    //Mouse X and Y are relative to the chart, so add those together\r\n    let left = mouseX+chartX;\r\n    let top = mouseY+chartY;\r\n\r\n    //Put the middle of the tooltip above the mouse\r\n    left -= tooltipWidth/2;\r\n    //Put the tooltip above the mouse\r\n    top -= tooltipHeight + 20;\r\n\r\n    //Throw it in the body\r\n    document.body.appendChild(dom);\r\n\r\n    //Checks\r\n    if(left<0)left = 0;\r\n    if(top<0)top = 0;\r\n\r\n    return {left,top};\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <mat-card-title>Importeer WEW-lijst</mat-card-title>\\r\\n</mat-card>\\r\\n\\r\\n<!-- ToDo: handle errors nicely -->\\r\\n<mat-card *ngIf=\\\"state=='error'\\\">\\r\\n  <mat-card-title>Error</mat-card-title>\\r\\n  <mat-card-content>{{errors|json}}</mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Loading card -->\\r\\n<mat-card *ngIf=\\\"state=='loading'\\\">\\r\\n  <mat-card-title>Laden...</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    <mat-spinner></mat-spinner>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Start -->\\r\\n<mat-card *ngIf=\\\"state=='start'\\\">\\r\\n  <mat-card-title>Upload WEW soortenlijst (XLS)</mat-card-title>\\r\\n  <!-- Show file upload if the wew tables are empty -->\\r\\n  <mat-card-content *ngIf=\\\"wewTablesEmpty\\\">\\r\\n    <input type=\\\"file\\\" accept=\\\".xls, application/vnd.ms-excel\\\" (change)=\\\"fileChange($event)\\\"/>\\r\\n  </mat-card-content>\\r\\n  <!-- Show a button to empty the WEW tables if they're not -->\\r\\n  <mat-card-content *ngIf=\\\"!wewTablesEmpty\\\">\\r\\n    De WEW-lijst is al geïmporteerd.\\r\\n    <button (click)=\\\"emptyWEWTables()\\\">WEW-Lijst legen</button>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<!-- Finished, wew list is on the server -->\\r\\n<mat-card *ngIf=\\\"state=='finished'\\\">\\r\\n  <mat-card-title>Klaar</mat-card-title>\\r\\n  <mat-card-content>\\r\\n    WEW-Lijst is opgeslagen op de server.\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {trigger, style, transition, animate, group, state} from '@angular/animations';\r\n\r\nimport {WEWValue, WEWFactor, WEWFactorClass} from '../../models/wew.model';\r\nimport {ApiWewService} from '../../services/api.wew.service';\r\n\r\n\r\nimport * as XLSX from 'xlsx';\r\nimport {ApiTaxonService} from \"../../services/api.taxon.service\";\r\nimport {Taxon} from \"../../models/taxon.model\";\r\n\r\n//States the importing process can be in\r\ntype ImportState = 'anim' | 'start' | 'loading' | 'confirm' | 'finished' | 'error';\r\n\r\n@Component({\r\n  selector: 'app-wew-upload',\r\n  providers: [ApiWewService, ApiTaxonService],\r\n  templateUrl: './wew-upload.component.html',\r\n  styleUrls: ['./wew-upload.component.css'],\r\n})\r\nexport class WewUploadComponent implements OnInit {\r\n  //The current state of the import process\r\n  state: ImportState = 'loading';\r\n  //Any errors to show\r\n  errors: any[] = [];\r\n  //Are the wew tables empty?\r\n  wewTablesEmpty: boolean;\r\n\r\n  constructor(private wewApi: ApiWewService,\r\n              private taxonApi: ApiTaxonService) {\r\n    //Check if the WEW tables are empty\r\n    wewApi.areTablesEmpty().subscribe(bool => {\r\n      this.wewTablesEmpty = bool;\r\n      console.log(bool);\r\n      this.setState('start');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //Set the state of the importing process\r\n  private setState(state: ImportState) {\r\n    this.state = state;\r\n    console.log(this.state);\r\n  }\r\n\r\n\r\n  //ToDo: improve error handling\r\n  //Right now we just print the array as json on the page\r\n  public handleError(...error) {\r\n    this.setState('error');\r\n    this.errors.push(error);\r\n  }\r\n\r\n  //Empty all wew tables\r\n  public emptyWEWTables() {\r\n    this.wewApi.emptyAllTables().subscribe(bool => this.wewTablesEmpty = bool, (...params) => this.handleError(...params));\r\n  }\r\n\r\n  //A file is choses from the upload page\r\n  fileChange($event) {\r\n    this.setState('loading');\r\n    let files: FileList = $event.target.files;\r\n    let file = files.item(0);\r\n    this.handleFile(file).then(wb => this.handleWorkBook(wb)).then(({factors, values}) => this.saveData(factors, values)).catch((...params) => this.handleError(...params));\r\n  }\r\n\r\n  //Reads and parses the file and turns it into a workbook\r\n  private handleFile(file: File): Promise<XLSX.WorkBook> {\r\n    //Require by XLSX when using readAsArrayBuffer\r\n    function fixdata(data) {\r\n      let o = \"\", l = 0, w = 10240;\r\n      for (; l < data.byteLength / w; ++l)\r\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\r\n      o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\r\n      return o;\r\n    }\r\n\r\n    //Resolves when the file is parsed and available as XLSX.WorkBook\r\n    return new Promise((resolve, reject) => {\r\n      let reader = new FileReader();\r\n      let name = file.name;\r\n      reader.onload = function (e: any) {\r\n        setTimeout(() => {\r\n          let data = e.target.result;\r\n          let arr = fixdata(data);\r\n          let workbook = XLSX.read(btoa(arr), {type: 'base64'});\r\n          resolve(workbook);\r\n        });\r\n      };\r\n      reader.onerror = function (e) {\r\n        reject(e);\r\n      }\r\n\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  }\r\n\r\n  //Start work on the workbook once XLSX has parsed the file\r\n  private handleWorkBook(wb: XLSX.WorkBook): Promise<{ factors: WEWFactor[], values: Map<WEWValue, WEWFactorClass> }> {\r\n    let matrixSheet = wb.Sheets[wb.SheetNames[0]];\r\n    let factorSheet = wb.Sheets[wb.SheetNames[1]];\r\n    //Get factors from the factor sheet\r\n    let factors: WEWFactor[] = this.handleFactorSheet(factorSheet);\r\n    //Get values from the matrix sheet\r\n    let values: Promise<Map<WEWValue, WEWFactorClass>> = this.handleMatrixSheet(matrixSheet, factors);\r\n    //Resolve with all factors and values\r\n    return new Promise((resolve, reject) => {\r\n      values.then(values => resolve({factors: factors, values: values}), reject);\r\n    });\r\n  }\r\n\r\n  //Reads all the factors and classes from the sheet\r\n  private handleFactorSheet(factorSheet: XLSX.WorkSheet): WEWFactor[] {\r\n    //Turn the worksheet in a 2D array\r\n    let rows: any[] = XLSX.utils.sheet_to_json(factorSheet);\r\n    //Maps factor names to factor objects\r\n    let factorMap: Map<string/*factor name*/, WEWFactor> = new Map();\r\n    //Factor name doesn't repeat on every row, so keep track of the last one\r\n    let lastFactor: string;\r\n\r\n    rows.forEach((row, index) => {\r\n      let factor: WEWFactor;\r\n      //Row contains a new factor name, create object\r\n      if (row.factor) {\r\n        lastFactor = row.factor;\r\n        factor = new WEWFactor();\r\n        factor.name = row.factor.trim();\r\n        factor.classes = [];\r\n        factorMap.set(factor.name, factor);\r\n      }\r\n      //Use the previous one\r\n      else {\r\n        row.factor = lastFactor;\r\n        factor = factorMap.get(row.factor);\r\n      }\r\n      //Create a factor class for this row\r\n      let factorClass = new WEWFactorClass();\r\n      factorClass.code = row.code.trim();\r\n      factorClass.description = row.klasse.trim();\r\n      factorClass.description = row.klasse.trim();\r\n      factorClass.order = index;\r\n      //Store it in the current factor\r\n      factor.classes.push(factorClass);\r\n    });\r\n    //Zeldzaamheid is a special case, its rows in this sheet are not factor classes but possible values\r\n    //We don't have plans on visualizing this any time soon, so ignore it for now\r\n    factorMap.delete('zeldzaamheid');\r\n\r\n    return Array.from(factorMap.values());\r\n  }\r\n\r\n  //Reads all data from the wew matrix, maps it to taxon, factors and factorclasses\r\n  private handleMatrixSheet(matrixSheet: XLSX.WorkSheet, factors: WEWFactor[]): Promise<Map<WEWValue, WEWFactorClass>> {\r\n    //Map factor class codes to objects\r\n    let factorClassMap: Map<string, WEWFactorClass> = new Map();\r\n    factors.forEach(factor => factor.classes.forEach(cl => factorClassMap.set(cl.code, cl)));\r\n\r\n    //Convert the sheet to 2D array\r\n    let rows: any[] = XLSX.utils.sheet_to_json(matrixSheet, {raw: true, header: 1});\r\n\r\n    //Get the order of the factor classes in the columns\r\n    let factorClassColumns: WEWFactorClass[] = [];\r\n    rows[1].filter(field => field.trim().length).forEach(code => factorClassColumns.push(factorClassMap.get(code)));\r\n\r\n    //Store the short description of each factor class instead of the long one\r\n    //TODO: should we store both?\r\n    rows[2].forEach((desc, index) => {\r\n      if (index == 0)\r\n        return;\r\n      let factorClass = factorClassColumns[index - 1];\r\n      if (factorClass)\r\n        factorClass.description = desc.trim();\r\n    });\r\n\r\n    //Get the taxon\r\n    let taxonNames = rows.filter((row, index) => index > 2).map(row => row[0].trim().toLowerCase());\r\n    let taxonPr: Promise<Taxon[]> = new Promise((resolve, reject) => {\r\n      this.taxonApi.findOrCreate(taxonNames).subscribe(resolve, reject);\r\n    });\r\n\r\n    //Map taxon names to wew values\r\n    let taxonValuesMap: Map<string/*taxon name*/, WEWValue[]> = new Map();\r\n    let factorClassValuesMap: Map<WEWValue, WEWFactorClass> = new Map();\r\n\r\n    //Get all values, every row is a taxon\r\n    rows.forEach((row, index) => {\r\n      //First 3 rows of the sheet are headers, ignore them\r\n      if (index < 3)\r\n        return;\r\n\r\n      let rowValues: WEWValue[] = [];\r\n\r\n      //Store every field in this row as a WEWValue\r\n      factorClassColumns.forEach((factorClass, index) => {\r\n        let value = new WEWValue();\r\n        //'x' means null in this sheet\r\n        value.value = row[index + 1] === 'x' ? null : row[index + 1];\r\n\r\n        rowValues.push(value);\r\n        factorClassValuesMap.set(value, factorClass);\r\n      });\r\n\r\n      //Map the taxon name of this row to all values on the row\r\n      taxonValuesMap.set(row[0].trim().toLowerCase(), rowValues);\r\n    });\r\n\r\n    //Taxon are in, store their ids in the values\r\n    taxonPr.then(taxonIds => {\r\n      taxonIds.forEach(taxon => {\r\n        taxonValuesMap.get(taxon.name.trim().toLowerCase()).forEach(value => value.taxonId = taxon.id);\r\n      });\r\n    });\r\n\r\n    //Return a promise that resolves with a Map<WEWValue,WEWFactorClass>\r\n    //FactorClasses aren't saved yet, so without IDs, this map saves the relation\r\n    return new Promise((resolve, reject) => {\r\n      taxonPr.then(() => resolve(factorClassValuesMap), reject);\r\n    });\r\n  }\r\n\r\n  //Saves all data to the server\r\n  private saveData(factors: WEWFactor[], values: Map<WEWValue, WEWFactorClass>) {\r\n    let factorClassMap: Map<string/*factor class code*/, WEWFactorClass> = new Map();\r\n    //Save factors and factor classes in them\r\n    this.wewApi.saveFactors(factors).subscribe(factors => {\r\n      //Put them in the map for lookup\r\n      console.log(factors)\r\n      factors.forEach(factor => factor.classes.forEach(cl => factorClassMap.set(cl.code, cl)));\r\n\r\n      //Set factor class ids in values\r\n      values.forEach((factorClass, value) => {\r\n        value.factorClassId = factorClassMap.get(factorClass.code).id;\r\n      });\r\n\r\n      //Save values\r\n      console.log(Array.from(values.keys()));\r\n      this.wewApi.saveValues(Array.from(values.keys())).subscribe(() => {\r\n        //Show the end page\r\n        this.setState('finished');\r\n      }, (...params) => this.handleError(...params));\r\n    }, (...params) => this.handleError(...params));\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}